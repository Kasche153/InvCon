[
    {
        "func": "claimVETHReward()",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "claimVETHReward()",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "exit()",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "exit()",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "getReward()",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [
            "ori(currentEpochReward) > 0",
            "ori(currentEpochReward) == 63000000000000000000000",
            "ori(currentEpochReward) one of [63000000000000000000000]",
            "msg.sender != 0",
            "ori(_owner) != 0",
            "ori(vETH_REWARD_FRACTION_RATE) > 0",
            "ori(vETH_REWARD_FRACTION_RATE) == 21000000000000",
            "ori(vETH_REWARD_FRACTION_RATE) one of [21000000000000]",
            "ori(rewardVote) != 0",
            "ori(_totalSupply) > 0",
            "ori(lastUpdateTime) > 0",
            "ori(totalAccumulatedReward) > 0",
            "ori(totalAccumulatedReward) == 63000888888888888888888",
            "ori(totalAccumulatedReward) one of [63000888888888888888888]",
            "ori(currentEpoch) > 0",
            "ori(currentEpoch) == 1",
            "ori(currentEpoch) one of [1]",
            "ori(rewardRate) > 0",
            "ori(rewardRate) == 104166666666666666",
            "ori(rewardRate) one of [104166666666666666]",
            "ori(accumulatedStakingPower[msg.sender]) one of [0,23071822653883701929,75915089688394807862]",
            "ori(vUSD_REWARD_FRACTION_RATE) > 0",
            "ori(vUSD_REWARD_FRACTION_RATE) == 21000000000",
            "ori(vUSD_REWARD_FRACTION_RATE) one of [21000000000]",
            "ori(rewardPerTokenStored) > 0",
            "ori(Sum(lastStakeTimes[...])) > 0",
            "ori(rewards[msg.sender]) one of [0,18294359882978560561,30179177513129241804,27808908073685990863,17880874104014602453]",
            "ori(yfv) != 0",
            "ori(starttime) > 0",
            "ori(starttime) == 1598018400",
            "ori(starttime) one of [1598018400]",
            "ori(Sum(rewards[...])) > 0",
            "ori(rewardReferral) != 0",
            "ori(vUSD) != 0",
            "msg.value == 0",
            "msg.value one of [0]",
            "ori(periodFinish) > 0",
            "ori(periodFinish) == 1598623238",
            "ori(periodFinish) one of [1598623238]",
            "ori(vETH) != 0",
            "ori(Sum(_balances[...])) > 0",
            "ori(Sum(userRewardPerTokenPaid[...])) > 0",
            "ori(userRewardPerTokenPaid[msg.sender]) <= ori(currentEpochReward)",
            "ori(userRewardPerTokenPaid[msg.sender]) < ori(currentEpochReward)",
            "ori(userRewardPerTokenPaid[msg.sender]) != ori(currentEpochReward)",
            "ori(userRewardPerTokenPaid[msg.sender]) != ori(vETH_REWARD_FRACTION_RATE)",
            "ori(userRewardPerTokenPaid[msg.sender]) <= ori(_totalSupply)",
            "ori(userRewardPerTokenPaid[msg.sender]) < ori(_totalSupply)",
            "ori(userRewardPerTokenPaid[msg.sender]) != ori(_totalSupply)",
            "ori(userRewardPerTokenPaid[msg.sender]) != ori(lastUpdateTime)",
            "ori(userRewardPerTokenPaid[msg.sender]) <= ori(totalAccumulatedReward)",
            "ori(userRewardPerTokenPaid[msg.sender]) < ori(totalAccumulatedReward)",
            "ori(userRewardPerTokenPaid[msg.sender]) != ori(totalAccumulatedReward)",
            "ori(userRewardPerTokenPaid[msg.sender]) != ori(currentEpoch)",
            "ori(userRewardPerTokenPaid[msg.sender]) <= ori(rewardRate)",
            "ori(userRewardPerTokenPaid[msg.sender]) < ori(rewardRate)",
            "ori(userRewardPerTokenPaid[msg.sender]) != ori(rewardRate)",
            "ori(userRewardPerTokenPaid[msg.sender]) != ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(userRewardPerTokenPaid[msg.sender]) <= ori(rewardPerTokenStored)",
            "ori(userRewardPerTokenPaid[msg.sender]) < ori(rewardPerTokenStored)",
            "ori(userRewardPerTokenPaid[msg.sender]) != ori(rewardPerTokenStored)",
            "ori(userRewardPerTokenPaid[msg.sender]) != ori(Sum(lastStakeTimes[...]))",
            "ori(userRewardPerTokenPaid[msg.sender]) != ori(Sum(accumulatedStakingPower[...]))",
            "ori(userRewardPerTokenPaid[msg.sender]) != ori(starttime)",
            "ori(userRewardPerTokenPaid[msg.sender]) <= ori(Sum(rewards[...]))",
            "ori(userRewardPerTokenPaid[msg.sender]) < ori(Sum(rewards[...]))",
            "ori(userRewardPerTokenPaid[msg.sender]) != ori(Sum(rewards[...]))",
            "ori(userRewardPerTokenPaid[msg.sender]) >= msg.value",
            "ori(userRewardPerTokenPaid[msg.sender]) != ori(periodFinish)",
            "ori(userRewardPerTokenPaid[msg.sender]) <= ori(Sum(_balances[...]))",
            "ori(userRewardPerTokenPaid[msg.sender]) < ori(Sum(_balances[...]))",
            "ori(userRewardPerTokenPaid[msg.sender]) != ori(Sum(_balances[...]))",
            "ori(userRewardPerTokenPaid[msg.sender]) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(userRewardPerTokenPaid[msg.sender]) < ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(userRewardPerTokenPaid[msg.sender]) != ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(currentEpochReward) >= ori(vETH_REWARD_FRACTION_RATE)",
            "ori(currentEpochReward) > ori(vETH_REWARD_FRACTION_RATE)",
            "ori(currentEpochReward) != ori(vETH_REWARD_FRACTION_RATE)",
            "ori(currentEpochReward) != ori(_totalSupply)",
            "ori(currentEpochReward) >= ori(lastUpdateTime)",
            "ori(currentEpochReward) > ori(lastUpdateTime)",
            "ori(currentEpochReward) != ori(lastUpdateTime)",
            "ori(currentEpochReward) <= ori(totalAccumulatedReward)",
            "ori(currentEpochReward) < ori(totalAccumulatedReward)",
            "ori(currentEpochReward) != ori(totalAccumulatedReward)",
            "ori(currentEpochReward) >= ori(currentEpoch)",
            "ori(currentEpochReward) > ori(currentEpoch)",
            "ori(currentEpochReward) != ori(currentEpoch)",
            "ori(currentEpochReward) >= ori(rewardRate)",
            "ori(currentEpochReward) > ori(rewardRate)",
            "ori(currentEpochReward) != ori(rewardRate)",
            "ori(currentEpochReward) >= ori(accumulatedStakingPower[msg.sender])",
            "ori(currentEpochReward) > ori(accumulatedStakingPower[msg.sender])",
            "ori(currentEpochReward) != ori(accumulatedStakingPower[msg.sender])",
            "ori(currentEpochReward) >= ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(currentEpochReward) > ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(currentEpochReward) != ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(currentEpochReward) >= ori(rewardPerTokenStored)",
            "ori(currentEpochReward) > ori(rewardPerTokenStored)",
            "ori(currentEpochReward) != ori(rewardPerTokenStored)",
            "ori(currentEpochReward) >= ori(Sum(lastStakeTimes[...]))",
            "ori(currentEpochReward) > ori(Sum(lastStakeTimes[...]))",
            "ori(currentEpochReward) != ori(Sum(lastStakeTimes[...]))",
            "ori(currentEpochReward) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(currentEpochReward) > ori(Sum(accumulatedStakingPower[...]))",
            "ori(currentEpochReward) != ori(Sum(accumulatedStakingPower[...]))",
            "ori(currentEpochReward) >= ori(rewards[msg.sender])",
            "ori(currentEpochReward) > ori(rewards[msg.sender])",
            "ori(currentEpochReward) != ori(rewards[msg.sender])",
            "ori(currentEpochReward) >= ori(starttime)",
            "ori(currentEpochReward) > ori(starttime)",
            "ori(currentEpochReward) != ori(starttime)",
            "ori(currentEpochReward) >= ori(Sum(rewards[...]))",
            "ori(currentEpochReward) > ori(Sum(rewards[...]))",
            "ori(currentEpochReward) != ori(Sum(rewards[...]))",
            "ori(currentEpochReward) >= msg.value",
            "ori(currentEpochReward) > msg.value",
            "ori(currentEpochReward) != msg.value",
            "ori(currentEpochReward) >= ori(periodFinish)",
            "ori(currentEpochReward) > ori(periodFinish)",
            "ori(currentEpochReward) != ori(periodFinish)",
            "ori(currentEpochReward) != ori(Sum(_balances[...]))",
            "ori(currentEpochReward) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(currentEpochReward) > ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(currentEpochReward) != ori(Sum(userRewardPerTokenPaid[...]))",
            "msg.sender != ori(_owner)",
            "msg.sender != ori(rewardVote)",
            "msg.sender != ori(yfv)",
            "msg.sender != ori(rewardReferral)",
            "msg.sender != ori(vUSD)",
            "msg.sender != ori(vETH)",
            "ori(_owner) != ori(rewardVote)",
            "ori(_owner) != ori(yfv)",
            "ori(_owner) != ori(rewardReferral)",
            "ori(_owner) != ori(vUSD)",
            "ori(_owner) != ori(vETH)",
            "ori(vETH_REWARD_FRACTION_RATE) <= ori(_totalSupply)",
            "ori(vETH_REWARD_FRACTION_RATE) < ori(_totalSupply)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(_totalSupply)",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(lastUpdateTime)",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(lastUpdateTime)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(lastUpdateTime)",
            "ori(vETH_REWARD_FRACTION_RATE) <= ori(totalAccumulatedReward)",
            "ori(vETH_REWARD_FRACTION_RATE) < ori(totalAccumulatedReward)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(totalAccumulatedReward)",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(currentEpoch)",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(currentEpoch)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(currentEpoch)",
            "ori(vETH_REWARD_FRACTION_RATE) <= ori(rewardRate)",
            "ori(vETH_REWARD_FRACTION_RATE) < ori(rewardRate)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(rewardRate)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(accumulatedStakingPower[msg.sender])",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(vETH_REWARD_FRACTION_RATE) <= ori(rewardPerTokenStored)",
            "ori(vETH_REWARD_FRACTION_RATE) < ori(rewardPerTokenStored)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(rewardPerTokenStored)",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(Sum(lastStakeTimes[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(Sum(lastStakeTimes[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(Sum(lastStakeTimes[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(Sum(accumulatedStakingPower[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(rewards[msg.sender])",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(starttime)",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(starttime)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(starttime)",
            "ori(vETH_REWARD_FRACTION_RATE) <= ori(Sum(rewards[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) < ori(Sum(rewards[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(Sum(rewards[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) >= msg.value",
            "ori(vETH_REWARD_FRACTION_RATE) > msg.value",
            "ori(vETH_REWARD_FRACTION_RATE) != msg.value",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(periodFinish)",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(periodFinish)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(periodFinish)",
            "ori(vETH_REWARD_FRACTION_RATE) <= ori(Sum(_balances[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) < ori(Sum(_balances[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(Sum(_balances[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) < ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(rewardVote) != ori(yfv)",
            "ori(rewardVote) != ori(rewardReferral)",
            "ori(rewardVote) != ori(vUSD)",
            "ori(rewardVote) != ori(vETH)",
            "ori(_totalSupply) >= ori(lastUpdateTime)",
            "ori(_totalSupply) > ori(lastUpdateTime)",
            "ori(_totalSupply) != ori(lastUpdateTime)",
            "ori(_totalSupply) != ori(totalAccumulatedReward)",
            "ori(_totalSupply) >= ori(currentEpoch)",
            "ori(_totalSupply) > ori(currentEpoch)",
            "ori(_totalSupply) != ori(currentEpoch)",
            "ori(_totalSupply) >= ori(rewardRate)",
            "ori(_totalSupply) > ori(rewardRate)",
            "ori(_totalSupply) != ori(rewardRate)",
            "ori(_totalSupply) >= ori(accumulatedStakingPower[msg.sender])",
            "ori(_totalSupply) > ori(accumulatedStakingPower[msg.sender])",
            "ori(_totalSupply) != ori(accumulatedStakingPower[msg.sender])",
            "ori(_totalSupply) >= ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(_totalSupply) > ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(_totalSupply) != ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(_totalSupply) >= ori(rewardPerTokenStored)",
            "ori(_totalSupply) > ori(rewardPerTokenStored)",
            "ori(_totalSupply) != ori(rewardPerTokenStored)",
            "ori(_totalSupply) >= ori(Sum(lastStakeTimes[...]))",
            "ori(_totalSupply) > ori(Sum(lastStakeTimes[...]))",
            "ori(_totalSupply) != ori(Sum(lastStakeTimes[...]))",
            "ori(_totalSupply) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(_totalSupply) > ori(Sum(accumulatedStakingPower[...]))",
            "ori(_totalSupply) != ori(Sum(accumulatedStakingPower[...]))",
            "ori(_totalSupply) >= ori(rewards[msg.sender])",
            "ori(_totalSupply) > ori(rewards[msg.sender])",
            "ori(_totalSupply) != ori(rewards[msg.sender])",
            "ori(_totalSupply) >= ori(starttime)",
            "ori(_totalSupply) > ori(starttime)",
            "ori(_totalSupply) != ori(starttime)",
            "ori(_totalSupply) >= ori(Sum(rewards[...]))",
            "ori(_totalSupply) > ori(Sum(rewards[...]))",
            "ori(_totalSupply) != ori(Sum(rewards[...]))",
            "ori(_totalSupply) >= msg.value",
            "ori(_totalSupply) > msg.value",
            "ori(_totalSupply) != msg.value",
            "ori(_totalSupply) >= ori(periodFinish)",
            "ori(_totalSupply) > ori(periodFinish)",
            "ori(_totalSupply) != ori(periodFinish)",
            "ori(_totalSupply) == ori(Sum(_balances[...]))",
            "ori(_totalSupply) >= ori(Sum(_balances[...]))",
            "ori(_totalSupply) <= ori(Sum(_balances[...]))",
            "ori(_totalSupply) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(_totalSupply) > ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(_totalSupply) != ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(lastUpdateTime) <= ori(totalAccumulatedReward)",
            "ori(lastUpdateTime) < ori(totalAccumulatedReward)",
            "ori(lastUpdateTime) != ori(totalAccumulatedReward)",
            "ori(lastUpdateTime) >= ori(currentEpoch)",
            "ori(lastUpdateTime) > ori(currentEpoch)",
            "ori(lastUpdateTime) != ori(currentEpoch)",
            "ori(lastUpdateTime) <= ori(rewardRate)",
            "ori(lastUpdateTime) < ori(rewardRate)",
            "ori(lastUpdateTime) != ori(rewardRate)",
            "ori(lastUpdateTime) != ori(accumulatedStakingPower[msg.sender])",
            "ori(lastUpdateTime) <= ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(lastUpdateTime) < ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(lastUpdateTime) != ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(lastUpdateTime) <= ori(rewardPerTokenStored)",
            "ori(lastUpdateTime) < ori(rewardPerTokenStored)",
            "ori(lastUpdateTime) != ori(rewardPerTokenStored)",
            "ori(lastUpdateTime) <= ori(Sum(lastStakeTimes[...]))",
            "ori(lastUpdateTime) < ori(Sum(lastStakeTimes[...]))",
            "ori(lastUpdateTime) != ori(Sum(lastStakeTimes[...]))",
            "ori(lastUpdateTime) != ori(Sum(accumulatedStakingPower[...]))",
            "ori(lastUpdateTime) != ori(rewards[msg.sender])",
            "ori(lastUpdateTime) >= ori(starttime)",
            "ori(lastUpdateTime) > ori(starttime)",
            "ori(lastUpdateTime) != ori(starttime)",
            "ori(lastUpdateTime) <= ori(Sum(rewards[...]))",
            "ori(lastUpdateTime) < ori(Sum(rewards[...]))",
            "ori(lastUpdateTime) != ori(Sum(rewards[...]))",
            "ori(lastUpdateTime) >= msg.value",
            "ori(lastUpdateTime) > msg.value",
            "ori(lastUpdateTime) != msg.value",
            "ori(lastUpdateTime) <= ori(periodFinish)",
            "ori(lastUpdateTime) < ori(periodFinish)",
            "ori(lastUpdateTime) != ori(periodFinish)",
            "ori(lastUpdateTime) <= ori(Sum(_balances[...]))",
            "ori(lastUpdateTime) < ori(Sum(_balances[...]))",
            "ori(lastUpdateTime) != ori(Sum(_balances[...]))",
            "ori(lastUpdateTime) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(lastUpdateTime) < ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(lastUpdateTime) != ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(totalAccumulatedReward) >= ori(currentEpoch)",
            "ori(totalAccumulatedReward) > ori(currentEpoch)",
            "ori(totalAccumulatedReward) != ori(currentEpoch)",
            "ori(totalAccumulatedReward) >= ori(rewardRate)",
            "ori(totalAccumulatedReward) > ori(rewardRate)",
            "ori(totalAccumulatedReward) != ori(rewardRate)",
            "ori(totalAccumulatedReward) >= ori(accumulatedStakingPower[msg.sender])",
            "ori(totalAccumulatedReward) > ori(accumulatedStakingPower[msg.sender])",
            "ori(totalAccumulatedReward) != ori(accumulatedStakingPower[msg.sender])",
            "ori(totalAccumulatedReward) >= ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(totalAccumulatedReward) > ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(totalAccumulatedReward) != ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(totalAccumulatedReward) >= ori(rewardPerTokenStored)",
            "ori(totalAccumulatedReward) > ori(rewardPerTokenStored)",
            "ori(totalAccumulatedReward) != ori(rewardPerTokenStored)",
            "ori(totalAccumulatedReward) >= ori(Sum(lastStakeTimes[...]))",
            "ori(totalAccumulatedReward) > ori(Sum(lastStakeTimes[...]))",
            "ori(totalAccumulatedReward) != ori(Sum(lastStakeTimes[...]))",
            "ori(totalAccumulatedReward) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(totalAccumulatedReward) > ori(Sum(accumulatedStakingPower[...]))",
            "ori(totalAccumulatedReward) != ori(Sum(accumulatedStakingPower[...]))",
            "ori(totalAccumulatedReward) >= ori(rewards[msg.sender])",
            "ori(totalAccumulatedReward) > ori(rewards[msg.sender])",
            "ori(totalAccumulatedReward) != ori(rewards[msg.sender])",
            "ori(totalAccumulatedReward) >= ori(starttime)",
            "ori(totalAccumulatedReward) > ori(starttime)",
            "ori(totalAccumulatedReward) != ori(starttime)",
            "ori(totalAccumulatedReward) >= ori(Sum(rewards[...]))",
            "ori(totalAccumulatedReward) > ori(Sum(rewards[...]))",
            "ori(totalAccumulatedReward) != ori(Sum(rewards[...]))",
            "ori(totalAccumulatedReward) >= msg.value",
            "ori(totalAccumulatedReward) > msg.value",
            "ori(totalAccumulatedReward) != msg.value",
            "ori(totalAccumulatedReward) >= ori(periodFinish)",
            "ori(totalAccumulatedReward) > ori(periodFinish)",
            "ori(totalAccumulatedReward) != ori(periodFinish)",
            "ori(totalAccumulatedReward) != ori(Sum(_balances[...]))",
            "ori(totalAccumulatedReward) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(totalAccumulatedReward) > ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(totalAccumulatedReward) != ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(currentEpoch) <= ori(rewardRate)",
            "ori(currentEpoch) < ori(rewardRate)",
            "ori(currentEpoch) != ori(rewardRate)",
            "ori(currentEpoch) != ori(accumulatedStakingPower[msg.sender])",
            "ori(currentEpoch) <= ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(currentEpoch) < ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(currentEpoch) != ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(currentEpoch) <= ori(rewardPerTokenStored)",
            "ori(currentEpoch) < ori(rewardPerTokenStored)",
            "ori(currentEpoch) != ori(rewardPerTokenStored)",
            "ori(currentEpoch) <= ori(Sum(lastStakeTimes[...]))",
            "ori(currentEpoch) < ori(Sum(lastStakeTimes[...]))",
            "ori(currentEpoch) != ori(Sum(lastStakeTimes[...]))",
            "ori(currentEpoch) != ori(Sum(accumulatedStakingPower[...]))",
            "ori(currentEpoch) != ori(rewards[msg.sender])",
            "ori(currentEpoch) <= ori(starttime)",
            "ori(currentEpoch) < ori(starttime)",
            "ori(currentEpoch) != ori(starttime)",
            "ori(currentEpoch) <= ori(Sum(rewards[...]))",
            "ori(currentEpoch) < ori(Sum(rewards[...]))",
            "ori(currentEpoch) != ori(Sum(rewards[...]))",
            "ori(currentEpoch) == msg.value + 1",
            "ori(currentEpoch) >= msg.value",
            "ori(currentEpoch) > msg.value",
            "ori(currentEpoch) != msg.value",
            "ori(currentEpoch) <= ori(periodFinish)",
            "ori(currentEpoch) < ori(periodFinish)",
            "ori(currentEpoch) != ori(periodFinish)",
            "ori(currentEpoch) <= ori(Sum(_balances[...]))",
            "ori(currentEpoch) < ori(Sum(_balances[...]))",
            "ori(currentEpoch) != ori(Sum(_balances[...]))",
            "ori(currentEpoch) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(currentEpoch) < ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(currentEpoch) != ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(rewardRate) != ori(accumulatedStakingPower[msg.sender])",
            "ori(rewardRate) >= ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(rewardRate) > ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(rewardRate) != ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(rewardRate) >= ori(rewardPerTokenStored)",
            "ori(rewardRate) > ori(rewardPerTokenStored)",
            "ori(rewardRate) != ori(rewardPerTokenStored)",
            "ori(rewardRate) >= ori(Sum(lastStakeTimes[...]))",
            "ori(rewardRate) > ori(Sum(lastStakeTimes[...]))",
            "ori(rewardRate) != ori(Sum(lastStakeTimes[...]))",
            "ori(rewardRate) != ori(Sum(accumulatedStakingPower[...]))",
            "ori(rewardRate) != ori(rewards[msg.sender])",
            "ori(rewardRate) >= ori(starttime)",
            "ori(rewardRate) > ori(starttime)",
            "ori(rewardRate) != ori(starttime)",
            "ori(rewardRate) <= ori(Sum(rewards[...]))",
            "ori(rewardRate) < ori(Sum(rewards[...]))",
            "ori(rewardRate) != ori(Sum(rewards[...]))",
            "ori(rewardRate) >= msg.value",
            "ori(rewardRate) > msg.value",
            "ori(rewardRate) != msg.value",
            "ori(rewardRate) >= ori(periodFinish)",
            "ori(rewardRate) > ori(periodFinish)",
            "ori(rewardRate) != ori(periodFinish)",
            "ori(rewardRate) <= ori(Sum(_balances[...]))",
            "ori(rewardRate) < ori(Sum(_balances[...]))",
            "ori(rewardRate) != ori(Sum(_balances[...]))",
            "ori(rewardRate) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(rewardRate) < ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(rewardRate) != ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(accumulatedStakingPower[msg.sender]) != ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(accumulatedStakingPower[msg.sender]) != ori(rewardPerTokenStored)",
            "ori(accumulatedStakingPower[msg.sender]) != ori(Sum(lastStakeTimes[...]))",
            "ori(accumulatedStakingPower[msg.sender]) <= ori(Sum(accumulatedStakingPower[...]))",
            "ori(accumulatedStakingPower[msg.sender]) != ori(starttime)",
            "ori(accumulatedStakingPower[msg.sender]) <= ori(Sum(rewards[...]))",
            "ori(accumulatedStakingPower[msg.sender]) < ori(Sum(rewards[...]))",
            "ori(accumulatedStakingPower[msg.sender]) != ori(Sum(rewards[...]))",
            "ori(accumulatedStakingPower[msg.sender]) >= msg.value",
            "ori(accumulatedStakingPower[msg.sender]) != ori(periodFinish)",
            "ori(accumulatedStakingPower[msg.sender]) <= ori(Sum(_balances[...]))",
            "ori(accumulatedStakingPower[msg.sender]) < ori(Sum(_balances[...]))",
            "ori(accumulatedStakingPower[msg.sender]) != ori(Sum(_balances[...]))",
            "ori(accumulatedStakingPower[msg.sender]) != ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) <= ori(rewardPerTokenStored)",
            "ori(vUSD_REWARD_FRACTION_RATE) < ori(rewardPerTokenStored)",
            "ori(vUSD_REWARD_FRACTION_RATE) != ori(rewardPerTokenStored)",
            "ori(vUSD_REWARD_FRACTION_RATE) <= ori(Sum(lastStakeTimes[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) < ori(Sum(lastStakeTimes[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) != ori(Sum(lastStakeTimes[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) != ori(Sum(accumulatedStakingPower[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) != ori(rewards[msg.sender])",
            "ori(vUSD_REWARD_FRACTION_RATE) >= ori(starttime)",
            "ori(vUSD_REWARD_FRACTION_RATE) > ori(starttime)",
            "ori(vUSD_REWARD_FRACTION_RATE) != ori(starttime)",
            "ori(vUSD_REWARD_FRACTION_RATE) <= ori(Sum(rewards[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) < ori(Sum(rewards[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) != ori(Sum(rewards[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) >= msg.value",
            "ori(vUSD_REWARD_FRACTION_RATE) > msg.value",
            "ori(vUSD_REWARD_FRACTION_RATE) != msg.value",
            "ori(vUSD_REWARD_FRACTION_RATE) >= ori(periodFinish)",
            "ori(vUSD_REWARD_FRACTION_RATE) > ori(periodFinish)",
            "ori(vUSD_REWARD_FRACTION_RATE) != ori(periodFinish)",
            "ori(vUSD_REWARD_FRACTION_RATE) <= ori(Sum(_balances[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) < ori(Sum(_balances[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) != ori(Sum(_balances[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) < ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) != ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(rewardPerTokenStored) >= ori(Sum(lastStakeTimes[...]))",
            "ori(rewardPerTokenStored) > ori(Sum(lastStakeTimes[...]))",
            "ori(rewardPerTokenStored) != ori(Sum(lastStakeTimes[...]))",
            "ori(rewardPerTokenStored) != ori(Sum(accumulatedStakingPower[...]))",
            "ori(rewardPerTokenStored) != ori(rewards[msg.sender])",
            "ori(rewardPerTokenStored) >= ori(starttime)",
            "ori(rewardPerTokenStored) > ori(starttime)",
            "ori(rewardPerTokenStored) != ori(starttime)",
            "ori(rewardPerTokenStored) <= ori(Sum(rewards[...]))",
            "ori(rewardPerTokenStored) < ori(Sum(rewards[...]))",
            "ori(rewardPerTokenStored) != ori(Sum(rewards[...]))",
            "ori(rewardPerTokenStored) >= msg.value",
            "ori(rewardPerTokenStored) > msg.value",
            "ori(rewardPerTokenStored) != msg.value",
            "ori(rewardPerTokenStored) >= ori(periodFinish)",
            "ori(rewardPerTokenStored) > ori(periodFinish)",
            "ori(rewardPerTokenStored) != ori(periodFinish)",
            "ori(rewardPerTokenStored) <= ori(Sum(_balances[...]))",
            "ori(rewardPerTokenStored) < ori(Sum(_balances[...]))",
            "ori(rewardPerTokenStored) != ori(Sum(_balances[...]))",
            "ori(rewardPerTokenStored) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(rewardPerTokenStored) < ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(rewardPerTokenStored) != ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(lastStakeTimes[...])) != ori(Sum(accumulatedStakingPower[...]))",
            "ori(Sum(lastStakeTimes[...])) != ori(rewards[msg.sender])",
            "ori(Sum(lastStakeTimes[...])) >= ori(starttime)",
            "ori(Sum(lastStakeTimes[...])) > ori(starttime)",
            "ori(Sum(lastStakeTimes[...])) != ori(starttime)",
            "ori(Sum(lastStakeTimes[...])) <= ori(Sum(rewards[...]))",
            "ori(Sum(lastStakeTimes[...])) < ori(Sum(rewards[...]))",
            "ori(Sum(lastStakeTimes[...])) != ori(Sum(rewards[...]))",
            "ori(Sum(lastStakeTimes[...])) >= msg.value",
            "ori(Sum(lastStakeTimes[...])) > msg.value",
            "ori(Sum(lastStakeTimes[...])) != msg.value",
            "ori(Sum(lastStakeTimes[...])) >= ori(periodFinish)",
            "ori(Sum(lastStakeTimes[...])) > ori(periodFinish)",
            "ori(Sum(lastStakeTimes[...])) != ori(periodFinish)",
            "ori(Sum(lastStakeTimes[...])) <= ori(Sum(_balances[...]))",
            "ori(Sum(lastStakeTimes[...])) < ori(Sum(_balances[...]))",
            "ori(Sum(lastStakeTimes[...])) != ori(Sum(_balances[...]))",
            "ori(Sum(lastStakeTimes[...])) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(lastStakeTimes[...])) < ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(lastStakeTimes[...])) != ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(accumulatedStakingPower[...])) != ori(rewards[msg.sender])",
            "ori(Sum(accumulatedStakingPower[...])) != ori(starttime)",
            "ori(Sum(accumulatedStakingPower[...])) != ori(Sum(rewards[...]))",
            "ori(Sum(accumulatedStakingPower[...])) >= msg.value",
            "ori(Sum(accumulatedStakingPower[...])) != ori(periodFinish)",
            "ori(Sum(accumulatedStakingPower[...])) <= ori(Sum(_balances[...]))",
            "ori(Sum(accumulatedStakingPower[...])) < ori(Sum(_balances[...]))",
            "ori(Sum(accumulatedStakingPower[...])) != ori(Sum(_balances[...]))",
            "ori(Sum(accumulatedStakingPower[...])) != ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(rewards[msg.sender]) != ori(starttime)",
            "ori(rewards[msg.sender]) <= ori(Sum(rewards[...]))",
            "ori(rewards[msg.sender]) < ori(Sum(rewards[...]))",
            "ori(rewards[msg.sender]) != ori(Sum(rewards[...]))",
            "ori(rewards[msg.sender]) >= msg.value",
            "ori(rewards[msg.sender]) != ori(periodFinish)",
            "ori(rewards[msg.sender]) <= ori(Sum(_balances[...]))",
            "ori(rewards[msg.sender]) < ori(Sum(_balances[...]))",
            "ori(rewards[msg.sender]) != ori(Sum(_balances[...]))",
            "ori(rewards[msg.sender]) != ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(yfv) != ori(rewardReferral)",
            "ori(yfv) != ori(vUSD)",
            "ori(yfv) != ori(vETH)",
            "ori(starttime) <= ori(Sum(rewards[...]))",
            "ori(starttime) < ori(Sum(rewards[...]))",
            "ori(starttime) != ori(Sum(rewards[...]))",
            "ori(starttime) >= msg.value",
            "ori(starttime) > msg.value",
            "ori(starttime) != msg.value",
            "ori(starttime) <= ori(periodFinish)",
            "ori(starttime) < ori(periodFinish)",
            "ori(starttime) != ori(periodFinish)",
            "ori(starttime) <= ori(Sum(_balances[...]))",
            "ori(starttime) < ori(Sum(_balances[...]))",
            "ori(starttime) != ori(Sum(_balances[...]))",
            "ori(starttime) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(starttime) < ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(starttime) != ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(rewards[...])) >= msg.value",
            "ori(Sum(rewards[...])) > msg.value",
            "ori(Sum(rewards[...])) != msg.value",
            "ori(Sum(rewards[...])) >= ori(periodFinish)",
            "ori(Sum(rewards[...])) > ori(periodFinish)",
            "ori(Sum(rewards[...])) != ori(periodFinish)",
            "ori(Sum(rewards[...])) <= ori(Sum(_balances[...]))",
            "ori(Sum(rewards[...])) < ori(Sum(_balances[...]))",
            "ori(Sum(rewards[...])) != ori(Sum(_balances[...]))",
            "ori(Sum(rewards[...])) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(rewards[...])) > ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(rewards[...])) != ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(rewardReferral) != ori(vUSD)",
            "ori(rewardReferral) != ori(vETH)",
            "ori(vUSD) != ori(vETH)",
            "msg.value <= ori(periodFinish)",
            "msg.value < ori(periodFinish)",
            "msg.value != ori(periodFinish)",
            "msg.value <= ori(Sum(_balances[...]))",
            "msg.value < ori(Sum(_balances[...]))",
            "msg.value != ori(Sum(_balances[...]))",
            "msg.value <= ori(Sum(userRewardPerTokenPaid[...]))",
            "msg.value < ori(Sum(userRewardPerTokenPaid[...]))",
            "msg.value != ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(periodFinish) <= ori(Sum(_balances[...]))",
            "ori(periodFinish) < ori(Sum(_balances[...]))",
            "ori(periodFinish) != ori(Sum(_balances[...]))",
            "ori(periodFinish) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(periodFinish) < ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(periodFinish) != ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(_balances[...])) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(_balances[...])) > ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(_balances[...])) != ori(Sum(userRewardPerTokenPaid[...]))"
        ],
        "postconditions": [
            "Sum(accumulatedStakingPower[...]) > 0",
            "_totalSupply > 0",
            "vUSD != 0",
            "lastUpdateTime > 0",
            "rewardVote != 0",
            "currentEpoch > 0",
            "currentEpoch == 1",
            "currentEpoch one of [1]",
            "_owner != 0",
            "elem of accumulatedStakingPower[...] is one of [76208801116395750020]",
            "yfv != 0",
            "periodFinish > 0",
            "periodFinish == 1598623238",
            "periodFinish one of [1598623238]",
            "rewardRate > 0",
            "rewardRate == 104166666666666666",
            "rewardRate one of [104166666666666666]",
            "elem of lastStakeTimes[...] is one of [271666478752]",
            "rewards[msg.sender] == 0",
            "rewards[msg.sender] one of [0]",
            "rewardPerTokenStored > 0",
            "elem of userRewardPerTokenPaid[...] is one of [1218808737395198496]",
            "Sum(_balances[...]) > 0",
            "elem of _balances[...] is one of [82306992373646849545554]",
            "rewardReferral != 0",
            "starttime > 0",
            "starttime == 1598018400",
            "starttime one of [1598018400]",
            "userRewardPerTokenPaid[msg.sender] > 0",
            "vETH_REWARD_FRACTION_RATE > 0",
            "vETH_REWARD_FRACTION_RATE == 21000000000000",
            "vETH_REWARD_FRACTION_RATE one of [21000000000000]",
            "currentEpochReward > 0",
            "currentEpochReward == 63000000000000000000000",
            "currentEpochReward one of [63000000000000000000000]",
            "Sum(userRewardPerTokenPaid[...]) > 0",
            "Sum(lastStakeTimes[...]) > 0",
            "vETH != 0",
            "Sum(rewards[...]) > 0",
            "vUSD_REWARD_FRACTION_RATE > 0",
            "vUSD_REWARD_FRACTION_RATE == 21000000000",
            "vUSD_REWARD_FRACTION_RATE one of [21000000000]",
            "elem of rewards[...] is one of [29382934998179780183]",
            "totalAccumulatedReward > 0",
            "totalAccumulatedReward == 63000888888888888888888",
            "totalAccumulatedReward one of [63000888888888888888888]",
            "Sum(accumulatedStakingPower[...]) >= ori(userRewardPerTokenPaid[msg.sender])",
            "Sum(accumulatedStakingPower[...]) > ori(userRewardPerTokenPaid[msg.sender])",
            "Sum(accumulatedStakingPower[...]) != ori(userRewardPerTokenPaid[msg.sender])",
            "Sum(accumulatedStakingPower[...]) <= _totalSupply",
            "Sum(accumulatedStakingPower[...]) < _totalSupply",
            "Sum(accumulatedStakingPower[...]) != _totalSupply",
            "Sum(accumulatedStakingPower[...]) >= lastUpdateTime",
            "Sum(accumulatedStakingPower[...]) > lastUpdateTime",
            "Sum(accumulatedStakingPower[...]) != lastUpdateTime",
            "Sum(accumulatedStakingPower[...]) <= ori(currentEpochReward)",
            "Sum(accumulatedStakingPower[...]) < ori(currentEpochReward)",
            "Sum(accumulatedStakingPower[...]) != ori(currentEpochReward)",
            "Sum(accumulatedStakingPower[...]) >= currentEpoch",
            "Sum(accumulatedStakingPower[...]) > currentEpoch",
            "Sum(accumulatedStakingPower[...]) != currentEpoch",
            "Sum(accumulatedStakingPower[...]) >= ori(vETH_REWARD_FRACTION_RATE)",
            "Sum(accumulatedStakingPower[...]) > ori(vETH_REWARD_FRACTION_RATE)",
            "Sum(accumulatedStakingPower[...]) != ori(vETH_REWARD_FRACTION_RATE)",
            "Sum(accumulatedStakingPower[...]) >= periodFinish",
            "Sum(accumulatedStakingPower[...]) > periodFinish",
            "Sum(accumulatedStakingPower[...]) != periodFinish",
            "Sum(accumulatedStakingPower[...]) >= rewardRate",
            "Sum(accumulatedStakingPower[...]) > rewardRate",
            "Sum(accumulatedStakingPower[...]) != rewardRate",
            "Sum(accumulatedStakingPower[...]) <= ori(_totalSupply)",
            "Sum(accumulatedStakingPower[...]) < ori(_totalSupply)",
            "Sum(accumulatedStakingPower[...]) != ori(_totalSupply)",
            "Sum(accumulatedStakingPower[...]) >= rewards[msg.sender]",
            "Sum(accumulatedStakingPower[...]) > rewards[msg.sender]",
            "Sum(accumulatedStakingPower[...]) != rewards[msg.sender]",
            "Sum(accumulatedStakingPower[...]) >= ori(lastUpdateTime)",
            "Sum(accumulatedStakingPower[...]) > ori(lastUpdateTime)",
            "Sum(accumulatedStakingPower[...]) != ori(lastUpdateTime)",
            "Sum(accumulatedStakingPower[...]) >= rewardPerTokenStored",
            "Sum(accumulatedStakingPower[...]) > rewardPerTokenStored",
            "Sum(accumulatedStakingPower[...]) != rewardPerTokenStored",
            "Sum(accumulatedStakingPower[...]) <= Sum(_balances[...])",
            "Sum(accumulatedStakingPower[...]) < Sum(_balances[...])",
            "Sum(accumulatedStakingPower[...]) != Sum(_balances[...])",
            "Sum(accumulatedStakingPower[...]) <= ori(totalAccumulatedReward)",
            "Sum(accumulatedStakingPower[...]) < ori(totalAccumulatedReward)",
            "Sum(accumulatedStakingPower[...]) != ori(totalAccumulatedReward)",
            "Sum(accumulatedStakingPower[...]) >= ori(currentEpoch)",
            "Sum(accumulatedStakingPower[...]) > ori(currentEpoch)",
            "Sum(accumulatedStakingPower[...]) != ori(currentEpoch)",
            "Sum(accumulatedStakingPower[...]) >= accumulatedStakingPower[msg.sender]",
            "Sum(accumulatedStakingPower[...]) >= ori(rewardRate)",
            "Sum(accumulatedStakingPower[...]) > ori(rewardRate)",
            "Sum(accumulatedStakingPower[...]) != ori(rewardRate)",
            "Sum(accumulatedStakingPower[...]) >= ori(accumulatedStakingPower[msg.sender])",
            "Sum(accumulatedStakingPower[...]) > ori(accumulatedStakingPower[msg.sender])",
            "Sum(accumulatedStakingPower[...]) != ori(accumulatedStakingPower[msg.sender])",
            "Sum(accumulatedStakingPower[...]) >= ori(vUSD_REWARD_FRACTION_RATE)",
            "Sum(accumulatedStakingPower[...]) > ori(vUSD_REWARD_FRACTION_RATE)",
            "Sum(accumulatedStakingPower[...]) != ori(vUSD_REWARD_FRACTION_RATE)",
            "Sum(accumulatedStakingPower[...]) >= ori(rewardPerTokenStored)",
            "Sum(accumulatedStakingPower[...]) > ori(rewardPerTokenStored)",
            "Sum(accumulatedStakingPower[...]) != ori(rewardPerTokenStored)",
            "Sum(accumulatedStakingPower[...]) >= starttime",
            "Sum(accumulatedStakingPower[...]) > starttime",
            "Sum(accumulatedStakingPower[...]) != starttime",
            "Sum(accumulatedStakingPower[...]) >= ori(Sum(lastStakeTimes[...]))",
            "Sum(accumulatedStakingPower[...]) > ori(Sum(lastStakeTimes[...]))",
            "Sum(accumulatedStakingPower[...]) != ori(Sum(lastStakeTimes[...]))",
            "Sum(accumulatedStakingPower[...]) >= ori(Sum(accumulatedStakingPower[...]))",
            "Sum(accumulatedStakingPower[...]) >= ori(rewards[msg.sender])",
            "Sum(accumulatedStakingPower[...]) > ori(rewards[msg.sender])",
            "Sum(accumulatedStakingPower[...]) != ori(rewards[msg.sender])",
            "Sum(accumulatedStakingPower[...]) >= userRewardPerTokenPaid[msg.sender]",
            "Sum(accumulatedStakingPower[...]) > userRewardPerTokenPaid[msg.sender]",
            "Sum(accumulatedStakingPower[...]) != userRewardPerTokenPaid[msg.sender]",
            "Sum(accumulatedStakingPower[...]) >= ori(starttime)",
            "Sum(accumulatedStakingPower[...]) > ori(starttime)",
            "Sum(accumulatedStakingPower[...]) != ori(starttime)",
            "Sum(accumulatedStakingPower[...]) >= vETH_REWARD_FRACTION_RATE",
            "Sum(accumulatedStakingPower[...]) > vETH_REWARD_FRACTION_RATE",
            "Sum(accumulatedStakingPower[...]) != vETH_REWARD_FRACTION_RATE",
            "Sum(accumulatedStakingPower[...]) <= currentEpochReward",
            "Sum(accumulatedStakingPower[...]) < currentEpochReward",
            "Sum(accumulatedStakingPower[...]) != currentEpochReward",
            "Sum(accumulatedStakingPower[...]) >= Sum(userRewardPerTokenPaid[...])",
            "Sum(accumulatedStakingPower[...]) > Sum(userRewardPerTokenPaid[...])",
            "Sum(accumulatedStakingPower[...]) != Sum(userRewardPerTokenPaid[...])",
            "Sum(accumulatedStakingPower[...]) != ori(Sum(rewards[...]))",
            "Sum(accumulatedStakingPower[...]) >= Sum(lastStakeTimes[...])",
            "Sum(accumulatedStakingPower[...]) > Sum(lastStakeTimes[...])",
            "Sum(accumulatedStakingPower[...]) != Sum(lastStakeTimes[...])",
            "Sum(accumulatedStakingPower[...]) >= msg.value",
            "Sum(accumulatedStakingPower[...]) > msg.value",
            "Sum(accumulatedStakingPower[...]) != msg.value",
            "Sum(accumulatedStakingPower[...]) >= Sum(rewards[...])",
            "Sum(accumulatedStakingPower[...]) > Sum(rewards[...])",
            "Sum(accumulatedStakingPower[...]) != Sum(rewards[...])",
            "Sum(accumulatedStakingPower[...]) >= ori(periodFinish)",
            "Sum(accumulatedStakingPower[...]) > ori(periodFinish)",
            "Sum(accumulatedStakingPower[...]) != ori(periodFinish)",
            "Sum(accumulatedStakingPower[...]) >= vUSD_REWARD_FRACTION_RATE",
            "Sum(accumulatedStakingPower[...]) > vUSD_REWARD_FRACTION_RATE",
            "Sum(accumulatedStakingPower[...]) != vUSD_REWARD_FRACTION_RATE",
            "Sum(accumulatedStakingPower[...]) <= ori(Sum(_balances[...]))",
            "Sum(accumulatedStakingPower[...]) < ori(Sum(_balances[...]))",
            "Sum(accumulatedStakingPower[...]) != ori(Sum(_balances[...]))",
            "Sum(accumulatedStakingPower[...]) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(accumulatedStakingPower[...]) > ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(accumulatedStakingPower[...]) != ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(accumulatedStakingPower[...]) <= totalAccumulatedReward",
            "Sum(accumulatedStakingPower[...]) < totalAccumulatedReward",
            "Sum(accumulatedStakingPower[...]) != totalAccumulatedReward",
            "ori(userRewardPerTokenPaid[msg.sender]) <= _totalSupply",
            "ori(userRewardPerTokenPaid[msg.sender]) < _totalSupply",
            "ori(userRewardPerTokenPaid[msg.sender]) != _totalSupply",
            "ori(userRewardPerTokenPaid[msg.sender]) != lastUpdateTime",
            "ori(userRewardPerTokenPaid[msg.sender]) != currentEpoch",
            "ori(userRewardPerTokenPaid[msg.sender]) != periodFinish",
            "ori(userRewardPerTokenPaid[msg.sender]) <= rewardRate",
            "ori(userRewardPerTokenPaid[msg.sender]) < rewardRate",
            "ori(userRewardPerTokenPaid[msg.sender]) != rewardRate",
            "ori(userRewardPerTokenPaid[msg.sender]) >= rewards[msg.sender]",
            "ori(userRewardPerTokenPaid[msg.sender]) <= rewardPerTokenStored",
            "ori(userRewardPerTokenPaid[msg.sender]) < rewardPerTokenStored",
            "ori(userRewardPerTokenPaid[msg.sender]) != rewardPerTokenStored",
            "ori(userRewardPerTokenPaid[msg.sender]) <= Sum(_balances[...])",
            "ori(userRewardPerTokenPaid[msg.sender]) < Sum(_balances[...])",
            "ori(userRewardPerTokenPaid[msg.sender]) != Sum(_balances[...])",
            "ori(userRewardPerTokenPaid[msg.sender]) <= accumulatedStakingPower[msg.sender]",
            "ori(userRewardPerTokenPaid[msg.sender]) != starttime",
            "ori(userRewardPerTokenPaid[msg.sender]) <= userRewardPerTokenPaid[msg.sender]",
            "ori(userRewardPerTokenPaid[msg.sender]) < userRewardPerTokenPaid[msg.sender]",
            "ori(userRewardPerTokenPaid[msg.sender]) != userRewardPerTokenPaid[msg.sender]",
            "ori(userRewardPerTokenPaid[msg.sender]) != vETH_REWARD_FRACTION_RATE",
            "ori(userRewardPerTokenPaid[msg.sender]) <= currentEpochReward",
            "ori(userRewardPerTokenPaid[msg.sender]) < currentEpochReward",
            "ori(userRewardPerTokenPaid[msg.sender]) != currentEpochReward",
            "ori(userRewardPerTokenPaid[msg.sender]) <= Sum(userRewardPerTokenPaid[...])",
            "ori(userRewardPerTokenPaid[msg.sender]) < Sum(userRewardPerTokenPaid[...])",
            "ori(userRewardPerTokenPaid[msg.sender]) != Sum(userRewardPerTokenPaid[...])",
            "ori(userRewardPerTokenPaid[msg.sender]) != Sum(lastStakeTimes[...])",
            "ori(userRewardPerTokenPaid[msg.sender]) <= Sum(rewards[...])",
            "ori(userRewardPerTokenPaid[msg.sender]) < Sum(rewards[...])",
            "ori(userRewardPerTokenPaid[msg.sender]) != Sum(rewards[...])",
            "ori(userRewardPerTokenPaid[msg.sender]) != vUSD_REWARD_FRACTION_RATE",
            "ori(userRewardPerTokenPaid[msg.sender]) <= totalAccumulatedReward",
            "ori(userRewardPerTokenPaid[msg.sender]) < totalAccumulatedReward",
            "ori(userRewardPerTokenPaid[msg.sender]) != totalAccumulatedReward",
            "_totalSupply >= lastUpdateTime",
            "_totalSupply > lastUpdateTime",
            "_totalSupply != lastUpdateTime",
            "_totalSupply != ori(currentEpochReward)",
            "_totalSupply >= currentEpoch",
            "_totalSupply > currentEpoch",
            "_totalSupply != currentEpoch",
            "_totalSupply >= ori(vETH_REWARD_FRACTION_RATE)",
            "_totalSupply > ori(vETH_REWARD_FRACTION_RATE)",
            "_totalSupply != ori(vETH_REWARD_FRACTION_RATE)",
            "_totalSupply >= periodFinish",
            "_totalSupply > periodFinish",
            "_totalSupply != periodFinish",
            "_totalSupply >= rewardRate",
            "_totalSupply > rewardRate",
            "_totalSupply != rewardRate",
            "_totalSupply == ori(_totalSupply)",
            "_totalSupply >= ori(_totalSupply)",
            "_totalSupply <= ori(_totalSupply)",
            "_totalSupply >= rewards[msg.sender]",
            "_totalSupply > rewards[msg.sender]",
            "_totalSupply != rewards[msg.sender]",
            "_totalSupply >= ori(lastUpdateTime)",
            "_totalSupply > ori(lastUpdateTime)",
            "_totalSupply != ori(lastUpdateTime)",
            "_totalSupply >= rewardPerTokenStored",
            "_totalSupply > rewardPerTokenStored",
            "_totalSupply != rewardPerTokenStored",
            "_totalSupply == Sum(_balances[...])",
            "_totalSupply >= Sum(_balances[...])",
            "_totalSupply <= Sum(_balances[...])",
            "_totalSupply != ori(totalAccumulatedReward)",
            "_totalSupply >= ori(currentEpoch)",
            "_totalSupply > ori(currentEpoch)",
            "_totalSupply != ori(currentEpoch)",
            "_totalSupply >= accumulatedStakingPower[msg.sender]",
            "_totalSupply > accumulatedStakingPower[msg.sender]",
            "_totalSupply != accumulatedStakingPower[msg.sender]",
            "_totalSupply >= ori(rewardRate)",
            "_totalSupply > ori(rewardRate)",
            "_totalSupply != ori(rewardRate)",
            "_totalSupply >= ori(accumulatedStakingPower[msg.sender])",
            "_totalSupply > ori(accumulatedStakingPower[msg.sender])",
            "_totalSupply != ori(accumulatedStakingPower[msg.sender])",
            "_totalSupply >= ori(vUSD_REWARD_FRACTION_RATE)",
            "_totalSupply > ori(vUSD_REWARD_FRACTION_RATE)",
            "_totalSupply != ori(vUSD_REWARD_FRACTION_RATE)",
            "_totalSupply >= ori(rewardPerTokenStored)",
            "_totalSupply > ori(rewardPerTokenStored)",
            "_totalSupply != ori(rewardPerTokenStored)",
            "_totalSupply >= starttime",
            "_totalSupply > starttime",
            "_totalSupply != starttime",
            "_totalSupply >= ori(Sum(lastStakeTimes[...]))",
            "_totalSupply > ori(Sum(lastStakeTimes[...]))",
            "_totalSupply != ori(Sum(lastStakeTimes[...]))",
            "_totalSupply >= ori(Sum(accumulatedStakingPower[...]))",
            "_totalSupply > ori(Sum(accumulatedStakingPower[...]))",
            "_totalSupply != ori(Sum(accumulatedStakingPower[...]))",
            "_totalSupply >= ori(rewards[msg.sender])",
            "_totalSupply > ori(rewards[msg.sender])",
            "_totalSupply != ori(rewards[msg.sender])",
            "_totalSupply >= userRewardPerTokenPaid[msg.sender]",
            "_totalSupply > userRewardPerTokenPaid[msg.sender]",
            "_totalSupply != userRewardPerTokenPaid[msg.sender]",
            "_totalSupply >= ori(starttime)",
            "_totalSupply > ori(starttime)",
            "_totalSupply != ori(starttime)",
            "_totalSupply >= vETH_REWARD_FRACTION_RATE",
            "_totalSupply > vETH_REWARD_FRACTION_RATE",
            "_totalSupply != vETH_REWARD_FRACTION_RATE",
            "_totalSupply != currentEpochReward",
            "_totalSupply >= Sum(userRewardPerTokenPaid[...])",
            "_totalSupply > Sum(userRewardPerTokenPaid[...])",
            "_totalSupply != Sum(userRewardPerTokenPaid[...])",
            "_totalSupply >= ori(Sum(rewards[...]))",
            "_totalSupply > ori(Sum(rewards[...]))",
            "_totalSupply != ori(Sum(rewards[...]))",
            "_totalSupply >= Sum(lastStakeTimes[...])",
            "_totalSupply > Sum(lastStakeTimes[...])",
            "_totalSupply != Sum(lastStakeTimes[...])",
            "_totalSupply >= msg.value",
            "_totalSupply > msg.value",
            "_totalSupply != msg.value",
            "_totalSupply >= Sum(rewards[...])",
            "_totalSupply > Sum(rewards[...])",
            "_totalSupply != Sum(rewards[...])",
            "_totalSupply >= ori(periodFinish)",
            "_totalSupply > ori(periodFinish)",
            "_totalSupply != ori(periodFinish)",
            "_totalSupply >= vUSD_REWARD_FRACTION_RATE",
            "_totalSupply > vUSD_REWARD_FRACTION_RATE",
            "_totalSupply != vUSD_REWARD_FRACTION_RATE",
            "_totalSupply == ori(Sum(_balances[...]))",
            "_totalSupply >= ori(Sum(_balances[...]))",
            "_totalSupply <= ori(Sum(_balances[...]))",
            "_totalSupply >= ori(Sum(userRewardPerTokenPaid[...]))",
            "_totalSupply > ori(Sum(userRewardPerTokenPaid[...]))",
            "_totalSupply != ori(Sum(userRewardPerTokenPaid[...]))",
            "_totalSupply != totalAccumulatedReward",
            "vUSD != rewardVote",
            "vUSD != msg.sender",
            "vUSD != _owner",
            "vUSD != ori(_owner)",
            "vUSD != yfv",
            "vUSD != ori(rewardVote)",
            "vUSD != rewardReferral",
            "vUSD != ori(yfv)",
            "vUSD != ori(rewardReferral)",
            "vUSD == ori(vUSD)",
            "vUSD != vETH",
            "vUSD != ori(vETH)",
            "lastUpdateTime <= ori(currentEpochReward)",
            "lastUpdateTime < ori(currentEpochReward)",
            "lastUpdateTime != ori(currentEpochReward)",
            "lastUpdateTime >= currentEpoch",
            "lastUpdateTime > currentEpoch",
            "lastUpdateTime != currentEpoch",
            "lastUpdateTime <= ori(vETH_REWARD_FRACTION_RATE)",
            "lastUpdateTime < ori(vETH_REWARD_FRACTION_RATE)",
            "lastUpdateTime != ori(vETH_REWARD_FRACTION_RATE)",
            "lastUpdateTime <= periodFinish",
            "lastUpdateTime < periodFinish",
            "lastUpdateTime != periodFinish",
            "lastUpdateTime <= rewardRate",
            "lastUpdateTime < rewardRate",
            "lastUpdateTime != rewardRate",
            "lastUpdateTime <= ori(_totalSupply)",
            "lastUpdateTime < ori(_totalSupply)",
            "lastUpdateTime != ori(_totalSupply)",
            "lastUpdateTime >= rewards[msg.sender]",
            "lastUpdateTime > rewards[msg.sender]",
            "lastUpdateTime != rewards[msg.sender]",
            "lastUpdateTime >= ori(lastUpdateTime)",
            "lastUpdateTime > ori(lastUpdateTime)",
            "lastUpdateTime != ori(lastUpdateTime)",
            "lastUpdateTime <= rewardPerTokenStored",
            "lastUpdateTime < rewardPerTokenStored",
            "lastUpdateTime != rewardPerTokenStored",
            "lastUpdateTime <= Sum(_balances[...])",
            "lastUpdateTime < Sum(_balances[...])",
            "lastUpdateTime != Sum(_balances[...])",
            "lastUpdateTime <= ori(totalAccumulatedReward)",
            "lastUpdateTime < ori(totalAccumulatedReward)",
            "lastUpdateTime != ori(totalAccumulatedReward)",
            "lastUpdateTime >= ori(currentEpoch)",
            "lastUpdateTime > ori(currentEpoch)",
            "lastUpdateTime != ori(currentEpoch)",
            "lastUpdateTime != accumulatedStakingPower[msg.sender]",
            "lastUpdateTime <= ori(rewardRate)",
            "lastUpdateTime < ori(rewardRate)",
            "lastUpdateTime != ori(rewardRate)",
            "lastUpdateTime != ori(accumulatedStakingPower[msg.sender])",
            "lastUpdateTime <= ori(vUSD_REWARD_FRACTION_RATE)",
            "lastUpdateTime < ori(vUSD_REWARD_FRACTION_RATE)",
            "lastUpdateTime != ori(vUSD_REWARD_FRACTION_RATE)",
            "lastUpdateTime <= ori(rewardPerTokenStored)",
            "lastUpdateTime < ori(rewardPerTokenStored)",
            "lastUpdateTime != ori(rewardPerTokenStored)",
            "lastUpdateTime >= starttime",
            "lastUpdateTime > starttime",
            "lastUpdateTime != starttime",
            "lastUpdateTime <= ori(Sum(lastStakeTimes[...]))",
            "lastUpdateTime < ori(Sum(lastStakeTimes[...]))",
            "lastUpdateTime != ori(Sum(lastStakeTimes[...]))",
            "lastUpdateTime != ori(Sum(accumulatedStakingPower[...]))",
            "lastUpdateTime != ori(rewards[msg.sender])",
            "lastUpdateTime <= userRewardPerTokenPaid[msg.sender]",
            "lastUpdateTime < userRewardPerTokenPaid[msg.sender]",
            "lastUpdateTime != userRewardPerTokenPaid[msg.sender]",
            "lastUpdateTime >= ori(starttime)",
            "lastUpdateTime > ori(starttime)",
            "lastUpdateTime != ori(starttime)",
            "lastUpdateTime <= vETH_REWARD_FRACTION_RATE",
            "lastUpdateTime < vETH_REWARD_FRACTION_RATE",
            "lastUpdateTime != vETH_REWARD_FRACTION_RATE",
            "lastUpdateTime <= currentEpochReward",
            "lastUpdateTime < currentEpochReward",
            "lastUpdateTime != currentEpochReward",
            "lastUpdateTime <= Sum(userRewardPerTokenPaid[...])",
            "lastUpdateTime < Sum(userRewardPerTokenPaid[...])",
            "lastUpdateTime != Sum(userRewardPerTokenPaid[...])",
            "lastUpdateTime <= ori(Sum(rewards[...]))",
            "lastUpdateTime < ori(Sum(rewards[...]))",
            "lastUpdateTime != ori(Sum(rewards[...]))",
            "lastUpdateTime <= Sum(lastStakeTimes[...])",
            "lastUpdateTime < Sum(lastStakeTimes[...])",
            "lastUpdateTime != Sum(lastStakeTimes[...])",
            "lastUpdateTime >= msg.value",
            "lastUpdateTime > msg.value",
            "lastUpdateTime != msg.value",
            "lastUpdateTime <= Sum(rewards[...])",
            "lastUpdateTime < Sum(rewards[...])",
            "lastUpdateTime != Sum(rewards[...])",
            "lastUpdateTime <= ori(periodFinish)",
            "lastUpdateTime < ori(periodFinish)",
            "lastUpdateTime != ori(periodFinish)",
            "lastUpdateTime <= vUSD_REWARD_FRACTION_RATE",
            "lastUpdateTime < vUSD_REWARD_FRACTION_RATE",
            "lastUpdateTime != vUSD_REWARD_FRACTION_RATE",
            "lastUpdateTime <= ori(Sum(_balances[...]))",
            "lastUpdateTime < ori(Sum(_balances[...]))",
            "lastUpdateTime != ori(Sum(_balances[...]))",
            "lastUpdateTime <= ori(Sum(userRewardPerTokenPaid[...]))",
            "lastUpdateTime < ori(Sum(userRewardPerTokenPaid[...]))",
            "lastUpdateTime != ori(Sum(userRewardPerTokenPaid[...]))",
            "lastUpdateTime <= totalAccumulatedReward",
            "lastUpdateTime < totalAccumulatedReward",
            "lastUpdateTime != totalAccumulatedReward",
            "ori(currentEpochReward) >= currentEpoch",
            "ori(currentEpochReward) > currentEpoch",
            "ori(currentEpochReward) != currentEpoch",
            "ori(currentEpochReward) >= periodFinish",
            "ori(currentEpochReward) > periodFinish",
            "ori(currentEpochReward) != periodFinish",
            "ori(currentEpochReward) >= rewardRate",
            "ori(currentEpochReward) > rewardRate",
            "ori(currentEpochReward) != rewardRate",
            "ori(currentEpochReward) >= rewards[msg.sender]",
            "ori(currentEpochReward) > rewards[msg.sender]",
            "ori(currentEpochReward) != rewards[msg.sender]",
            "ori(currentEpochReward) >= rewardPerTokenStored",
            "ori(currentEpochReward) > rewardPerTokenStored",
            "ori(currentEpochReward) != rewardPerTokenStored",
            "ori(currentEpochReward) != Sum(_balances[...])",
            "ori(currentEpochReward) >= accumulatedStakingPower[msg.sender]",
            "ori(currentEpochReward) > accumulatedStakingPower[msg.sender]",
            "ori(currentEpochReward) != accumulatedStakingPower[msg.sender]",
            "ori(currentEpochReward) >= starttime",
            "ori(currentEpochReward) > starttime",
            "ori(currentEpochReward) != starttime",
            "ori(currentEpochReward) >= userRewardPerTokenPaid[msg.sender]",
            "ori(currentEpochReward) > userRewardPerTokenPaid[msg.sender]",
            "ori(currentEpochReward) != userRewardPerTokenPaid[msg.sender]",
            "ori(currentEpochReward) >= vETH_REWARD_FRACTION_RATE",
            "ori(currentEpochReward) > vETH_REWARD_FRACTION_RATE",
            "ori(currentEpochReward) != vETH_REWARD_FRACTION_RATE",
            "ori(currentEpochReward) == currentEpochReward",
            "ori(currentEpochReward) >= currentEpochReward",
            "ori(currentEpochReward) <= currentEpochReward",
            "ori(currentEpochReward) >= Sum(userRewardPerTokenPaid[...])",
            "ori(currentEpochReward) > Sum(userRewardPerTokenPaid[...])",
            "ori(currentEpochReward) != Sum(userRewardPerTokenPaid[...])",
            "ori(currentEpochReward) >= Sum(lastStakeTimes[...])",
            "ori(currentEpochReward) > Sum(lastStakeTimes[...])",
            "ori(currentEpochReward) != Sum(lastStakeTimes[...])",
            "ori(currentEpochReward) >= Sum(rewards[...])",
            "ori(currentEpochReward) > Sum(rewards[...])",
            "ori(currentEpochReward) != Sum(rewards[...])",
            "ori(currentEpochReward) >= vUSD_REWARD_FRACTION_RATE",
            "ori(currentEpochReward) > vUSD_REWARD_FRACTION_RATE",
            "ori(currentEpochReward) != vUSD_REWARD_FRACTION_RATE",
            "ori(currentEpochReward) <= totalAccumulatedReward",
            "ori(currentEpochReward) < totalAccumulatedReward",
            "ori(currentEpochReward) != totalAccumulatedReward",
            "rewardVote != msg.sender",
            "rewardVote != _owner",
            "rewardVote != ori(_owner)",
            "rewardVote != yfv",
            "rewardVote == ori(rewardVote)",
            "rewardVote != rewardReferral",
            "rewardVote != ori(yfv)",
            "rewardVote != ori(rewardReferral)",
            "rewardVote != ori(vUSD)",
            "rewardVote != vETH",
            "rewardVote != ori(vETH)",
            "msg.sender != _owner",
            "msg.sender != yfv",
            "msg.sender != rewardReferral",
            "msg.sender != vETH",
            "currentEpoch <= ori(vETH_REWARD_FRACTION_RATE)",
            "currentEpoch < ori(vETH_REWARD_FRACTION_RATE)",
            "currentEpoch != ori(vETH_REWARD_FRACTION_RATE)",
            "currentEpoch <= periodFinish",
            "currentEpoch < periodFinish",
            "currentEpoch != periodFinish",
            "currentEpoch <= rewardRate",
            "currentEpoch < rewardRate",
            "currentEpoch != rewardRate",
            "currentEpoch <= ori(_totalSupply)",
            "currentEpoch < ori(_totalSupply)",
            "currentEpoch != ori(_totalSupply)",
            "currentEpoch == rewards[msg.sender] + 1",
            "currentEpoch >= rewards[msg.sender]",
            "currentEpoch > rewards[msg.sender]",
            "currentEpoch != rewards[msg.sender]",
            "currentEpoch <= ori(lastUpdateTime)",
            "currentEpoch < ori(lastUpdateTime)",
            "currentEpoch != ori(lastUpdateTime)",
            "currentEpoch <= rewardPerTokenStored",
            "currentEpoch < rewardPerTokenStored",
            "currentEpoch != rewardPerTokenStored",
            "currentEpoch <= Sum(_balances[...])",
            "currentEpoch < Sum(_balances[...])",
            "currentEpoch != Sum(_balances[...])",
            "currentEpoch <= ori(totalAccumulatedReward)",
            "currentEpoch < ori(totalAccumulatedReward)",
            "currentEpoch != ori(totalAccumulatedReward)",
            "currentEpoch == ori(currentEpoch)",
            "currentEpoch >= ori(currentEpoch)",
            "currentEpoch <= ori(currentEpoch)",
            "currentEpoch != accumulatedStakingPower[msg.sender]",
            "currentEpoch <= ori(rewardRate)",
            "currentEpoch < ori(rewardRate)",
            "currentEpoch != ori(rewardRate)",
            "currentEpoch != ori(accumulatedStakingPower[msg.sender])",
            "currentEpoch <= ori(vUSD_REWARD_FRACTION_RATE)",
            "currentEpoch < ori(vUSD_REWARD_FRACTION_RATE)",
            "currentEpoch != ori(vUSD_REWARD_FRACTION_RATE)",
            "currentEpoch <= ori(rewardPerTokenStored)",
            "currentEpoch < ori(rewardPerTokenStored)",
            "currentEpoch != ori(rewardPerTokenStored)",
            "currentEpoch <= starttime",
            "currentEpoch < starttime",
            "currentEpoch != starttime",
            "currentEpoch <= ori(Sum(lastStakeTimes[...]))",
            "currentEpoch < ori(Sum(lastStakeTimes[...]))",
            "currentEpoch != ori(Sum(lastStakeTimes[...]))",
            "currentEpoch != ori(Sum(accumulatedStakingPower[...]))",
            "currentEpoch != ori(rewards[msg.sender])",
            "currentEpoch <= userRewardPerTokenPaid[msg.sender]",
            "currentEpoch < userRewardPerTokenPaid[msg.sender]",
            "currentEpoch != userRewardPerTokenPaid[msg.sender]",
            "currentEpoch <= ori(starttime)",
            "currentEpoch < ori(starttime)",
            "currentEpoch != ori(starttime)",
            "currentEpoch <= vETH_REWARD_FRACTION_RATE",
            "currentEpoch < vETH_REWARD_FRACTION_RATE",
            "currentEpoch != vETH_REWARD_FRACTION_RATE",
            "currentEpoch <= currentEpochReward",
            "currentEpoch < currentEpochReward",
            "currentEpoch != currentEpochReward",
            "currentEpoch <= Sum(userRewardPerTokenPaid[...])",
            "currentEpoch < Sum(userRewardPerTokenPaid[...])",
            "currentEpoch != Sum(userRewardPerTokenPaid[...])",
            "currentEpoch <= ori(Sum(rewards[...]))",
            "currentEpoch < ori(Sum(rewards[...]))",
            "currentEpoch != ori(Sum(rewards[...]))",
            "currentEpoch <= Sum(lastStakeTimes[...])",
            "currentEpoch < Sum(lastStakeTimes[...])",
            "currentEpoch != Sum(lastStakeTimes[...])",
            "currentEpoch == msg.value + 1",
            "currentEpoch >= msg.value",
            "currentEpoch > msg.value",
            "currentEpoch != msg.value",
            "currentEpoch <= Sum(rewards[...])",
            "currentEpoch < Sum(rewards[...])",
            "currentEpoch != Sum(rewards[...])",
            "currentEpoch <= ori(periodFinish)",
            "currentEpoch < ori(periodFinish)",
            "currentEpoch != ori(periodFinish)",
            "currentEpoch <= vUSD_REWARD_FRACTION_RATE",
            "currentEpoch < vUSD_REWARD_FRACTION_RATE",
            "currentEpoch != vUSD_REWARD_FRACTION_RATE",
            "currentEpoch <= ori(Sum(_balances[...]))",
            "currentEpoch < ori(Sum(_balances[...]))",
            "currentEpoch != ori(Sum(_balances[...]))",
            "currentEpoch <= ori(Sum(userRewardPerTokenPaid[...]))",
            "currentEpoch < ori(Sum(userRewardPerTokenPaid[...]))",
            "currentEpoch != ori(Sum(userRewardPerTokenPaid[...]))",
            "currentEpoch <= totalAccumulatedReward",
            "currentEpoch < totalAccumulatedReward",
            "currentEpoch != totalAccumulatedReward",
            "_owner == ori(_owner)",
            "_owner != yfv",
            "_owner != ori(rewardVote)",
            "_owner != rewardReferral",
            "_owner != ori(yfv)",
            "_owner != ori(rewardReferral)",
            "_owner != ori(vUSD)",
            "_owner != vETH",
            "_owner != ori(vETH)",
            "ori(_owner) != yfv",
            "ori(_owner) != rewardReferral",
            "ori(_owner) != vETH",
            "ori(vETH_REWARD_FRACTION_RATE) >= periodFinish",
            "ori(vETH_REWARD_FRACTION_RATE) > periodFinish",
            "ori(vETH_REWARD_FRACTION_RATE) != periodFinish",
            "ori(vETH_REWARD_FRACTION_RATE) <= rewardRate",
            "ori(vETH_REWARD_FRACTION_RATE) < rewardRate",
            "ori(vETH_REWARD_FRACTION_RATE) != rewardRate",
            "ori(vETH_REWARD_FRACTION_RATE) >= rewards[msg.sender]",
            "ori(vETH_REWARD_FRACTION_RATE) > rewards[msg.sender]",
            "ori(vETH_REWARD_FRACTION_RATE) != rewards[msg.sender]",
            "ori(vETH_REWARD_FRACTION_RATE) <= rewardPerTokenStored",
            "ori(vETH_REWARD_FRACTION_RATE) < rewardPerTokenStored",
            "ori(vETH_REWARD_FRACTION_RATE) != rewardPerTokenStored",
            "ori(vETH_REWARD_FRACTION_RATE) <= Sum(_balances[...])",
            "ori(vETH_REWARD_FRACTION_RATE) < Sum(_balances[...])",
            "ori(vETH_REWARD_FRACTION_RATE) != Sum(_balances[...])",
            "ori(vETH_REWARD_FRACTION_RATE) != accumulatedStakingPower[msg.sender]",
            "ori(vETH_REWARD_FRACTION_RATE) >= starttime",
            "ori(vETH_REWARD_FRACTION_RATE) > starttime",
            "ori(vETH_REWARD_FRACTION_RATE) != starttime",
            "ori(vETH_REWARD_FRACTION_RATE) <= userRewardPerTokenPaid[msg.sender]",
            "ori(vETH_REWARD_FRACTION_RATE) < userRewardPerTokenPaid[msg.sender]",
            "ori(vETH_REWARD_FRACTION_RATE) != userRewardPerTokenPaid[msg.sender]",
            "ori(vETH_REWARD_FRACTION_RATE) == vETH_REWARD_FRACTION_RATE",
            "ori(vETH_REWARD_FRACTION_RATE) >= vETH_REWARD_FRACTION_RATE",
            "ori(vETH_REWARD_FRACTION_RATE) <= vETH_REWARD_FRACTION_RATE",
            "ori(vETH_REWARD_FRACTION_RATE) <= currentEpochReward",
            "ori(vETH_REWARD_FRACTION_RATE) < currentEpochReward",
            "ori(vETH_REWARD_FRACTION_RATE) != currentEpochReward",
            "ori(vETH_REWARD_FRACTION_RATE) <= Sum(userRewardPerTokenPaid[...])",
            "ori(vETH_REWARD_FRACTION_RATE) < Sum(userRewardPerTokenPaid[...])",
            "ori(vETH_REWARD_FRACTION_RATE) != Sum(userRewardPerTokenPaid[...])",
            "ori(vETH_REWARD_FRACTION_RATE) >= Sum(lastStakeTimes[...])",
            "ori(vETH_REWARD_FRACTION_RATE) > Sum(lastStakeTimes[...])",
            "ori(vETH_REWARD_FRACTION_RATE) != Sum(lastStakeTimes[...])",
            "ori(vETH_REWARD_FRACTION_RATE) <= Sum(rewards[...])",
            "ori(vETH_REWARD_FRACTION_RATE) < Sum(rewards[...])",
            "ori(vETH_REWARD_FRACTION_RATE) != Sum(rewards[...])",
            "ori(vETH_REWARD_FRACTION_RATE) >= vUSD_REWARD_FRACTION_RATE",
            "ori(vETH_REWARD_FRACTION_RATE) > vUSD_REWARD_FRACTION_RATE",
            "ori(vETH_REWARD_FRACTION_RATE) != vUSD_REWARD_FRACTION_RATE",
            "ori(vETH_REWARD_FRACTION_RATE) <= totalAccumulatedReward",
            "ori(vETH_REWARD_FRACTION_RATE) < totalAccumulatedReward",
            "ori(vETH_REWARD_FRACTION_RATE) != totalAccumulatedReward",
            "yfv != ori(rewardVote)",
            "yfv != rewardReferral",
            "yfv == ori(yfv)",
            "yfv != ori(rewardReferral)",
            "yfv != ori(vUSD)",
            "yfv != vETH",
            "yfv != ori(vETH)",
            "periodFinish <= rewardRate",
            "periodFinish < rewardRate",
            "periodFinish != rewardRate",
            "periodFinish <= ori(_totalSupply)",
            "periodFinish < ori(_totalSupply)",
            "periodFinish != ori(_totalSupply)",
            "periodFinish >= rewards[msg.sender]",
            "periodFinish > rewards[msg.sender]",
            "periodFinish != rewards[msg.sender]",
            "periodFinish >= ori(lastUpdateTime)",
            "periodFinish > ori(lastUpdateTime)",
            "periodFinish != ori(lastUpdateTime)",
            "periodFinish <= rewardPerTokenStored",
            "periodFinish < rewardPerTokenStored",
            "periodFinish != rewardPerTokenStored",
            "periodFinish <= Sum(_balances[...])",
            "periodFinish < Sum(_balances[...])",
            "periodFinish != Sum(_balances[...])",
            "periodFinish <= ori(totalAccumulatedReward)",
            "periodFinish < ori(totalAccumulatedReward)",
            "periodFinish != ori(totalAccumulatedReward)",
            "periodFinish >= ori(currentEpoch)",
            "periodFinish > ori(currentEpoch)",
            "periodFinish != ori(currentEpoch)",
            "periodFinish != accumulatedStakingPower[msg.sender]",
            "periodFinish <= ori(rewardRate)",
            "periodFinish < ori(rewardRate)",
            "periodFinish != ori(rewardRate)",
            "periodFinish != ori(accumulatedStakingPower[msg.sender])",
            "periodFinish <= ori(vUSD_REWARD_FRACTION_RATE)",
            "periodFinish < ori(vUSD_REWARD_FRACTION_RATE)",
            "periodFinish != ori(vUSD_REWARD_FRACTION_RATE)",
            "periodFinish <= ori(rewardPerTokenStored)",
            "periodFinish < ori(rewardPerTokenStored)",
            "periodFinish != ori(rewardPerTokenStored)",
            "periodFinish >= starttime",
            "periodFinish > starttime",
            "periodFinish != starttime",
            "periodFinish <= ori(Sum(lastStakeTimes[...]))",
            "periodFinish < ori(Sum(lastStakeTimes[...]))",
            "periodFinish != ori(Sum(lastStakeTimes[...]))",
            "periodFinish != ori(Sum(accumulatedStakingPower[...]))",
            "periodFinish != ori(rewards[msg.sender])",
            "periodFinish <= userRewardPerTokenPaid[msg.sender]",
            "periodFinish < userRewardPerTokenPaid[msg.sender]",
            "periodFinish != userRewardPerTokenPaid[msg.sender]",
            "periodFinish >= ori(starttime)",
            "periodFinish > ori(starttime)",
            "periodFinish != ori(starttime)",
            "periodFinish <= vETH_REWARD_FRACTION_RATE",
            "periodFinish < vETH_REWARD_FRACTION_RATE",
            "periodFinish != vETH_REWARD_FRACTION_RATE",
            "periodFinish <= currentEpochReward",
            "periodFinish < currentEpochReward",
            "periodFinish != currentEpochReward",
            "periodFinish <= Sum(userRewardPerTokenPaid[...])",
            "periodFinish < Sum(userRewardPerTokenPaid[...])",
            "periodFinish != Sum(userRewardPerTokenPaid[...])",
            "periodFinish <= ori(Sum(rewards[...]))",
            "periodFinish < ori(Sum(rewards[...]))",
            "periodFinish != ori(Sum(rewards[...]))",
            "periodFinish <= Sum(lastStakeTimes[...])",
            "periodFinish < Sum(lastStakeTimes[...])",
            "periodFinish != Sum(lastStakeTimes[...])",
            "periodFinish >= msg.value",
            "periodFinish > msg.value",
            "periodFinish != msg.value",
            "periodFinish <= Sum(rewards[...])",
            "periodFinish < Sum(rewards[...])",
            "periodFinish != Sum(rewards[...])",
            "periodFinish == ori(periodFinish)",
            "periodFinish >= ori(periodFinish)",
            "periodFinish <= ori(periodFinish)",
            "periodFinish <= vUSD_REWARD_FRACTION_RATE",
            "periodFinish < vUSD_REWARD_FRACTION_RATE",
            "periodFinish != vUSD_REWARD_FRACTION_RATE",
            "periodFinish <= ori(Sum(_balances[...]))",
            "periodFinish < ori(Sum(_balances[...]))",
            "periodFinish != ori(Sum(_balances[...]))",
            "periodFinish <= ori(Sum(userRewardPerTokenPaid[...]))",
            "periodFinish < ori(Sum(userRewardPerTokenPaid[...]))",
            "periodFinish != ori(Sum(userRewardPerTokenPaid[...]))",
            "periodFinish <= totalAccumulatedReward",
            "periodFinish < totalAccumulatedReward",
            "periodFinish != totalAccumulatedReward",
            "rewardRate <= ori(_totalSupply)",
            "rewardRate < ori(_totalSupply)",
            "rewardRate != ori(_totalSupply)",
            "rewardRate >= rewards[msg.sender]",
            "rewardRate > rewards[msg.sender]",
            "rewardRate != rewards[msg.sender]",
            "rewardRate >= ori(lastUpdateTime)",
            "rewardRate > ori(lastUpdateTime)",
            "rewardRate != ori(lastUpdateTime)",
            "rewardRate >= rewardPerTokenStored",
            "rewardRate > rewardPerTokenStored",
            "rewardRate != rewardPerTokenStored",
            "rewardRate <= Sum(_balances[...])",
            "rewardRate < Sum(_balances[...])",
            "rewardRate != Sum(_balances[...])",
            "rewardRate <= ori(totalAccumulatedReward)",
            "rewardRate < ori(totalAccumulatedReward)",
            "rewardRate != ori(totalAccumulatedReward)",
            "rewardRate >= ori(currentEpoch)",
            "rewardRate > ori(currentEpoch)",
            "rewardRate != ori(currentEpoch)",
            "rewardRate != accumulatedStakingPower[msg.sender]",
            "rewardRate == ori(rewardRate)",
            "rewardRate >= ori(rewardRate)",
            "rewardRate <= ori(rewardRate)",
            "rewardRate != ori(accumulatedStakingPower[msg.sender])",
            "rewardRate >= ori(vUSD_REWARD_FRACTION_RATE)",
            "rewardRate > ori(vUSD_REWARD_FRACTION_RATE)",
            "rewardRate != ori(vUSD_REWARD_FRACTION_RATE)",
            "rewardRate >= ori(rewardPerTokenStored)",
            "rewardRate > ori(rewardPerTokenStored)",
            "rewardRate != ori(rewardPerTokenStored)",
            "rewardRate >= starttime",
            "rewardRate > starttime",
            "rewardRate != starttime",
            "rewardRate >= ori(Sum(lastStakeTimes[...]))",
            "rewardRate > ori(Sum(lastStakeTimes[...]))",
            "rewardRate != ori(Sum(lastStakeTimes[...]))",
            "rewardRate != ori(Sum(accumulatedStakingPower[...]))",
            "rewardRate != ori(rewards[msg.sender])",
            "rewardRate >= userRewardPerTokenPaid[msg.sender]",
            "rewardRate > userRewardPerTokenPaid[msg.sender]",
            "rewardRate != userRewardPerTokenPaid[msg.sender]",
            "rewardRate >= ori(starttime)",
            "rewardRate > ori(starttime)",
            "rewardRate != ori(starttime)",
            "rewardRate >= vETH_REWARD_FRACTION_RATE",
            "rewardRate > vETH_REWARD_FRACTION_RATE",
            "rewardRate != vETH_REWARD_FRACTION_RATE",
            "rewardRate <= currentEpochReward",
            "rewardRate < currentEpochReward",
            "rewardRate != currentEpochReward",
            "rewardRate <= Sum(userRewardPerTokenPaid[...])",
            "rewardRate < Sum(userRewardPerTokenPaid[...])",
            "rewardRate != Sum(userRewardPerTokenPaid[...])",
            "rewardRate <= ori(Sum(rewards[...]))",
            "rewardRate < ori(Sum(rewards[...]))",
            "rewardRate != ori(Sum(rewards[...]))",
            "rewardRate >= Sum(lastStakeTimes[...])",
            "rewardRate > Sum(lastStakeTimes[...])",
            "rewardRate != Sum(lastStakeTimes[...])",
            "rewardRate >= msg.value",
            "rewardRate > msg.value",
            "rewardRate != msg.value",
            "rewardRate <= Sum(rewards[...])",
            "rewardRate < Sum(rewards[...])",
            "rewardRate != Sum(rewards[...])",
            "rewardRate >= ori(periodFinish)",
            "rewardRate > ori(periodFinish)",
            "rewardRate != ori(periodFinish)",
            "rewardRate >= vUSD_REWARD_FRACTION_RATE",
            "rewardRate > vUSD_REWARD_FRACTION_RATE",
            "rewardRate != vUSD_REWARD_FRACTION_RATE",
            "rewardRate <= ori(Sum(_balances[...]))",
            "rewardRate < ori(Sum(_balances[...]))",
            "rewardRate != ori(Sum(_balances[...]))",
            "rewardRate <= ori(Sum(userRewardPerTokenPaid[...]))",
            "rewardRate < ori(Sum(userRewardPerTokenPaid[...]))",
            "rewardRate != ori(Sum(userRewardPerTokenPaid[...]))",
            "rewardRate <= totalAccumulatedReward",
            "rewardRate < totalAccumulatedReward",
            "rewardRate != totalAccumulatedReward",
            "ori(rewardVote) != rewardReferral",
            "ori(rewardVote) != vETH",
            "ori(_totalSupply) >= rewards[msg.sender]",
            "ori(_totalSupply) > rewards[msg.sender]",
            "ori(_totalSupply) != rewards[msg.sender]",
            "ori(_totalSupply) >= rewardPerTokenStored",
            "ori(_totalSupply) > rewardPerTokenStored",
            "ori(_totalSupply) != rewardPerTokenStored",
            "ori(_totalSupply) == Sum(_balances[...])",
            "ori(_totalSupply) >= Sum(_balances[...])",
            "ori(_totalSupply) <= Sum(_balances[...])",
            "ori(_totalSupply) >= accumulatedStakingPower[msg.sender]",
            "ori(_totalSupply) > accumulatedStakingPower[msg.sender]",
            "ori(_totalSupply) != accumulatedStakingPower[msg.sender]",
            "ori(_totalSupply) >= starttime",
            "ori(_totalSupply) > starttime",
            "ori(_totalSupply) != starttime",
            "ori(_totalSupply) >= userRewardPerTokenPaid[msg.sender]",
            "ori(_totalSupply) > userRewardPerTokenPaid[msg.sender]",
            "ori(_totalSupply) != userRewardPerTokenPaid[msg.sender]",
            "ori(_totalSupply) >= vETH_REWARD_FRACTION_RATE",
            "ori(_totalSupply) > vETH_REWARD_FRACTION_RATE",
            "ori(_totalSupply) != vETH_REWARD_FRACTION_RATE",
            "ori(_totalSupply) != currentEpochReward",
            "ori(_totalSupply) >= Sum(userRewardPerTokenPaid[...])",
            "ori(_totalSupply) > Sum(userRewardPerTokenPaid[...])",
            "ori(_totalSupply) != Sum(userRewardPerTokenPaid[...])",
            "ori(_totalSupply) >= Sum(lastStakeTimes[...])",
            "ori(_totalSupply) > Sum(lastStakeTimes[...])",
            "ori(_totalSupply) != Sum(lastStakeTimes[...])",
            "ori(_totalSupply) >= Sum(rewards[...])",
            "ori(_totalSupply) > Sum(rewards[...])",
            "ori(_totalSupply) != Sum(rewards[...])",
            "ori(_totalSupply) >= vUSD_REWARD_FRACTION_RATE",
            "ori(_totalSupply) > vUSD_REWARD_FRACTION_RATE",
            "ori(_totalSupply) != vUSD_REWARD_FRACTION_RATE",
            "ori(_totalSupply) != totalAccumulatedReward",
            "rewards[msg.sender] <= ori(lastUpdateTime)",
            "rewards[msg.sender] < ori(lastUpdateTime)",
            "rewards[msg.sender] != ori(lastUpdateTime)",
            "rewards[msg.sender] <= rewardPerTokenStored",
            "rewards[msg.sender] < rewardPerTokenStored",
            "rewards[msg.sender] != rewardPerTokenStored",
            "rewards[msg.sender] <= Sum(_balances[...])",
            "rewards[msg.sender] < Sum(_balances[...])",
            "rewards[msg.sender] != Sum(_balances[...])",
            "rewards[msg.sender] <= ori(totalAccumulatedReward)",
            "rewards[msg.sender] < ori(totalAccumulatedReward)",
            "rewards[msg.sender] != ori(totalAccumulatedReward)",
            "rewards[msg.sender] == ori(currentEpoch) - 1",
            "rewards[msg.sender] <= ori(currentEpoch)",
            "rewards[msg.sender] < ori(currentEpoch)",
            "rewards[msg.sender] != ori(currentEpoch)",
            "rewards[msg.sender] <= accumulatedStakingPower[msg.sender]",
            "rewards[msg.sender] <= ori(rewardRate)",
            "rewards[msg.sender] < ori(rewardRate)",
            "rewards[msg.sender] != ori(rewardRate)",
            "rewards[msg.sender] <= ori(accumulatedStakingPower[msg.sender])",
            "rewards[msg.sender] <= ori(vUSD_REWARD_FRACTION_RATE)",
            "rewards[msg.sender] < ori(vUSD_REWARD_FRACTION_RATE)",
            "rewards[msg.sender] != ori(vUSD_REWARD_FRACTION_RATE)",
            "rewards[msg.sender] <= ori(rewardPerTokenStored)",
            "rewards[msg.sender] < ori(rewardPerTokenStored)",
            "rewards[msg.sender] != ori(rewardPerTokenStored)",
            "rewards[msg.sender] <= starttime",
            "rewards[msg.sender] < starttime",
            "rewards[msg.sender] != starttime",
            "rewards[msg.sender] <= ori(Sum(lastStakeTimes[...]))",
            "rewards[msg.sender] < ori(Sum(lastStakeTimes[...]))",
            "rewards[msg.sender] != ori(Sum(lastStakeTimes[...]))",
            "rewards[msg.sender] <= ori(Sum(accumulatedStakingPower[...]))",
            "rewards[msg.sender] <= ori(rewards[msg.sender])",
            "rewards[msg.sender] <= userRewardPerTokenPaid[msg.sender]",
            "rewards[msg.sender] < userRewardPerTokenPaid[msg.sender]",
            "rewards[msg.sender] != userRewardPerTokenPaid[msg.sender]",
            "rewards[msg.sender] <= ori(starttime)",
            "rewards[msg.sender] < ori(starttime)",
            "rewards[msg.sender] != ori(starttime)",
            "rewards[msg.sender] <= vETH_REWARD_FRACTION_RATE",
            "rewards[msg.sender] < vETH_REWARD_FRACTION_RATE",
            "rewards[msg.sender] != vETH_REWARD_FRACTION_RATE",
            "rewards[msg.sender] <= currentEpochReward",
            "rewards[msg.sender] < currentEpochReward",
            "rewards[msg.sender] != currentEpochReward",
            "rewards[msg.sender] <= Sum(userRewardPerTokenPaid[...])",
            "rewards[msg.sender] < Sum(userRewardPerTokenPaid[...])",
            "rewards[msg.sender] != Sum(userRewardPerTokenPaid[...])",
            "rewards[msg.sender] <= ori(Sum(rewards[...]))",
            "rewards[msg.sender] < ori(Sum(rewards[...]))",
            "rewards[msg.sender] != ori(Sum(rewards[...]))",
            "rewards[msg.sender] <= Sum(lastStakeTimes[...])",
            "rewards[msg.sender] < Sum(lastStakeTimes[...])",
            "rewards[msg.sender] != Sum(lastStakeTimes[...])",
            "rewards[msg.sender] == msg.value",
            "rewards[msg.sender] >= msg.value",
            "rewards[msg.sender] <= msg.value",
            "rewards[msg.sender] <= Sum(rewards[...])",
            "rewards[msg.sender] < Sum(rewards[...])",
            "rewards[msg.sender] != Sum(rewards[...])",
            "rewards[msg.sender] <= ori(periodFinish)",
            "rewards[msg.sender] < ori(periodFinish)",
            "rewards[msg.sender] != ori(periodFinish)",
            "rewards[msg.sender] <= vUSD_REWARD_FRACTION_RATE",
            "rewards[msg.sender] < vUSD_REWARD_FRACTION_RATE",
            "rewards[msg.sender] != vUSD_REWARD_FRACTION_RATE",
            "rewards[msg.sender] <= ori(Sum(_balances[...]))",
            "rewards[msg.sender] < ori(Sum(_balances[...]))",
            "rewards[msg.sender] != ori(Sum(_balances[...]))",
            "rewards[msg.sender] <= ori(Sum(userRewardPerTokenPaid[...]))",
            "rewards[msg.sender] < ori(Sum(userRewardPerTokenPaid[...]))",
            "rewards[msg.sender] != ori(Sum(userRewardPerTokenPaid[...]))",
            "rewards[msg.sender] <= totalAccumulatedReward",
            "rewards[msg.sender] < totalAccumulatedReward",
            "rewards[msg.sender] != totalAccumulatedReward",
            "ori(lastUpdateTime) <= rewardPerTokenStored",
            "ori(lastUpdateTime) < rewardPerTokenStored",
            "ori(lastUpdateTime) != rewardPerTokenStored",
            "ori(lastUpdateTime) <= Sum(_balances[...])",
            "ori(lastUpdateTime) < Sum(_balances[...])",
            "ori(lastUpdateTime) != Sum(_balances[...])",
            "ori(lastUpdateTime) != accumulatedStakingPower[msg.sender]",
            "ori(lastUpdateTime) >= starttime",
            "ori(lastUpdateTime) > starttime",
            "ori(lastUpdateTime) != starttime",
            "ori(lastUpdateTime) <= userRewardPerTokenPaid[msg.sender]",
            "ori(lastUpdateTime) < userRewardPerTokenPaid[msg.sender]",
            "ori(lastUpdateTime) != userRewardPerTokenPaid[msg.sender]",
            "ori(lastUpdateTime) <= vETH_REWARD_FRACTION_RATE",
            "ori(lastUpdateTime) < vETH_REWARD_FRACTION_RATE",
            "ori(lastUpdateTime) != vETH_REWARD_FRACTION_RATE",
            "ori(lastUpdateTime) <= currentEpochReward",
            "ori(lastUpdateTime) < currentEpochReward",
            "ori(lastUpdateTime) != currentEpochReward",
            "ori(lastUpdateTime) <= Sum(userRewardPerTokenPaid[...])",
            "ori(lastUpdateTime) < Sum(userRewardPerTokenPaid[...])",
            "ori(lastUpdateTime) != Sum(userRewardPerTokenPaid[...])",
            "ori(lastUpdateTime) <= Sum(lastStakeTimes[...])",
            "ori(lastUpdateTime) < Sum(lastStakeTimes[...])",
            "ori(lastUpdateTime) != Sum(lastStakeTimes[...])",
            "ori(lastUpdateTime) <= Sum(rewards[...])",
            "ori(lastUpdateTime) < Sum(rewards[...])",
            "ori(lastUpdateTime) != Sum(rewards[...])",
            "ori(lastUpdateTime) <= vUSD_REWARD_FRACTION_RATE",
            "ori(lastUpdateTime) < vUSD_REWARD_FRACTION_RATE",
            "ori(lastUpdateTime) != vUSD_REWARD_FRACTION_RATE",
            "ori(lastUpdateTime) <= totalAccumulatedReward",
            "ori(lastUpdateTime) < totalAccumulatedReward",
            "ori(lastUpdateTime) != totalAccumulatedReward",
            "rewardPerTokenStored <= Sum(_balances[...])",
            "rewardPerTokenStored < Sum(_balances[...])",
            "rewardPerTokenStored != Sum(_balances[...])",
            "rewardPerTokenStored <= ori(totalAccumulatedReward)",
            "rewardPerTokenStored < ori(totalAccumulatedReward)",
            "rewardPerTokenStored != ori(totalAccumulatedReward)",
            "rewardPerTokenStored >= ori(currentEpoch)",
            "rewardPerTokenStored > ori(currentEpoch)",
            "rewardPerTokenStored != ori(currentEpoch)",
            "rewardPerTokenStored != accumulatedStakingPower[msg.sender]",
            "rewardPerTokenStored <= ori(rewardRate)",
            "rewardPerTokenStored < ori(rewardRate)",
            "rewardPerTokenStored != ori(rewardRate)",
            "rewardPerTokenStored != ori(accumulatedStakingPower[msg.sender])",
            "rewardPerTokenStored >= ori(vUSD_REWARD_FRACTION_RATE)",
            "rewardPerTokenStored > ori(vUSD_REWARD_FRACTION_RATE)",
            "rewardPerTokenStored != ori(vUSD_REWARD_FRACTION_RATE)",
            "rewardPerTokenStored >= ori(rewardPerTokenStored)",
            "rewardPerTokenStored > ori(rewardPerTokenStored)",
            "rewardPerTokenStored != ori(rewardPerTokenStored)",
            "rewardPerTokenStored >= starttime",
            "rewardPerTokenStored > starttime",
            "rewardPerTokenStored != starttime",
            "rewardPerTokenStored >= ori(Sum(lastStakeTimes[...]))",
            "rewardPerTokenStored > ori(Sum(lastStakeTimes[...]))",
            "rewardPerTokenStored != ori(Sum(lastStakeTimes[...]))",
            "rewardPerTokenStored != ori(Sum(accumulatedStakingPower[...]))",
            "rewardPerTokenStored != ori(rewards[msg.sender])",
            "rewardPerTokenStored == userRewardPerTokenPaid[msg.sender]",
            "rewardPerTokenStored >= userRewardPerTokenPaid[msg.sender]",
            "rewardPerTokenStored <= userRewardPerTokenPaid[msg.sender]",
            "rewardPerTokenStored >= ori(starttime)",
            "rewardPerTokenStored > ori(starttime)",
            "rewardPerTokenStored != ori(starttime)",
            "rewardPerTokenStored >= vETH_REWARD_FRACTION_RATE",
            "rewardPerTokenStored > vETH_REWARD_FRACTION_RATE",
            "rewardPerTokenStored != vETH_REWARD_FRACTION_RATE",
            "rewardPerTokenStored <= currentEpochReward",
            "rewardPerTokenStored < currentEpochReward",
            "rewardPerTokenStored != currentEpochReward",
            "rewardPerTokenStored <= Sum(userRewardPerTokenPaid[...])",
            "rewardPerTokenStored < Sum(userRewardPerTokenPaid[...])",
            "rewardPerTokenStored != Sum(userRewardPerTokenPaid[...])",
            "rewardPerTokenStored <= ori(Sum(rewards[...]))",
            "rewardPerTokenStored < ori(Sum(rewards[...]))",
            "rewardPerTokenStored != ori(Sum(rewards[...]))",
            "rewardPerTokenStored >= Sum(lastStakeTimes[...])",
            "rewardPerTokenStored > Sum(lastStakeTimes[...])",
            "rewardPerTokenStored != Sum(lastStakeTimes[...])",
            "rewardPerTokenStored >= msg.value",
            "rewardPerTokenStored > msg.value",
            "rewardPerTokenStored != msg.value",
            "rewardPerTokenStored <= Sum(rewards[...])",
            "rewardPerTokenStored < Sum(rewards[...])",
            "rewardPerTokenStored != Sum(rewards[...])",
            "rewardPerTokenStored >= ori(periodFinish)",
            "rewardPerTokenStored > ori(periodFinish)",
            "rewardPerTokenStored != ori(periodFinish)",
            "rewardPerTokenStored >= vUSD_REWARD_FRACTION_RATE",
            "rewardPerTokenStored > vUSD_REWARD_FRACTION_RATE",
            "rewardPerTokenStored != vUSD_REWARD_FRACTION_RATE",
            "rewardPerTokenStored <= ori(Sum(_balances[...]))",
            "rewardPerTokenStored < ori(Sum(_balances[...]))",
            "rewardPerTokenStored != ori(Sum(_balances[...]))",
            "rewardPerTokenStored <= ori(Sum(userRewardPerTokenPaid[...]))",
            "rewardPerTokenStored < ori(Sum(userRewardPerTokenPaid[...]))",
            "rewardPerTokenStored != ori(Sum(userRewardPerTokenPaid[...]))",
            "rewardPerTokenStored <= totalAccumulatedReward",
            "rewardPerTokenStored < totalAccumulatedReward",
            "rewardPerTokenStored != totalAccumulatedReward",
            "Sum(_balances[...]) != ori(totalAccumulatedReward)",
            "Sum(_balances[...]) >= ori(currentEpoch)",
            "Sum(_balances[...]) > ori(currentEpoch)",
            "Sum(_balances[...]) != ori(currentEpoch)",
            "Sum(_balances[...]) >= accumulatedStakingPower[msg.sender]",
            "Sum(_balances[...]) > accumulatedStakingPower[msg.sender]",
            "Sum(_balances[...]) != accumulatedStakingPower[msg.sender]",
            "Sum(_balances[...]) >= ori(rewardRate)",
            "Sum(_balances[...]) > ori(rewardRate)",
            "Sum(_balances[...]) != ori(rewardRate)",
            "Sum(_balances[...]) >= ori(accumulatedStakingPower[msg.sender])",
            "Sum(_balances[...]) > ori(accumulatedStakingPower[msg.sender])",
            "Sum(_balances[...]) != ori(accumulatedStakingPower[msg.sender])",
            "Sum(_balances[...]) >= ori(vUSD_REWARD_FRACTION_RATE)",
            "Sum(_balances[...]) > ori(vUSD_REWARD_FRACTION_RATE)",
            "Sum(_balances[...]) != ori(vUSD_REWARD_FRACTION_RATE)",
            "Sum(_balances[...]) >= ori(rewardPerTokenStored)",
            "Sum(_balances[...]) > ori(rewardPerTokenStored)",
            "Sum(_balances[...]) != ori(rewardPerTokenStored)",
            "Sum(_balances[...]) >= starttime",
            "Sum(_balances[...]) > starttime",
            "Sum(_balances[...]) != starttime",
            "Sum(_balances[...]) >= ori(Sum(lastStakeTimes[...]))",
            "Sum(_balances[...]) > ori(Sum(lastStakeTimes[...]))",
            "Sum(_balances[...]) != ori(Sum(lastStakeTimes[...]))",
            "Sum(_balances[...]) >= ori(Sum(accumulatedStakingPower[...]))",
            "Sum(_balances[...]) > ori(Sum(accumulatedStakingPower[...]))",
            "Sum(_balances[...]) != ori(Sum(accumulatedStakingPower[...]))",
            "Sum(_balances[...]) >= ori(rewards[msg.sender])",
            "Sum(_balances[...]) > ori(rewards[msg.sender])",
            "Sum(_balances[...]) != ori(rewards[msg.sender])",
            "Sum(_balances[...]) >= userRewardPerTokenPaid[msg.sender]",
            "Sum(_balances[...]) > userRewardPerTokenPaid[msg.sender]",
            "Sum(_balances[...]) != userRewardPerTokenPaid[msg.sender]",
            "Sum(_balances[...]) >= ori(starttime)",
            "Sum(_balances[...]) > ori(starttime)",
            "Sum(_balances[...]) != ori(starttime)",
            "Sum(_balances[...]) >= vETH_REWARD_FRACTION_RATE",
            "Sum(_balances[...]) > vETH_REWARD_FRACTION_RATE",
            "Sum(_balances[...]) != vETH_REWARD_FRACTION_RATE",
            "Sum(_balances[...]) != currentEpochReward",
            "Sum(_balances[...]) >= Sum(userRewardPerTokenPaid[...])",
            "Sum(_balances[...]) > Sum(userRewardPerTokenPaid[...])",
            "Sum(_balances[...]) != Sum(userRewardPerTokenPaid[...])",
            "Sum(_balances[...]) >= ori(Sum(rewards[...]))",
            "Sum(_balances[...]) > ori(Sum(rewards[...]))",
            "Sum(_balances[...]) != ori(Sum(rewards[...]))",
            "Sum(_balances[...]) >= Sum(lastStakeTimes[...])",
            "Sum(_balances[...]) > Sum(lastStakeTimes[...])",
            "Sum(_balances[...]) != Sum(lastStakeTimes[...])",
            "Sum(_balances[...]) >= msg.value",
            "Sum(_balances[...]) > msg.value",
            "Sum(_balances[...]) != msg.value",
            "Sum(_balances[...]) >= Sum(rewards[...])",
            "Sum(_balances[...]) > Sum(rewards[...])",
            "Sum(_balances[...]) != Sum(rewards[...])",
            "Sum(_balances[...]) >= ori(periodFinish)",
            "Sum(_balances[...]) > ori(periodFinish)",
            "Sum(_balances[...]) != ori(periodFinish)",
            "Sum(_balances[...]) >= vUSD_REWARD_FRACTION_RATE",
            "Sum(_balances[...]) > vUSD_REWARD_FRACTION_RATE",
            "Sum(_balances[...]) != vUSD_REWARD_FRACTION_RATE",
            "Sum(_balances[...]) == ori(Sum(_balances[...]))",
            "Sum(_balances[...]) >= ori(Sum(_balances[...]))",
            "Sum(_balances[...]) <= ori(Sum(_balances[...]))",
            "Sum(_balances[...]) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(_balances[...]) > ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(_balances[...]) != ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(_balances[...]) != totalAccumulatedReward",
            "ori(totalAccumulatedReward) >= accumulatedStakingPower[msg.sender]",
            "ori(totalAccumulatedReward) > accumulatedStakingPower[msg.sender]",
            "ori(totalAccumulatedReward) != accumulatedStakingPower[msg.sender]",
            "ori(totalAccumulatedReward) >= starttime",
            "ori(totalAccumulatedReward) > starttime",
            "ori(totalAccumulatedReward) != starttime",
            "ori(totalAccumulatedReward) >= userRewardPerTokenPaid[msg.sender]",
            "ori(totalAccumulatedReward) > userRewardPerTokenPaid[msg.sender]",
            "ori(totalAccumulatedReward) != userRewardPerTokenPaid[msg.sender]",
            "ori(totalAccumulatedReward) >= vETH_REWARD_FRACTION_RATE",
            "ori(totalAccumulatedReward) > vETH_REWARD_FRACTION_RATE",
            "ori(totalAccumulatedReward) != vETH_REWARD_FRACTION_RATE",
            "ori(totalAccumulatedReward) >= currentEpochReward",
            "ori(totalAccumulatedReward) > currentEpochReward",
            "ori(totalAccumulatedReward) != currentEpochReward",
            "ori(totalAccumulatedReward) >= Sum(userRewardPerTokenPaid[...])",
            "ori(totalAccumulatedReward) > Sum(userRewardPerTokenPaid[...])",
            "ori(totalAccumulatedReward) != Sum(userRewardPerTokenPaid[...])",
            "ori(totalAccumulatedReward) >= Sum(lastStakeTimes[...])",
            "ori(totalAccumulatedReward) > Sum(lastStakeTimes[...])",
            "ori(totalAccumulatedReward) != Sum(lastStakeTimes[...])",
            "ori(totalAccumulatedReward) >= Sum(rewards[...])",
            "ori(totalAccumulatedReward) > Sum(rewards[...])",
            "ori(totalAccumulatedReward) != Sum(rewards[...])",
            "ori(totalAccumulatedReward) >= vUSD_REWARD_FRACTION_RATE",
            "ori(totalAccumulatedReward) > vUSD_REWARD_FRACTION_RATE",
            "ori(totalAccumulatedReward) != vUSD_REWARD_FRACTION_RATE",
            "ori(totalAccumulatedReward) == totalAccumulatedReward",
            "ori(totalAccumulatedReward) >= totalAccumulatedReward",
            "ori(totalAccumulatedReward) <= totalAccumulatedReward",
            "ori(currentEpoch) != accumulatedStakingPower[msg.sender]",
            "ori(currentEpoch) <= starttime",
            "ori(currentEpoch) < starttime",
            "ori(currentEpoch) != starttime",
            "ori(currentEpoch) <= userRewardPerTokenPaid[msg.sender]",
            "ori(currentEpoch) < userRewardPerTokenPaid[msg.sender]",
            "ori(currentEpoch) != userRewardPerTokenPaid[msg.sender]",
            "ori(currentEpoch) <= vETH_REWARD_FRACTION_RATE",
            "ori(currentEpoch) < vETH_REWARD_FRACTION_RATE",
            "ori(currentEpoch) != vETH_REWARD_FRACTION_RATE",
            "ori(currentEpoch) <= currentEpochReward",
            "ori(currentEpoch) < currentEpochReward",
            "ori(currentEpoch) != currentEpochReward",
            "ori(currentEpoch) <= Sum(userRewardPerTokenPaid[...])",
            "ori(currentEpoch) < Sum(userRewardPerTokenPaid[...])",
            "ori(currentEpoch) != Sum(userRewardPerTokenPaid[...])",
            "ori(currentEpoch) <= Sum(lastStakeTimes[...])",
            "ori(currentEpoch) < Sum(lastStakeTimes[...])",
            "ori(currentEpoch) != Sum(lastStakeTimes[...])",
            "ori(currentEpoch) <= Sum(rewards[...])",
            "ori(currentEpoch) < Sum(rewards[...])",
            "ori(currentEpoch) != Sum(rewards[...])",
            "ori(currentEpoch) <= vUSD_REWARD_FRACTION_RATE",
            "ori(currentEpoch) < vUSD_REWARD_FRACTION_RATE",
            "ori(currentEpoch) != vUSD_REWARD_FRACTION_RATE",
            "ori(currentEpoch) <= totalAccumulatedReward",
            "ori(currentEpoch) < totalAccumulatedReward",
            "ori(currentEpoch) != totalAccumulatedReward",
            "accumulatedStakingPower[msg.sender] != ori(rewardRate)",
            "accumulatedStakingPower[msg.sender] >= ori(accumulatedStakingPower[msg.sender])",
            "accumulatedStakingPower[msg.sender] != ori(vUSD_REWARD_FRACTION_RATE)",
            "accumulatedStakingPower[msg.sender] != ori(rewardPerTokenStored)",
            "accumulatedStakingPower[msg.sender] != starttime",
            "accumulatedStakingPower[msg.sender] != ori(Sum(lastStakeTimes[...]))",
            "accumulatedStakingPower[msg.sender] != ori(Sum(accumulatedStakingPower[...]))",
            "accumulatedStakingPower[msg.sender] >= ori(rewards[msg.sender])",
            "accumulatedStakingPower[msg.sender] != userRewardPerTokenPaid[msg.sender]",
            "accumulatedStakingPower[msg.sender] != ori(starttime)",
            "accumulatedStakingPower[msg.sender] != vETH_REWARD_FRACTION_RATE",
            "accumulatedStakingPower[msg.sender] <= currentEpochReward",
            "accumulatedStakingPower[msg.sender] < currentEpochReward",
            "accumulatedStakingPower[msg.sender] != currentEpochReward",
            "accumulatedStakingPower[msg.sender] != Sum(userRewardPerTokenPaid[...])",
            "accumulatedStakingPower[msg.sender] != ori(Sum(rewards[...]))",
            "accumulatedStakingPower[msg.sender] != Sum(lastStakeTimes[...])",
            "accumulatedStakingPower[msg.sender] >= msg.value",
            "accumulatedStakingPower[msg.sender] != Sum(rewards[...])",
            "accumulatedStakingPower[msg.sender] != ori(periodFinish)",
            "accumulatedStakingPower[msg.sender] != vUSD_REWARD_FRACTION_RATE",
            "accumulatedStakingPower[msg.sender] <= ori(Sum(_balances[...]))",
            "accumulatedStakingPower[msg.sender] < ori(Sum(_balances[...]))",
            "accumulatedStakingPower[msg.sender] != ori(Sum(_balances[...]))",
            "accumulatedStakingPower[msg.sender] != ori(Sum(userRewardPerTokenPaid[...]))",
            "accumulatedStakingPower[msg.sender] <= totalAccumulatedReward",
            "accumulatedStakingPower[msg.sender] < totalAccumulatedReward",
            "accumulatedStakingPower[msg.sender] != totalAccumulatedReward",
            "ori(rewardRate) >= starttime",
            "ori(rewardRate) > starttime",
            "ori(rewardRate) != starttime",
            "ori(rewardRate) >= userRewardPerTokenPaid[msg.sender]",
            "ori(rewardRate) > userRewardPerTokenPaid[msg.sender]",
            "ori(rewardRate) != userRewardPerTokenPaid[msg.sender]",
            "ori(rewardRate) >= vETH_REWARD_FRACTION_RATE",
            "ori(rewardRate) > vETH_REWARD_FRACTION_RATE",
            "ori(rewardRate) != vETH_REWARD_FRACTION_RATE",
            "ori(rewardRate) <= currentEpochReward",
            "ori(rewardRate) < currentEpochReward",
            "ori(rewardRate) != currentEpochReward",
            "ori(rewardRate) <= Sum(userRewardPerTokenPaid[...])",
            "ori(rewardRate) < Sum(userRewardPerTokenPaid[...])",
            "ori(rewardRate) != Sum(userRewardPerTokenPaid[...])",
            "ori(rewardRate) >= Sum(lastStakeTimes[...])",
            "ori(rewardRate) > Sum(lastStakeTimes[...])",
            "ori(rewardRate) != Sum(lastStakeTimes[...])",
            "ori(rewardRate) <= Sum(rewards[...])",
            "ori(rewardRate) < Sum(rewards[...])",
            "ori(rewardRate) != Sum(rewards[...])",
            "ori(rewardRate) >= vUSD_REWARD_FRACTION_RATE",
            "ori(rewardRate) > vUSD_REWARD_FRACTION_RATE",
            "ori(rewardRate) != vUSD_REWARD_FRACTION_RATE",
            "ori(rewardRate) <= totalAccumulatedReward",
            "ori(rewardRate) < totalAccumulatedReward",
            "ori(rewardRate) != totalAccumulatedReward",
            "rewardReferral != ori(yfv)",
            "rewardReferral == ori(rewardReferral)",
            "rewardReferral != ori(vUSD)",
            "rewardReferral != vETH",
            "rewardReferral != ori(vETH)",
            "ori(accumulatedStakingPower[msg.sender]) != starttime",
            "ori(accumulatedStakingPower[msg.sender]) != userRewardPerTokenPaid[msg.sender]",
            "ori(accumulatedStakingPower[msg.sender]) != vETH_REWARD_FRACTION_RATE",
            "ori(accumulatedStakingPower[msg.sender]) <= currentEpochReward",
            "ori(accumulatedStakingPower[msg.sender]) < currentEpochReward",
            "ori(accumulatedStakingPower[msg.sender]) != currentEpochReward",
            "ori(accumulatedStakingPower[msg.sender]) != Sum(userRewardPerTokenPaid[...])",
            "ori(accumulatedStakingPower[msg.sender]) != Sum(lastStakeTimes[...])",
            "ori(accumulatedStakingPower[msg.sender]) <= Sum(rewards[...])",
            "ori(accumulatedStakingPower[msg.sender]) < Sum(rewards[...])",
            "ori(accumulatedStakingPower[msg.sender]) != Sum(rewards[...])",
            "ori(accumulatedStakingPower[msg.sender]) != vUSD_REWARD_FRACTION_RATE",
            "ori(accumulatedStakingPower[msg.sender]) <= totalAccumulatedReward",
            "ori(accumulatedStakingPower[msg.sender]) < totalAccumulatedReward",
            "ori(accumulatedStakingPower[msg.sender]) != totalAccumulatedReward",
            "ori(vUSD_REWARD_FRACTION_RATE) >= starttime",
            "ori(vUSD_REWARD_FRACTION_RATE) > starttime",
            "ori(vUSD_REWARD_FRACTION_RATE) != starttime",
            "ori(vUSD_REWARD_FRACTION_RATE) <= userRewardPerTokenPaid[msg.sender]",
            "ori(vUSD_REWARD_FRACTION_RATE) < userRewardPerTokenPaid[msg.sender]",
            "ori(vUSD_REWARD_FRACTION_RATE) != userRewardPerTokenPaid[msg.sender]",
            "ori(vUSD_REWARD_FRACTION_RATE) <= vETH_REWARD_FRACTION_RATE",
            "ori(vUSD_REWARD_FRACTION_RATE) < vETH_REWARD_FRACTION_RATE",
            "ori(vUSD_REWARD_FRACTION_RATE) != vETH_REWARD_FRACTION_RATE",
            "ori(vUSD_REWARD_FRACTION_RATE) <= currentEpochReward",
            "ori(vUSD_REWARD_FRACTION_RATE) < currentEpochReward",
            "ori(vUSD_REWARD_FRACTION_RATE) != currentEpochReward",
            "ori(vUSD_REWARD_FRACTION_RATE) <= Sum(userRewardPerTokenPaid[...])",
            "ori(vUSD_REWARD_FRACTION_RATE) < Sum(userRewardPerTokenPaid[...])",
            "ori(vUSD_REWARD_FRACTION_RATE) != Sum(userRewardPerTokenPaid[...])",
            "ori(vUSD_REWARD_FRACTION_RATE) <= Sum(lastStakeTimes[...])",
            "ori(vUSD_REWARD_FRACTION_RATE) < Sum(lastStakeTimes[...])",
            "ori(vUSD_REWARD_FRACTION_RATE) != Sum(lastStakeTimes[...])",
            "ori(vUSD_REWARD_FRACTION_RATE) <= Sum(rewards[...])",
            "ori(vUSD_REWARD_FRACTION_RATE) < Sum(rewards[...])",
            "ori(vUSD_REWARD_FRACTION_RATE) != Sum(rewards[...])",
            "ori(vUSD_REWARD_FRACTION_RATE) == vUSD_REWARD_FRACTION_RATE",
            "ori(vUSD_REWARD_FRACTION_RATE) >= vUSD_REWARD_FRACTION_RATE",
            "ori(vUSD_REWARD_FRACTION_RATE) <= vUSD_REWARD_FRACTION_RATE",
            "ori(vUSD_REWARD_FRACTION_RATE) <= totalAccumulatedReward",
            "ori(vUSD_REWARD_FRACTION_RATE) < totalAccumulatedReward",
            "ori(vUSD_REWARD_FRACTION_RATE) != totalAccumulatedReward",
            "ori(rewardPerTokenStored) >= starttime",
            "ori(rewardPerTokenStored) > starttime",
            "ori(rewardPerTokenStored) != starttime",
            "ori(rewardPerTokenStored) <= userRewardPerTokenPaid[msg.sender]",
            "ori(rewardPerTokenStored) < userRewardPerTokenPaid[msg.sender]",
            "ori(rewardPerTokenStored) != userRewardPerTokenPaid[msg.sender]",
            "ori(rewardPerTokenStored) >= vETH_REWARD_FRACTION_RATE",
            "ori(rewardPerTokenStored) > vETH_REWARD_FRACTION_RATE",
            "ori(rewardPerTokenStored) != vETH_REWARD_FRACTION_RATE",
            "ori(rewardPerTokenStored) <= currentEpochReward",
            "ori(rewardPerTokenStored) < currentEpochReward",
            "ori(rewardPerTokenStored) != currentEpochReward",
            "ori(rewardPerTokenStored) <= Sum(userRewardPerTokenPaid[...])",
            "ori(rewardPerTokenStored) < Sum(userRewardPerTokenPaid[...])",
            "ori(rewardPerTokenStored) != Sum(userRewardPerTokenPaid[...])",
            "ori(rewardPerTokenStored) >= Sum(lastStakeTimes[...])",
            "ori(rewardPerTokenStored) > Sum(lastStakeTimes[...])",
            "ori(rewardPerTokenStored) != Sum(lastStakeTimes[...])",
            "ori(rewardPerTokenStored) <= Sum(rewards[...])",
            "ori(rewardPerTokenStored) < Sum(rewards[...])",
            "ori(rewardPerTokenStored) != Sum(rewards[...])",
            "ori(rewardPerTokenStored) >= vUSD_REWARD_FRACTION_RATE",
            "ori(rewardPerTokenStored) > vUSD_REWARD_FRACTION_RATE",
            "ori(rewardPerTokenStored) != vUSD_REWARD_FRACTION_RATE",
            "ori(rewardPerTokenStored) <= totalAccumulatedReward",
            "ori(rewardPerTokenStored) < totalAccumulatedReward",
            "ori(rewardPerTokenStored) != totalAccumulatedReward",
            "starttime <= ori(Sum(lastStakeTimes[...]))",
            "starttime < ori(Sum(lastStakeTimes[...]))",
            "starttime != ori(Sum(lastStakeTimes[...]))",
            "starttime != ori(Sum(accumulatedStakingPower[...]))",
            "starttime != ori(rewards[msg.sender])",
            "starttime <= userRewardPerTokenPaid[msg.sender]",
            "starttime < userRewardPerTokenPaid[msg.sender]",
            "starttime != userRewardPerTokenPaid[msg.sender]",
            "starttime == ori(starttime)",
            "starttime >= ori(starttime)",
            "starttime <= ori(starttime)",
            "starttime <= vETH_REWARD_FRACTION_RATE",
            "starttime < vETH_REWARD_FRACTION_RATE",
            "starttime != vETH_REWARD_FRACTION_RATE",
            "starttime <= currentEpochReward",
            "starttime < currentEpochReward",
            "starttime != currentEpochReward",
            "starttime <= Sum(userRewardPerTokenPaid[...])",
            "starttime < Sum(userRewardPerTokenPaid[...])",
            "starttime != Sum(userRewardPerTokenPaid[...])",
            "starttime <= ori(Sum(rewards[...]))",
            "starttime < ori(Sum(rewards[...]))",
            "starttime != ori(Sum(rewards[...]))",
            "starttime <= Sum(lastStakeTimes[...])",
            "starttime < Sum(lastStakeTimes[...])",
            "starttime != Sum(lastStakeTimes[...])",
            "starttime >= msg.value",
            "starttime > msg.value",
            "starttime != msg.value",
            "starttime <= Sum(rewards[...])",
            "starttime < Sum(rewards[...])",
            "starttime != Sum(rewards[...])",
            "starttime <= ori(periodFinish)",
            "starttime < ori(periodFinish)",
            "starttime != ori(periodFinish)",
            "starttime <= vUSD_REWARD_FRACTION_RATE",
            "starttime < vUSD_REWARD_FRACTION_RATE",
            "starttime != vUSD_REWARD_FRACTION_RATE",
            "starttime <= ori(Sum(_balances[...]))",
            "starttime < ori(Sum(_balances[...]))",
            "starttime != ori(Sum(_balances[...]))",
            "starttime <= ori(Sum(userRewardPerTokenPaid[...]))",
            "starttime < ori(Sum(userRewardPerTokenPaid[...]))",
            "starttime != ori(Sum(userRewardPerTokenPaid[...]))",
            "starttime <= totalAccumulatedReward",
            "starttime < totalAccumulatedReward",
            "starttime != totalAccumulatedReward",
            "ori(Sum(lastStakeTimes[...])) <= userRewardPerTokenPaid[msg.sender]",
            "ori(Sum(lastStakeTimes[...])) < userRewardPerTokenPaid[msg.sender]",
            "ori(Sum(lastStakeTimes[...])) != userRewardPerTokenPaid[msg.sender]",
            "ori(Sum(lastStakeTimes[...])) <= vETH_REWARD_FRACTION_RATE",
            "ori(Sum(lastStakeTimes[...])) < vETH_REWARD_FRACTION_RATE",
            "ori(Sum(lastStakeTimes[...])) != vETH_REWARD_FRACTION_RATE",
            "ori(Sum(lastStakeTimes[...])) <= currentEpochReward",
            "ori(Sum(lastStakeTimes[...])) < currentEpochReward",
            "ori(Sum(lastStakeTimes[...])) != currentEpochReward",
            "ori(Sum(lastStakeTimes[...])) <= Sum(userRewardPerTokenPaid[...])",
            "ori(Sum(lastStakeTimes[...])) < Sum(userRewardPerTokenPaid[...])",
            "ori(Sum(lastStakeTimes[...])) != Sum(userRewardPerTokenPaid[...])",
            "ori(Sum(lastStakeTimes[...])) == Sum(lastStakeTimes[...])",
            "ori(Sum(lastStakeTimes[...])) >= Sum(lastStakeTimes[...])",
            "ori(Sum(lastStakeTimes[...])) <= Sum(lastStakeTimes[...])",
            "ori(Sum(lastStakeTimes[...])) <= Sum(rewards[...])",
            "ori(Sum(lastStakeTimes[...])) < Sum(rewards[...])",
            "ori(Sum(lastStakeTimes[...])) != Sum(rewards[...])",
            "ori(Sum(lastStakeTimes[...])) >= vUSD_REWARD_FRACTION_RATE",
            "ori(Sum(lastStakeTimes[...])) > vUSD_REWARD_FRACTION_RATE",
            "ori(Sum(lastStakeTimes[...])) != vUSD_REWARD_FRACTION_RATE",
            "ori(Sum(lastStakeTimes[...])) <= totalAccumulatedReward",
            "ori(Sum(lastStakeTimes[...])) < totalAccumulatedReward",
            "ori(Sum(lastStakeTimes[...])) != totalAccumulatedReward",
            "ori(Sum(accumulatedStakingPower[...])) != userRewardPerTokenPaid[msg.sender]",
            "ori(Sum(accumulatedStakingPower[...])) != vETH_REWARD_FRACTION_RATE",
            "ori(Sum(accumulatedStakingPower[...])) <= currentEpochReward",
            "ori(Sum(accumulatedStakingPower[...])) < currentEpochReward",
            "ori(Sum(accumulatedStakingPower[...])) != currentEpochReward",
            "ori(Sum(accumulatedStakingPower[...])) != Sum(userRewardPerTokenPaid[...])",
            "ori(Sum(accumulatedStakingPower[...])) != Sum(lastStakeTimes[...])",
            "ori(Sum(accumulatedStakingPower[...])) != Sum(rewards[...])",
            "ori(Sum(accumulatedStakingPower[...])) != vUSD_REWARD_FRACTION_RATE",
            "ori(Sum(accumulatedStakingPower[...])) <= totalAccumulatedReward",
            "ori(Sum(accumulatedStakingPower[...])) < totalAccumulatedReward",
            "ori(Sum(accumulatedStakingPower[...])) != totalAccumulatedReward",
            "ori(rewards[msg.sender]) != userRewardPerTokenPaid[msg.sender]",
            "ori(rewards[msg.sender]) != vETH_REWARD_FRACTION_RATE",
            "ori(rewards[msg.sender]) <= currentEpochReward",
            "ori(rewards[msg.sender]) < currentEpochReward",
            "ori(rewards[msg.sender]) != currentEpochReward",
            "ori(rewards[msg.sender]) != Sum(userRewardPerTokenPaid[...])",
            "ori(rewards[msg.sender]) != Sum(lastStakeTimes[...])",
            "ori(rewards[msg.sender]) <= Sum(rewards[...])",
            "ori(rewards[msg.sender]) < Sum(rewards[...])",
            "ori(rewards[msg.sender]) != Sum(rewards[...])",
            "ori(rewards[msg.sender]) != vUSD_REWARD_FRACTION_RATE",
            "ori(rewards[msg.sender]) <= totalAccumulatedReward",
            "ori(rewards[msg.sender]) < totalAccumulatedReward",
            "ori(rewards[msg.sender]) != totalAccumulatedReward",
            "userRewardPerTokenPaid[msg.sender] >= ori(starttime)",
            "userRewardPerTokenPaid[msg.sender] > ori(starttime)",
            "userRewardPerTokenPaid[msg.sender] != ori(starttime)",
            "userRewardPerTokenPaid[msg.sender] >= vETH_REWARD_FRACTION_RATE",
            "userRewardPerTokenPaid[msg.sender] > vETH_REWARD_FRACTION_RATE",
            "userRewardPerTokenPaid[msg.sender] != vETH_REWARD_FRACTION_RATE",
            "userRewardPerTokenPaid[msg.sender] <= currentEpochReward",
            "userRewardPerTokenPaid[msg.sender] < currentEpochReward",
            "userRewardPerTokenPaid[msg.sender] != currentEpochReward",
            "userRewardPerTokenPaid[msg.sender] <= Sum(userRewardPerTokenPaid[...])",
            "userRewardPerTokenPaid[msg.sender] < Sum(userRewardPerTokenPaid[...])",
            "userRewardPerTokenPaid[msg.sender] != Sum(userRewardPerTokenPaid[...])",
            "userRewardPerTokenPaid[msg.sender] <= ori(Sum(rewards[...]))",
            "userRewardPerTokenPaid[msg.sender] < ori(Sum(rewards[...]))",
            "userRewardPerTokenPaid[msg.sender] != ori(Sum(rewards[...]))",
            "userRewardPerTokenPaid[msg.sender] >= Sum(lastStakeTimes[...])",
            "userRewardPerTokenPaid[msg.sender] > Sum(lastStakeTimes[...])",
            "userRewardPerTokenPaid[msg.sender] != Sum(lastStakeTimes[...])",
            "userRewardPerTokenPaid[msg.sender] >= msg.value",
            "userRewardPerTokenPaid[msg.sender] > msg.value",
            "userRewardPerTokenPaid[msg.sender] != msg.value",
            "userRewardPerTokenPaid[msg.sender] <= Sum(rewards[...])",
            "userRewardPerTokenPaid[msg.sender] < Sum(rewards[...])",
            "userRewardPerTokenPaid[msg.sender] != Sum(rewards[...])",
            "userRewardPerTokenPaid[msg.sender] >= ori(periodFinish)",
            "userRewardPerTokenPaid[msg.sender] > ori(periodFinish)",
            "userRewardPerTokenPaid[msg.sender] != ori(periodFinish)",
            "userRewardPerTokenPaid[msg.sender] >= vUSD_REWARD_FRACTION_RATE",
            "userRewardPerTokenPaid[msg.sender] > vUSD_REWARD_FRACTION_RATE",
            "userRewardPerTokenPaid[msg.sender] != vUSD_REWARD_FRACTION_RATE",
            "userRewardPerTokenPaid[msg.sender] <= ori(Sum(_balances[...]))",
            "userRewardPerTokenPaid[msg.sender] < ori(Sum(_balances[...]))",
            "userRewardPerTokenPaid[msg.sender] != ori(Sum(_balances[...]))",
            "userRewardPerTokenPaid[msg.sender] <= ori(Sum(userRewardPerTokenPaid[...]))",
            "userRewardPerTokenPaid[msg.sender] < ori(Sum(userRewardPerTokenPaid[...]))",
            "userRewardPerTokenPaid[msg.sender] != ori(Sum(userRewardPerTokenPaid[...]))",
            "userRewardPerTokenPaid[msg.sender] <= totalAccumulatedReward",
            "userRewardPerTokenPaid[msg.sender] < totalAccumulatedReward",
            "userRewardPerTokenPaid[msg.sender] != totalAccumulatedReward",
            "ori(yfv) != vETH",
            "ori(starttime) <= vETH_REWARD_FRACTION_RATE",
            "ori(starttime) < vETH_REWARD_FRACTION_RATE",
            "ori(starttime) != vETH_REWARD_FRACTION_RATE",
            "ori(starttime) <= currentEpochReward",
            "ori(starttime) < currentEpochReward",
            "ori(starttime) != currentEpochReward",
            "ori(starttime) <= Sum(userRewardPerTokenPaid[...])",
            "ori(starttime) < Sum(userRewardPerTokenPaid[...])",
            "ori(starttime) != Sum(userRewardPerTokenPaid[...])",
            "ori(starttime) <= Sum(lastStakeTimes[...])",
            "ori(starttime) < Sum(lastStakeTimes[...])",
            "ori(starttime) != Sum(lastStakeTimes[...])",
            "ori(starttime) <= Sum(rewards[...])",
            "ori(starttime) < Sum(rewards[...])",
            "ori(starttime) != Sum(rewards[...])",
            "ori(starttime) <= vUSD_REWARD_FRACTION_RATE",
            "ori(starttime) < vUSD_REWARD_FRACTION_RATE",
            "ori(starttime) != vUSD_REWARD_FRACTION_RATE",
            "ori(starttime) <= totalAccumulatedReward",
            "ori(starttime) < totalAccumulatedReward",
            "ori(starttime) != totalAccumulatedReward",
            "vETH_REWARD_FRACTION_RATE <= currentEpochReward",
            "vETH_REWARD_FRACTION_RATE < currentEpochReward",
            "vETH_REWARD_FRACTION_RATE != currentEpochReward",
            "vETH_REWARD_FRACTION_RATE <= Sum(userRewardPerTokenPaid[...])",
            "vETH_REWARD_FRACTION_RATE < Sum(userRewardPerTokenPaid[...])",
            "vETH_REWARD_FRACTION_RATE != Sum(userRewardPerTokenPaid[...])",
            "vETH_REWARD_FRACTION_RATE <= ori(Sum(rewards[...]))",
            "vETH_REWARD_FRACTION_RATE < ori(Sum(rewards[...]))",
            "vETH_REWARD_FRACTION_RATE != ori(Sum(rewards[...]))",
            "vETH_REWARD_FRACTION_RATE >= Sum(lastStakeTimes[...])",
            "vETH_REWARD_FRACTION_RATE > Sum(lastStakeTimes[...])",
            "vETH_REWARD_FRACTION_RATE != Sum(lastStakeTimes[...])",
            "vETH_REWARD_FRACTION_RATE >= msg.value",
            "vETH_REWARD_FRACTION_RATE > msg.value",
            "vETH_REWARD_FRACTION_RATE != msg.value",
            "vETH_REWARD_FRACTION_RATE <= Sum(rewards[...])",
            "vETH_REWARD_FRACTION_RATE < Sum(rewards[...])",
            "vETH_REWARD_FRACTION_RATE != Sum(rewards[...])",
            "vETH_REWARD_FRACTION_RATE >= ori(periodFinish)",
            "vETH_REWARD_FRACTION_RATE > ori(periodFinish)",
            "vETH_REWARD_FRACTION_RATE != ori(periodFinish)",
            "vETH_REWARD_FRACTION_RATE >= vUSD_REWARD_FRACTION_RATE",
            "vETH_REWARD_FRACTION_RATE > vUSD_REWARD_FRACTION_RATE",
            "vETH_REWARD_FRACTION_RATE != vUSD_REWARD_FRACTION_RATE",
            "vETH_REWARD_FRACTION_RATE <= ori(Sum(_balances[...]))",
            "vETH_REWARD_FRACTION_RATE < ori(Sum(_balances[...]))",
            "vETH_REWARD_FRACTION_RATE != ori(Sum(_balances[...]))",
            "vETH_REWARD_FRACTION_RATE <= ori(Sum(userRewardPerTokenPaid[...]))",
            "vETH_REWARD_FRACTION_RATE < ori(Sum(userRewardPerTokenPaid[...]))",
            "vETH_REWARD_FRACTION_RATE != ori(Sum(userRewardPerTokenPaid[...]))",
            "vETH_REWARD_FRACTION_RATE <= totalAccumulatedReward",
            "vETH_REWARD_FRACTION_RATE < totalAccumulatedReward",
            "vETH_REWARD_FRACTION_RATE != totalAccumulatedReward",
            "currentEpochReward >= Sum(userRewardPerTokenPaid[...])",
            "currentEpochReward > Sum(userRewardPerTokenPaid[...])",
            "currentEpochReward != Sum(userRewardPerTokenPaid[...])",
            "currentEpochReward >= ori(Sum(rewards[...]))",
            "currentEpochReward > ori(Sum(rewards[...]))",
            "currentEpochReward != ori(Sum(rewards[...]))",
            "currentEpochReward >= Sum(lastStakeTimes[...])",
            "currentEpochReward > Sum(lastStakeTimes[...])",
            "currentEpochReward != Sum(lastStakeTimes[...])",
            "currentEpochReward >= msg.value",
            "currentEpochReward > msg.value",
            "currentEpochReward != msg.value",
            "currentEpochReward >= Sum(rewards[...])",
            "currentEpochReward > Sum(rewards[...])",
            "currentEpochReward != Sum(rewards[...])",
            "currentEpochReward >= ori(periodFinish)",
            "currentEpochReward > ori(periodFinish)",
            "currentEpochReward != ori(periodFinish)",
            "currentEpochReward >= vUSD_REWARD_FRACTION_RATE",
            "currentEpochReward > vUSD_REWARD_FRACTION_RATE",
            "currentEpochReward != vUSD_REWARD_FRACTION_RATE",
            "currentEpochReward != ori(Sum(_balances[...]))",
            "currentEpochReward >= ori(Sum(userRewardPerTokenPaid[...]))",
            "currentEpochReward > ori(Sum(userRewardPerTokenPaid[...]))",
            "currentEpochReward != ori(Sum(userRewardPerTokenPaid[...]))",
            "currentEpochReward <= totalAccumulatedReward",
            "currentEpochReward < totalAccumulatedReward",
            "currentEpochReward != totalAccumulatedReward",
            "Sum(userRewardPerTokenPaid[...]) <= ori(Sum(rewards[...]))",
            "Sum(userRewardPerTokenPaid[...]) < ori(Sum(rewards[...]))",
            "Sum(userRewardPerTokenPaid[...]) != ori(Sum(rewards[...]))",
            "Sum(userRewardPerTokenPaid[...]) >= Sum(lastStakeTimes[...])",
            "Sum(userRewardPerTokenPaid[...]) > Sum(lastStakeTimes[...])",
            "Sum(userRewardPerTokenPaid[...]) != Sum(lastStakeTimes[...])",
            "Sum(userRewardPerTokenPaid[...]) >= msg.value",
            "Sum(userRewardPerTokenPaid[...]) > msg.value",
            "Sum(userRewardPerTokenPaid[...]) != msg.value",
            "Sum(userRewardPerTokenPaid[...]) <= Sum(rewards[...])",
            "Sum(userRewardPerTokenPaid[...]) < Sum(rewards[...])",
            "Sum(userRewardPerTokenPaid[...]) != Sum(rewards[...])",
            "Sum(userRewardPerTokenPaid[...]) >= ori(periodFinish)",
            "Sum(userRewardPerTokenPaid[...]) > ori(periodFinish)",
            "Sum(userRewardPerTokenPaid[...]) != ori(periodFinish)",
            "Sum(userRewardPerTokenPaid[...]) >= vUSD_REWARD_FRACTION_RATE",
            "Sum(userRewardPerTokenPaid[...]) > vUSD_REWARD_FRACTION_RATE",
            "Sum(userRewardPerTokenPaid[...]) != vUSD_REWARD_FRACTION_RATE",
            "Sum(userRewardPerTokenPaid[...]) <= ori(Sum(_balances[...]))",
            "Sum(userRewardPerTokenPaid[...]) < ori(Sum(_balances[...]))",
            "Sum(userRewardPerTokenPaid[...]) != ori(Sum(_balances[...]))",
            "Sum(userRewardPerTokenPaid[...]) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(userRewardPerTokenPaid[...]) > ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(userRewardPerTokenPaid[...]) != ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(userRewardPerTokenPaid[...]) <= totalAccumulatedReward",
            "Sum(userRewardPerTokenPaid[...]) < totalAccumulatedReward",
            "Sum(userRewardPerTokenPaid[...]) != totalAccumulatedReward",
            "ori(Sum(rewards[...])) >= Sum(lastStakeTimes[...])",
            "ori(Sum(rewards[...])) > Sum(lastStakeTimes[...])",
            "ori(Sum(rewards[...])) != Sum(lastStakeTimes[...])",
            "ori(Sum(rewards[...])) >= Sum(rewards[...])",
            "ori(Sum(rewards[...])) >= vUSD_REWARD_FRACTION_RATE",
            "ori(Sum(rewards[...])) > vUSD_REWARD_FRACTION_RATE",
            "ori(Sum(rewards[...])) != vUSD_REWARD_FRACTION_RATE",
            "ori(Sum(rewards[...])) <= totalAccumulatedReward",
            "ori(Sum(rewards[...])) < totalAccumulatedReward",
            "ori(Sum(rewards[...])) != totalAccumulatedReward",
            "ori(rewardReferral) != vETH",
            "ori(vUSD) != vETH",
            "Sum(lastStakeTimes[...]) >= msg.value",
            "Sum(lastStakeTimes[...]) > msg.value",
            "Sum(lastStakeTimes[...]) != msg.value",
            "Sum(lastStakeTimes[...]) <= Sum(rewards[...])",
            "Sum(lastStakeTimes[...]) < Sum(rewards[...])",
            "Sum(lastStakeTimes[...]) != Sum(rewards[...])",
            "Sum(lastStakeTimes[...]) >= ori(periodFinish)",
            "Sum(lastStakeTimes[...]) > ori(periodFinish)",
            "Sum(lastStakeTimes[...]) != ori(periodFinish)",
            "Sum(lastStakeTimes[...]) >= vUSD_REWARD_FRACTION_RATE",
            "Sum(lastStakeTimes[...]) > vUSD_REWARD_FRACTION_RATE",
            "Sum(lastStakeTimes[...]) != vUSD_REWARD_FRACTION_RATE",
            "Sum(lastStakeTimes[...]) <= ori(Sum(_balances[...]))",
            "Sum(lastStakeTimes[...]) < ori(Sum(_balances[...]))",
            "Sum(lastStakeTimes[...]) != ori(Sum(_balances[...]))",
            "Sum(lastStakeTimes[...]) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(lastStakeTimes[...]) < ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(lastStakeTimes[...]) != ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(lastStakeTimes[...]) <= totalAccumulatedReward",
            "Sum(lastStakeTimes[...]) < totalAccumulatedReward",
            "Sum(lastStakeTimes[...]) != totalAccumulatedReward",
            "msg.value <= Sum(rewards[...])",
            "msg.value < Sum(rewards[...])",
            "msg.value != Sum(rewards[...])",
            "msg.value <= vUSD_REWARD_FRACTION_RATE",
            "msg.value < vUSD_REWARD_FRACTION_RATE",
            "msg.value != vUSD_REWARD_FRACTION_RATE",
            "msg.value <= totalAccumulatedReward",
            "msg.value < totalAccumulatedReward",
            "msg.value != totalAccumulatedReward",
            "vETH == ori(vETH)",
            "Sum(rewards[...]) >= ori(periodFinish)",
            "Sum(rewards[...]) > ori(periodFinish)",
            "Sum(rewards[...]) != ori(periodFinish)",
            "Sum(rewards[...]) >= vUSD_REWARD_FRACTION_RATE",
            "Sum(rewards[...]) > vUSD_REWARD_FRACTION_RATE",
            "Sum(rewards[...]) != vUSD_REWARD_FRACTION_RATE",
            "Sum(rewards[...]) <= ori(Sum(_balances[...]))",
            "Sum(rewards[...]) < ori(Sum(_balances[...]))",
            "Sum(rewards[...]) != ori(Sum(_balances[...]))",
            "Sum(rewards[...]) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(rewards[...]) > ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(rewards[...]) != ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(rewards[...]) <= totalAccumulatedReward",
            "Sum(rewards[...]) < totalAccumulatedReward",
            "Sum(rewards[...]) != totalAccumulatedReward",
            "ori(periodFinish) <= vUSD_REWARD_FRACTION_RATE",
            "ori(periodFinish) < vUSD_REWARD_FRACTION_RATE",
            "ori(periodFinish) != vUSD_REWARD_FRACTION_RATE",
            "ori(periodFinish) <= totalAccumulatedReward",
            "ori(periodFinish) < totalAccumulatedReward",
            "ori(periodFinish) != totalAccumulatedReward",
            "vUSD_REWARD_FRACTION_RATE <= ori(Sum(_balances[...]))",
            "vUSD_REWARD_FRACTION_RATE < ori(Sum(_balances[...]))",
            "vUSD_REWARD_FRACTION_RATE != ori(Sum(_balances[...]))",
            "vUSD_REWARD_FRACTION_RATE <= ori(Sum(userRewardPerTokenPaid[...]))",
            "vUSD_REWARD_FRACTION_RATE < ori(Sum(userRewardPerTokenPaid[...]))",
            "vUSD_REWARD_FRACTION_RATE != ori(Sum(userRewardPerTokenPaid[...]))",
            "vUSD_REWARD_FRACTION_RATE <= totalAccumulatedReward",
            "vUSD_REWARD_FRACTION_RATE < totalAccumulatedReward",
            "vUSD_REWARD_FRACTION_RATE != totalAccumulatedReward",
            "ori(Sum(_balances[...])) != totalAccumulatedReward",
            "ori(Sum(userRewardPerTokenPaid[...])) <= totalAccumulatedReward",
            "ori(Sum(userRewardPerTokenPaid[...])) < totalAccumulatedReward",
            "ori(Sum(userRewardPerTokenPaid[...])) != totalAccumulatedReward"
        ],
        "falsified_preconditions": [
            "ori(accumulatedStakingPower[msg.sender]) == 0",
            "ori(userRewardPerTokenPaid[msg.sender]) >= ori(accumulatedStakingPower[msg.sender])",
            "ori(currentEpochReward) >= ori(_totalSupply)",
            "ori(currentEpochReward) > ori(_totalSupply)",
            "ori(currentEpochReward) >= ori(Sum(_balances[...]))",
            "ori(currentEpochReward) > ori(Sum(_balances[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(accumulatedStakingPower[msg.sender])",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(accumulatedStakingPower[msg.sender])",
            "ori(_totalSupply) <= ori(totalAccumulatedReward)",
            "ori(_totalSupply) < ori(totalAccumulatedReward)",
            "ori(lastUpdateTime) >= ori(accumulatedStakingPower[msg.sender])",
            "ori(lastUpdateTime) > ori(accumulatedStakingPower[msg.sender])",
            "ori(totalAccumulatedReward) >= ori(Sum(_balances[...]))",
            "ori(totalAccumulatedReward) > ori(Sum(_balances[...]))",
            "ori(currentEpoch) == ori(accumulatedStakingPower[msg.sender]) + 1",
            "ori(currentEpoch) >= ori(accumulatedStakingPower[msg.sender])",
            "ori(currentEpoch) > ori(accumulatedStakingPower[msg.sender])",
            "ori(rewardRate) >= ori(accumulatedStakingPower[msg.sender])",
            "ori(rewardRate) > ori(accumulatedStakingPower[msg.sender])",
            "ori(accumulatedStakingPower[msg.sender]) <= ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(accumulatedStakingPower[msg.sender]) < ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(accumulatedStakingPower[msg.sender]) <= ori(rewardPerTokenStored)",
            "ori(accumulatedStakingPower[msg.sender]) < ori(rewardPerTokenStored)",
            "ori(accumulatedStakingPower[msg.sender]) <= ori(Sum(lastStakeTimes[...]))",
            "ori(accumulatedStakingPower[msg.sender]) < ori(Sum(lastStakeTimes[...]))",
            "ori(accumulatedStakingPower[msg.sender]) <= ori(rewards[msg.sender])",
            "ori(accumulatedStakingPower[msg.sender]) <= ori(starttime)",
            "ori(accumulatedStakingPower[msg.sender]) < ori(starttime)",
            "ori(accumulatedStakingPower[msg.sender]) == msg.value",
            "ori(accumulatedStakingPower[msg.sender]) <= msg.value",
            "ori(accumulatedStakingPower[msg.sender]) <= ori(periodFinish)",
            "ori(accumulatedStakingPower[msg.sender]) < ori(periodFinish)",
            "ori(accumulatedStakingPower[msg.sender]) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(accumulatedStakingPower[msg.sender]) < ori(Sum(userRewardPerTokenPaid[...]))"
        ],
        "falsified_postconditions": [
            "_totalSupply <= ori(currentEpochReward)",
            "_totalSupply < ori(currentEpochReward)",
            "_totalSupply <= ori(totalAccumulatedReward)",
            "_totalSupply < ori(totalAccumulatedReward)",
            "_totalSupply <= currentEpochReward",
            "_totalSupply < currentEpochReward",
            "_totalSupply <= totalAccumulatedReward",
            "_totalSupply < totalAccumulatedReward",
            "lastUpdateTime >= ori(accumulatedStakingPower[msg.sender])",
            "lastUpdateTime > ori(accumulatedStakingPower[msg.sender])",
            "ori(currentEpochReward) >= Sum(_balances[...])",
            "ori(currentEpochReward) > Sum(_balances[...])",
            "currentEpoch == ori(accumulatedStakingPower[msg.sender]) + 1",
            "currentEpoch >= ori(accumulatedStakingPower[msg.sender])",
            "currentEpoch > ori(accumulatedStakingPower[msg.sender])",
            "periodFinish >= ori(accumulatedStakingPower[msg.sender])",
            "periodFinish > ori(accumulatedStakingPower[msg.sender])",
            "rewardRate >= ori(accumulatedStakingPower[msg.sender])",
            "rewardRate > ori(accumulatedStakingPower[msg.sender])",
            "ori(_totalSupply) <= currentEpochReward",
            "ori(_totalSupply) < currentEpochReward",
            "ori(_totalSupply) <= totalAccumulatedReward",
            "ori(_totalSupply) < totalAccumulatedReward",
            "rewards[msg.sender] == ori(accumulatedStakingPower[msg.sender])",
            "rewards[msg.sender] >= ori(accumulatedStakingPower[msg.sender])",
            "rewardPerTokenStored >= ori(accumulatedStakingPower[msg.sender])",
            "rewardPerTokenStored > ori(accumulatedStakingPower[msg.sender])",
            "Sum(_balances[...]) <= ori(totalAccumulatedReward)",
            "Sum(_balances[...]) < ori(totalAccumulatedReward)",
            "Sum(_balances[...]) <= currentEpochReward",
            "Sum(_balances[...]) < currentEpochReward",
            "Sum(_balances[...]) <= totalAccumulatedReward",
            "Sum(_balances[...]) < totalAccumulatedReward",
            "ori(accumulatedStakingPower[msg.sender]) <= starttime",
            "ori(accumulatedStakingPower[msg.sender]) < starttime",
            "ori(accumulatedStakingPower[msg.sender]) <= userRewardPerTokenPaid[msg.sender]",
            "ori(accumulatedStakingPower[msg.sender]) < userRewardPerTokenPaid[msg.sender]",
            "ori(accumulatedStakingPower[msg.sender]) <= vETH_REWARD_FRACTION_RATE",
            "ori(accumulatedStakingPower[msg.sender]) < vETH_REWARD_FRACTION_RATE",
            "ori(accumulatedStakingPower[msg.sender]) <= Sum(userRewardPerTokenPaid[...])",
            "ori(accumulatedStakingPower[msg.sender]) < Sum(userRewardPerTokenPaid[...])",
            "ori(accumulatedStakingPower[msg.sender]) <= Sum(lastStakeTimes[...])",
            "ori(accumulatedStakingPower[msg.sender]) < Sum(lastStakeTimes[...])",
            "ori(accumulatedStakingPower[msg.sender]) <= vUSD_REWARD_FRACTION_RATE",
            "ori(accumulatedStakingPower[msg.sender]) < vUSD_REWARD_FRACTION_RATE",
            "currentEpochReward >= ori(Sum(_balances[...]))",
            "currentEpochReward > ori(Sum(_balances[...]))",
            "ori(Sum(_balances[...])) <= totalAccumulatedReward",
            "ori(Sum(_balances[...])) < totalAccumulatedReward"
        ]
    },
    {
        "func": "getReward()",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "notifyRewardAmount(reward)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [
            "ori(currentEpochReward) > 0",
            "ori(currentEpochReward) == 63000000000000000000000",
            "ori(currentEpochReward) one of [63000000000000000000000]",
            "msg.sender != 0",
            "ori(_owner) != 0",
            "ori(vETH_REWARD_FRACTION_RATE) > 0",
            "ori(vETH_REWARD_FRACTION_RATE) == 21000000000000",
            "ori(vETH_REWARD_FRACTION_RATE) one of [21000000000000]",
            "reward > 0",
            "reward == 888888888888888888",
            "reward one of [888888888888888888]",
            "ori(rewardVote) != 0",
            "ori(_totalSupply) == 0",
            "ori(_totalSupply) one of [0]",
            "ori(lastUpdateTime) == 0",
            "ori(lastUpdateTime) one of [0]",
            "ori(totalAccumulatedReward) == 0",
            "ori(totalAccumulatedReward) one of [0]",
            "ori(currentEpoch) == 0",
            "ori(currentEpoch) one of [0]",
            "ori(rewardRate) == 0",
            "ori(rewardRate) one of [0]",
            "ori(vUSD_REWARD_FRACTION_RATE) > 0",
            "ori(vUSD_REWARD_FRACTION_RATE) == 21000000000",
            "ori(vUSD_REWARD_FRACTION_RATE) one of [21000000000]",
            "ori(rewardPerTokenStored) == 0",
            "ori(rewardPerTokenStored) one of [0]",
            "ori(Sum(lastStakeTimes[...])) == 0",
            "ori(Sum(lastStakeTimes[...])) one of [0]",
            "ori(Sum(accumulatedStakingPower[...])) == 0",
            "ori(Sum(accumulatedStakingPower[...])) one of [0]",
            "ori(yfv) != 0",
            "ori(starttime) > 0",
            "ori(starttime) == 1598018400",
            "ori(starttime) one of [1598018400]",
            "ori(Sum(rewards[...])) == 0",
            "ori(Sum(rewards[...])) one of [0]",
            "ori(rewardReferral) != 0",
            "ori(vUSD) != 0",
            "msg.value == 0",
            "msg.value one of [0]",
            "ori(periodFinish) == 0",
            "ori(periodFinish) one of [0]",
            "ori(vETH) != 0",
            "ori(Sum(_balances[...])) == 0",
            "ori(Sum(_balances[...])) one of [0]",
            "ori(Sum(userRewardPerTokenPaid[...])) == 0",
            "ori(Sum(userRewardPerTokenPaid[...])) one of [0]",
            "ori(currentEpochReward) >= ori(vETH_REWARD_FRACTION_RATE)",
            "ori(currentEpochReward) > ori(vETH_REWARD_FRACTION_RATE)",
            "ori(currentEpochReward) != ori(vETH_REWARD_FRACTION_RATE)",
            "ori(currentEpochReward) >= reward",
            "ori(currentEpochReward) > reward",
            "ori(currentEpochReward) != reward",
            "ori(currentEpochReward) >= ori(_totalSupply)",
            "ori(currentEpochReward) > ori(_totalSupply)",
            "ori(currentEpochReward) != ori(_totalSupply)",
            "ori(currentEpochReward) >= ori(lastUpdateTime)",
            "ori(currentEpochReward) > ori(lastUpdateTime)",
            "ori(currentEpochReward) != ori(lastUpdateTime)",
            "ori(currentEpochReward) >= ori(totalAccumulatedReward)",
            "ori(currentEpochReward) > ori(totalAccumulatedReward)",
            "ori(currentEpochReward) != ori(totalAccumulatedReward)",
            "ori(currentEpochReward) >= ori(currentEpoch)",
            "ori(currentEpochReward) > ori(currentEpoch)",
            "ori(currentEpochReward) != ori(currentEpoch)",
            "ori(currentEpochReward) >= ori(rewardRate)",
            "ori(currentEpochReward) > ori(rewardRate)",
            "ori(currentEpochReward) != ori(rewardRate)",
            "ori(currentEpochReward) >= ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(currentEpochReward) > ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(currentEpochReward) != ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(currentEpochReward) >= ori(rewardPerTokenStored)",
            "ori(currentEpochReward) > ori(rewardPerTokenStored)",
            "ori(currentEpochReward) != ori(rewardPerTokenStored)",
            "ori(currentEpochReward) >= ori(Sum(lastStakeTimes[...]))",
            "ori(currentEpochReward) > ori(Sum(lastStakeTimes[...]))",
            "ori(currentEpochReward) != ori(Sum(lastStakeTimes[...]))",
            "ori(currentEpochReward) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(currentEpochReward) > ori(Sum(accumulatedStakingPower[...]))",
            "ori(currentEpochReward) != ori(Sum(accumulatedStakingPower[...]))",
            "ori(currentEpochReward) >= ori(starttime)",
            "ori(currentEpochReward) > ori(starttime)",
            "ori(currentEpochReward) != ori(starttime)",
            "ori(currentEpochReward) >= ori(Sum(rewards[...]))",
            "ori(currentEpochReward) > ori(Sum(rewards[...]))",
            "ori(currentEpochReward) != ori(Sum(rewards[...]))",
            "ori(currentEpochReward) >= msg.value",
            "ori(currentEpochReward) > msg.value",
            "ori(currentEpochReward) != msg.value",
            "ori(currentEpochReward) >= ori(periodFinish)",
            "ori(currentEpochReward) > ori(periodFinish)",
            "ori(currentEpochReward) != ori(periodFinish)",
            "ori(currentEpochReward) >= ori(Sum(_balances[...]))",
            "ori(currentEpochReward) > ori(Sum(_balances[...]))",
            "ori(currentEpochReward) != ori(Sum(_balances[...]))",
            "ori(currentEpochReward) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(currentEpochReward) > ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(currentEpochReward) != ori(Sum(userRewardPerTokenPaid[...]))",
            "msg.sender == ori(_owner)",
            "msg.sender != ori(rewardVote)",
            "msg.sender != ori(yfv)",
            "msg.sender != ori(rewardReferral)",
            "msg.sender != ori(vUSD)",
            "msg.sender != ori(vETH)",
            "ori(_owner) != ori(rewardVote)",
            "ori(_owner) != ori(yfv)",
            "ori(_owner) != ori(rewardReferral)",
            "ori(_owner) != ori(vUSD)",
            "ori(_owner) != ori(vETH)",
            "ori(vETH_REWARD_FRACTION_RATE) <= reward",
            "ori(vETH_REWARD_FRACTION_RATE) < reward",
            "ori(vETH_REWARD_FRACTION_RATE) != reward",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(_totalSupply)",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(_totalSupply)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(_totalSupply)",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(lastUpdateTime)",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(lastUpdateTime)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(lastUpdateTime)",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(totalAccumulatedReward)",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(totalAccumulatedReward)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(totalAccumulatedReward)",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(currentEpoch)",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(currentEpoch)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(currentEpoch)",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(rewardRate)",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(rewardRate)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(rewardRate)",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(rewardPerTokenStored)",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(rewardPerTokenStored)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(rewardPerTokenStored)",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(Sum(lastStakeTimes[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(Sum(lastStakeTimes[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(Sum(lastStakeTimes[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(Sum(accumulatedStakingPower[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(Sum(accumulatedStakingPower[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(starttime)",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(starttime)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(starttime)",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(Sum(rewards[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(Sum(rewards[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(Sum(rewards[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) >= msg.value",
            "ori(vETH_REWARD_FRACTION_RATE) > msg.value",
            "ori(vETH_REWARD_FRACTION_RATE) != msg.value",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(periodFinish)",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(periodFinish)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(periodFinish)",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(Sum(_balances[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(Sum(_balances[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(Sum(_balances[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(Sum(userRewardPerTokenPaid[...]))",
            "reward >= ori(_totalSupply)",
            "reward > ori(_totalSupply)",
            "reward != ori(_totalSupply)",
            "reward >= ori(lastUpdateTime)",
            "reward > ori(lastUpdateTime)",
            "reward != ori(lastUpdateTime)",
            "reward >= ori(totalAccumulatedReward)",
            "reward > ori(totalAccumulatedReward)",
            "reward != ori(totalAccumulatedReward)",
            "reward >= ori(currentEpoch)",
            "reward > ori(currentEpoch)",
            "reward != ori(currentEpoch)",
            "reward >= ori(rewardRate)",
            "reward > ori(rewardRate)",
            "reward != ori(rewardRate)",
            "reward >= ori(vUSD_REWARD_FRACTION_RATE)",
            "reward > ori(vUSD_REWARD_FRACTION_RATE)",
            "reward != ori(vUSD_REWARD_FRACTION_RATE)",
            "reward >= ori(rewardPerTokenStored)",
            "reward > ori(rewardPerTokenStored)",
            "reward != ori(rewardPerTokenStored)",
            "reward >= ori(Sum(lastStakeTimes[...]))",
            "reward > ori(Sum(lastStakeTimes[...]))",
            "reward != ori(Sum(lastStakeTimes[...]))",
            "reward >= ori(Sum(accumulatedStakingPower[...]))",
            "reward > ori(Sum(accumulatedStakingPower[...]))",
            "reward != ori(Sum(accumulatedStakingPower[...]))",
            "reward >= ori(starttime)",
            "reward > ori(starttime)",
            "reward != ori(starttime)",
            "reward >= ori(Sum(rewards[...]))",
            "reward > ori(Sum(rewards[...]))",
            "reward != ori(Sum(rewards[...]))",
            "reward >= msg.value",
            "reward > msg.value",
            "reward != msg.value",
            "reward >= ori(periodFinish)",
            "reward > ori(periodFinish)",
            "reward != ori(periodFinish)",
            "reward >= ori(Sum(_balances[...]))",
            "reward > ori(Sum(_balances[...]))",
            "reward != ori(Sum(_balances[...]))",
            "reward >= ori(Sum(userRewardPerTokenPaid[...]))",
            "reward > ori(Sum(userRewardPerTokenPaid[...]))",
            "reward != ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(rewardVote) != ori(yfv)",
            "ori(rewardVote) != ori(rewardReferral)",
            "ori(rewardVote) != ori(vUSD)",
            "ori(rewardVote) != ori(vETH)",
            "ori(_totalSupply) == ori(lastUpdateTime)",
            "ori(_totalSupply) >= ori(lastUpdateTime)",
            "ori(_totalSupply) <= ori(lastUpdateTime)",
            "ori(_totalSupply) == ori(totalAccumulatedReward)",
            "ori(_totalSupply) >= ori(totalAccumulatedReward)",
            "ori(_totalSupply) <= ori(totalAccumulatedReward)",
            "ori(_totalSupply) == ori(currentEpoch)",
            "ori(_totalSupply) >= ori(currentEpoch)",
            "ori(_totalSupply) <= ori(currentEpoch)",
            "ori(_totalSupply) == ori(rewardRate)",
            "ori(_totalSupply) >= ori(rewardRate)",
            "ori(_totalSupply) <= ori(rewardRate)",
            "ori(_totalSupply) <= ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(_totalSupply) < ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(_totalSupply) != ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(_totalSupply) == ori(rewardPerTokenStored)",
            "ori(_totalSupply) >= ori(rewardPerTokenStored)",
            "ori(_totalSupply) <= ori(rewardPerTokenStored)",
            "ori(_totalSupply) == ori(Sum(lastStakeTimes[...]))",
            "ori(_totalSupply) >= ori(Sum(lastStakeTimes[...]))",
            "ori(_totalSupply) <= ori(Sum(lastStakeTimes[...]))",
            "ori(_totalSupply) == ori(Sum(accumulatedStakingPower[...]))",
            "ori(_totalSupply) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(_totalSupply) <= ori(Sum(accumulatedStakingPower[...]))",
            "ori(_totalSupply) <= ori(starttime)",
            "ori(_totalSupply) < ori(starttime)",
            "ori(_totalSupply) != ori(starttime)",
            "ori(_totalSupply) == ori(Sum(rewards[...]))",
            "ori(_totalSupply) >= ori(Sum(rewards[...]))",
            "ori(_totalSupply) <= ori(Sum(rewards[...]))",
            "ori(_totalSupply) == msg.value",
            "ori(_totalSupply) >= msg.value",
            "ori(_totalSupply) <= msg.value",
            "ori(_totalSupply) == ori(periodFinish)",
            "ori(_totalSupply) >= ori(periodFinish)",
            "ori(_totalSupply) <= ori(periodFinish)",
            "ori(_totalSupply) == ori(Sum(_balances[...]))",
            "ori(_totalSupply) >= ori(Sum(_balances[...]))",
            "ori(_totalSupply) <= ori(Sum(_balances[...]))",
            "ori(_totalSupply) == ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(_totalSupply) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(_totalSupply) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(lastUpdateTime) == ori(totalAccumulatedReward)",
            "ori(lastUpdateTime) >= ori(totalAccumulatedReward)",
            "ori(lastUpdateTime) <= ori(totalAccumulatedReward)",
            "ori(lastUpdateTime) == ori(currentEpoch)",
            "ori(lastUpdateTime) >= ori(currentEpoch)",
            "ori(lastUpdateTime) <= ori(currentEpoch)",
            "ori(lastUpdateTime) == ori(rewardRate)",
            "ori(lastUpdateTime) >= ori(rewardRate)",
            "ori(lastUpdateTime) <= ori(rewardRate)",
            "ori(lastUpdateTime) <= ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(lastUpdateTime) < ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(lastUpdateTime) != ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(lastUpdateTime) == ori(rewardPerTokenStored)",
            "ori(lastUpdateTime) >= ori(rewardPerTokenStored)",
            "ori(lastUpdateTime) <= ori(rewardPerTokenStored)",
            "ori(lastUpdateTime) == ori(Sum(lastStakeTimes[...]))",
            "ori(lastUpdateTime) >= ori(Sum(lastStakeTimes[...]))",
            "ori(lastUpdateTime) <= ori(Sum(lastStakeTimes[...]))",
            "ori(lastUpdateTime) == ori(Sum(accumulatedStakingPower[...]))",
            "ori(lastUpdateTime) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(lastUpdateTime) <= ori(Sum(accumulatedStakingPower[...]))",
            "ori(lastUpdateTime) <= ori(starttime)",
            "ori(lastUpdateTime) < ori(starttime)",
            "ori(lastUpdateTime) != ori(starttime)",
            "ori(lastUpdateTime) == ori(Sum(rewards[...]))",
            "ori(lastUpdateTime) >= ori(Sum(rewards[...]))",
            "ori(lastUpdateTime) <= ori(Sum(rewards[...]))",
            "ori(lastUpdateTime) == msg.value",
            "ori(lastUpdateTime) >= msg.value",
            "ori(lastUpdateTime) <= msg.value",
            "ori(lastUpdateTime) == ori(periodFinish)",
            "ori(lastUpdateTime) >= ori(periodFinish)",
            "ori(lastUpdateTime) <= ori(periodFinish)",
            "ori(lastUpdateTime) == ori(Sum(_balances[...]))",
            "ori(lastUpdateTime) >= ori(Sum(_balances[...]))",
            "ori(lastUpdateTime) <= ori(Sum(_balances[...]))",
            "ori(lastUpdateTime) == ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(lastUpdateTime) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(lastUpdateTime) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(totalAccumulatedReward) == ori(currentEpoch)",
            "ori(totalAccumulatedReward) >= ori(currentEpoch)",
            "ori(totalAccumulatedReward) <= ori(currentEpoch)",
            "ori(totalAccumulatedReward) == ori(rewardRate)",
            "ori(totalAccumulatedReward) >= ori(rewardRate)",
            "ori(totalAccumulatedReward) <= ori(rewardRate)",
            "ori(totalAccumulatedReward) <= ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(totalAccumulatedReward) < ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(totalAccumulatedReward) != ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(totalAccumulatedReward) == ori(rewardPerTokenStored)",
            "ori(totalAccumulatedReward) >= ori(rewardPerTokenStored)",
            "ori(totalAccumulatedReward) <= ori(rewardPerTokenStored)",
            "ori(totalAccumulatedReward) == ori(Sum(lastStakeTimes[...]))",
            "ori(totalAccumulatedReward) >= ori(Sum(lastStakeTimes[...]))",
            "ori(totalAccumulatedReward) <= ori(Sum(lastStakeTimes[...]))",
            "ori(totalAccumulatedReward) == ori(Sum(accumulatedStakingPower[...]))",
            "ori(totalAccumulatedReward) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(totalAccumulatedReward) <= ori(Sum(accumulatedStakingPower[...]))",
            "ori(totalAccumulatedReward) <= ori(starttime)",
            "ori(totalAccumulatedReward) < ori(starttime)",
            "ori(totalAccumulatedReward) != ori(starttime)",
            "ori(totalAccumulatedReward) == ori(Sum(rewards[...]))",
            "ori(totalAccumulatedReward) >= ori(Sum(rewards[...]))",
            "ori(totalAccumulatedReward) <= ori(Sum(rewards[...]))",
            "ori(totalAccumulatedReward) == msg.value",
            "ori(totalAccumulatedReward) >= msg.value",
            "ori(totalAccumulatedReward) <= msg.value",
            "ori(totalAccumulatedReward) == ori(periodFinish)",
            "ori(totalAccumulatedReward) >= ori(periodFinish)",
            "ori(totalAccumulatedReward) <= ori(periodFinish)",
            "ori(totalAccumulatedReward) == ori(Sum(_balances[...]))",
            "ori(totalAccumulatedReward) >= ori(Sum(_balances[...]))",
            "ori(totalAccumulatedReward) <= ori(Sum(_balances[...]))",
            "ori(totalAccumulatedReward) == ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(totalAccumulatedReward) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(totalAccumulatedReward) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(currentEpoch) == ori(rewardRate)",
            "ori(currentEpoch) >= ori(rewardRate)",
            "ori(currentEpoch) <= ori(rewardRate)",
            "ori(currentEpoch) <= ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(currentEpoch) < ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(currentEpoch) != ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(currentEpoch) == ori(rewardPerTokenStored)",
            "ori(currentEpoch) >= ori(rewardPerTokenStored)",
            "ori(currentEpoch) <= ori(rewardPerTokenStored)",
            "ori(currentEpoch) == ori(Sum(lastStakeTimes[...]))",
            "ori(currentEpoch) >= ori(Sum(lastStakeTimes[...]))",
            "ori(currentEpoch) <= ori(Sum(lastStakeTimes[...]))",
            "ori(currentEpoch) == ori(Sum(accumulatedStakingPower[...]))",
            "ori(currentEpoch) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(currentEpoch) <= ori(Sum(accumulatedStakingPower[...]))",
            "ori(currentEpoch) <= ori(starttime)",
            "ori(currentEpoch) < ori(starttime)",
            "ori(currentEpoch) != ori(starttime)",
            "ori(currentEpoch) == ori(Sum(rewards[...]))",
            "ori(currentEpoch) >= ori(Sum(rewards[...]))",
            "ori(currentEpoch) <= ori(Sum(rewards[...]))",
            "ori(currentEpoch) == msg.value",
            "ori(currentEpoch) >= msg.value",
            "ori(currentEpoch) <= msg.value",
            "ori(currentEpoch) == ori(periodFinish)",
            "ori(currentEpoch) >= ori(periodFinish)",
            "ori(currentEpoch) <= ori(periodFinish)",
            "ori(currentEpoch) == ori(Sum(_balances[...]))",
            "ori(currentEpoch) >= ori(Sum(_balances[...]))",
            "ori(currentEpoch) <= ori(Sum(_balances[...]))",
            "ori(currentEpoch) == ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(currentEpoch) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(currentEpoch) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(rewardRate) <= ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(rewardRate) < ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(rewardRate) != ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(rewardRate) == ori(rewardPerTokenStored)",
            "ori(rewardRate) >= ori(rewardPerTokenStored)",
            "ori(rewardRate) <= ori(rewardPerTokenStored)",
            "ori(rewardRate) == ori(Sum(lastStakeTimes[...]))",
            "ori(rewardRate) >= ori(Sum(lastStakeTimes[...]))",
            "ori(rewardRate) <= ori(Sum(lastStakeTimes[...]))",
            "ori(rewardRate) == ori(Sum(accumulatedStakingPower[...]))",
            "ori(rewardRate) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(rewardRate) <= ori(Sum(accumulatedStakingPower[...]))",
            "ori(rewardRate) <= ori(starttime)",
            "ori(rewardRate) < ori(starttime)",
            "ori(rewardRate) != ori(starttime)",
            "ori(rewardRate) == ori(Sum(rewards[...]))",
            "ori(rewardRate) >= ori(Sum(rewards[...]))",
            "ori(rewardRate) <= ori(Sum(rewards[...]))",
            "ori(rewardRate) == msg.value",
            "ori(rewardRate) >= msg.value",
            "ori(rewardRate) <= msg.value",
            "ori(rewardRate) == ori(periodFinish)",
            "ori(rewardRate) >= ori(periodFinish)",
            "ori(rewardRate) <= ori(periodFinish)",
            "ori(rewardRate) == ori(Sum(_balances[...]))",
            "ori(rewardRate) >= ori(Sum(_balances[...]))",
            "ori(rewardRate) <= ori(Sum(_balances[...]))",
            "ori(rewardRate) == ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(rewardRate) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(rewardRate) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) >= ori(rewardPerTokenStored)",
            "ori(vUSD_REWARD_FRACTION_RATE) > ori(rewardPerTokenStored)",
            "ori(vUSD_REWARD_FRACTION_RATE) != ori(rewardPerTokenStored)",
            "ori(vUSD_REWARD_FRACTION_RATE) >= ori(Sum(lastStakeTimes[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) > ori(Sum(lastStakeTimes[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) != ori(Sum(lastStakeTimes[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) > ori(Sum(accumulatedStakingPower[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) != ori(Sum(accumulatedStakingPower[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) >= ori(starttime)",
            "ori(vUSD_REWARD_FRACTION_RATE) > ori(starttime)",
            "ori(vUSD_REWARD_FRACTION_RATE) != ori(starttime)",
            "ori(vUSD_REWARD_FRACTION_RATE) >= ori(Sum(rewards[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) > ori(Sum(rewards[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) != ori(Sum(rewards[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) >= msg.value",
            "ori(vUSD_REWARD_FRACTION_RATE) > msg.value",
            "ori(vUSD_REWARD_FRACTION_RATE) != msg.value",
            "ori(vUSD_REWARD_FRACTION_RATE) >= ori(periodFinish)",
            "ori(vUSD_REWARD_FRACTION_RATE) > ori(periodFinish)",
            "ori(vUSD_REWARD_FRACTION_RATE) != ori(periodFinish)",
            "ori(vUSD_REWARD_FRACTION_RATE) >= ori(Sum(_balances[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) > ori(Sum(_balances[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) != ori(Sum(_balances[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) > ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) != ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(rewardPerTokenStored) == ori(Sum(lastStakeTimes[...]))",
            "ori(rewardPerTokenStored) >= ori(Sum(lastStakeTimes[...]))",
            "ori(rewardPerTokenStored) <= ori(Sum(lastStakeTimes[...]))",
            "ori(rewardPerTokenStored) == ori(Sum(accumulatedStakingPower[...]))",
            "ori(rewardPerTokenStored) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(rewardPerTokenStored) <= ori(Sum(accumulatedStakingPower[...]))",
            "ori(rewardPerTokenStored) <= ori(starttime)",
            "ori(rewardPerTokenStored) < ori(starttime)",
            "ori(rewardPerTokenStored) != ori(starttime)",
            "ori(rewardPerTokenStored) == ori(Sum(rewards[...]))",
            "ori(rewardPerTokenStored) >= ori(Sum(rewards[...]))",
            "ori(rewardPerTokenStored) <= ori(Sum(rewards[...]))",
            "ori(rewardPerTokenStored) == msg.value",
            "ori(rewardPerTokenStored) >= msg.value",
            "ori(rewardPerTokenStored) <= msg.value",
            "ori(rewardPerTokenStored) == ori(periodFinish)",
            "ori(rewardPerTokenStored) >= ori(periodFinish)",
            "ori(rewardPerTokenStored) <= ori(periodFinish)",
            "ori(rewardPerTokenStored) == ori(Sum(_balances[...]))",
            "ori(rewardPerTokenStored) >= ori(Sum(_balances[...]))",
            "ori(rewardPerTokenStored) <= ori(Sum(_balances[...]))",
            "ori(rewardPerTokenStored) == ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(rewardPerTokenStored) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(rewardPerTokenStored) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(lastStakeTimes[...])) == ori(Sum(accumulatedStakingPower[...]))",
            "ori(Sum(lastStakeTimes[...])) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(Sum(lastStakeTimes[...])) <= ori(Sum(accumulatedStakingPower[...]))",
            "ori(Sum(lastStakeTimes[...])) <= ori(starttime)",
            "ori(Sum(lastStakeTimes[...])) < ori(starttime)",
            "ori(Sum(lastStakeTimes[...])) != ori(starttime)",
            "ori(Sum(lastStakeTimes[...])) == ori(Sum(rewards[...]))",
            "ori(Sum(lastStakeTimes[...])) >= ori(Sum(rewards[...]))",
            "ori(Sum(lastStakeTimes[...])) <= ori(Sum(rewards[...]))",
            "ori(Sum(lastStakeTimes[...])) == msg.value",
            "ori(Sum(lastStakeTimes[...])) >= msg.value",
            "ori(Sum(lastStakeTimes[...])) <= msg.value",
            "ori(Sum(lastStakeTimes[...])) == ori(periodFinish)",
            "ori(Sum(lastStakeTimes[...])) >= ori(periodFinish)",
            "ori(Sum(lastStakeTimes[...])) <= ori(periodFinish)",
            "ori(Sum(lastStakeTimes[...])) == ori(Sum(_balances[...]))",
            "ori(Sum(lastStakeTimes[...])) >= ori(Sum(_balances[...]))",
            "ori(Sum(lastStakeTimes[...])) <= ori(Sum(_balances[...]))",
            "ori(Sum(lastStakeTimes[...])) == ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(lastStakeTimes[...])) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(lastStakeTimes[...])) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(accumulatedStakingPower[...])) <= ori(starttime)",
            "ori(Sum(accumulatedStakingPower[...])) < ori(starttime)",
            "ori(Sum(accumulatedStakingPower[...])) != ori(starttime)",
            "ori(Sum(accumulatedStakingPower[...])) == ori(Sum(rewards[...]))",
            "ori(Sum(accumulatedStakingPower[...])) >= ori(Sum(rewards[...]))",
            "ori(Sum(accumulatedStakingPower[...])) <= ori(Sum(rewards[...]))",
            "ori(Sum(accumulatedStakingPower[...])) == msg.value",
            "ori(Sum(accumulatedStakingPower[...])) >= msg.value",
            "ori(Sum(accumulatedStakingPower[...])) <= msg.value",
            "ori(Sum(accumulatedStakingPower[...])) == ori(periodFinish)",
            "ori(Sum(accumulatedStakingPower[...])) >= ori(periodFinish)",
            "ori(Sum(accumulatedStakingPower[...])) <= ori(periodFinish)",
            "ori(Sum(accumulatedStakingPower[...])) == ori(Sum(_balances[...]))",
            "ori(Sum(accumulatedStakingPower[...])) >= ori(Sum(_balances[...]))",
            "ori(Sum(accumulatedStakingPower[...])) <= ori(Sum(_balances[...]))",
            "ori(Sum(accumulatedStakingPower[...])) == ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(accumulatedStakingPower[...])) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(accumulatedStakingPower[...])) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(yfv) != ori(rewardReferral)",
            "ori(yfv) != ori(vUSD)",
            "ori(yfv) != ori(vETH)",
            "ori(starttime) >= ori(Sum(rewards[...]))",
            "ori(starttime) > ori(Sum(rewards[...]))",
            "ori(starttime) != ori(Sum(rewards[...]))",
            "ori(starttime) >= msg.value",
            "ori(starttime) > msg.value",
            "ori(starttime) != msg.value",
            "ori(starttime) >= ori(periodFinish)",
            "ori(starttime) > ori(periodFinish)",
            "ori(starttime) != ori(periodFinish)",
            "ori(starttime) >= ori(Sum(_balances[...]))",
            "ori(starttime) > ori(Sum(_balances[...]))",
            "ori(starttime) != ori(Sum(_balances[...]))",
            "ori(starttime) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(starttime) > ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(starttime) != ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(rewards[...])) == msg.value",
            "ori(Sum(rewards[...])) >= msg.value",
            "ori(Sum(rewards[...])) <= msg.value",
            "ori(Sum(rewards[...])) == ori(periodFinish)",
            "ori(Sum(rewards[...])) >= ori(periodFinish)",
            "ori(Sum(rewards[...])) <= ori(periodFinish)",
            "ori(Sum(rewards[...])) == ori(Sum(_balances[...]))",
            "ori(Sum(rewards[...])) >= ori(Sum(_balances[...]))",
            "ori(Sum(rewards[...])) <= ori(Sum(_balances[...]))",
            "ori(Sum(rewards[...])) == ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(rewards[...])) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(rewards[...])) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(rewardReferral) != ori(vUSD)",
            "ori(rewardReferral) != ori(vETH)",
            "ori(vUSD) != ori(vETH)",
            "msg.value == ori(periodFinish)",
            "msg.value >= ori(periodFinish)",
            "msg.value <= ori(periodFinish)",
            "msg.value == ori(Sum(_balances[...]))",
            "msg.value >= ori(Sum(_balances[...]))",
            "msg.value <= ori(Sum(_balances[...]))",
            "msg.value == ori(Sum(userRewardPerTokenPaid[...]))",
            "msg.value >= ori(Sum(userRewardPerTokenPaid[...]))",
            "msg.value <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(periodFinish) == ori(Sum(_balances[...]))",
            "ori(periodFinish) >= ori(Sum(_balances[...]))",
            "ori(periodFinish) <= ori(Sum(_balances[...]))",
            "ori(periodFinish) == ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(periodFinish) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(periodFinish) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(_balances[...])) == ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(_balances[...])) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(_balances[...])) <= ori(Sum(userRewardPerTokenPaid[...]))"
        ],
        "postconditions": [
            "Sum(accumulatedStakingPower[...]) == 0",
            "Sum(accumulatedStakingPower[...]) one of [0]",
            "_totalSupply == 0",
            "_totalSupply one of [0]",
            "vUSD != 0",
            "lastUpdateTime > 0",
            "lastUpdateTime == 1598010120",
            "lastUpdateTime one of [1598010120]",
            "rewardVote != 0",
            "currentEpoch == 0",
            "currentEpoch one of [0]",
            "_owner != 0",
            "elem of accumulatedStakingPower[...] is one of [0]",
            "elem of accumulatedStakingPower[...] is one of []",
            "yfv != 0",
            "periodFinish > 0",
            "periodFinish == 1598018400",
            "periodFinish one of [1598018400]",
            "rewardRate > 0",
            "rewardRate == 107353730542136",
            "rewardRate one of [107353730542136]",
            "elem of lastStakeTimes[...] is one of [0]",
            "elem of lastStakeTimes[...] is one of []",
            "rewardPerTokenStored == 0",
            "rewardPerTokenStored one of [0]",
            "elem of userRewardPerTokenPaid[...] is one of [0]",
            "elem of userRewardPerTokenPaid[...] is one of []",
            "Sum(_balances[...]) == 0",
            "Sum(_balances[...]) one of [0]",
            "elem of _balances[...] is one of [0]",
            "elem of _balances[...] is one of []",
            "rewardReferral != 0",
            "starttime > 0",
            "starttime == 1598018400",
            "starttime one of [1598018400]",
            "vETH_REWARD_FRACTION_RATE > 0",
            "vETH_REWARD_FRACTION_RATE == 21000000000000",
            "vETH_REWARD_FRACTION_RATE one of [21000000000000]",
            "currentEpochReward > 0",
            "currentEpochReward == 888888888888888888",
            "currentEpochReward one of [888888888888888888]",
            "Sum(userRewardPerTokenPaid[...]) == 0",
            "Sum(userRewardPerTokenPaid[...]) one of [0]",
            "Sum(lastStakeTimes[...]) == 0",
            "Sum(lastStakeTimes[...]) one of [0]",
            "vETH != 0",
            "Sum(rewards[...]) == 0",
            "Sum(rewards[...]) one of [0]",
            "vUSD_REWARD_FRACTION_RATE > 0",
            "vUSD_REWARD_FRACTION_RATE == 21000000000",
            "vUSD_REWARD_FRACTION_RATE one of [21000000000]",
            "elem of rewards[...] is one of [0]",
            "elem of rewards[...] is one of []",
            "totalAccumulatedReward > 0",
            "totalAccumulatedReward == 888888888888888888",
            "totalAccumulatedReward one of [888888888888888888]",
            "Sum(accumulatedStakingPower[...]) == _totalSupply",
            "Sum(accumulatedStakingPower[...]) >= _totalSupply",
            "Sum(accumulatedStakingPower[...]) <= _totalSupply",
            "Sum(accumulatedStakingPower[...]) <= lastUpdateTime",
            "Sum(accumulatedStakingPower[...]) < lastUpdateTime",
            "Sum(accumulatedStakingPower[...]) != lastUpdateTime",
            "Sum(accumulatedStakingPower[...]) <= ori(currentEpochReward)",
            "Sum(accumulatedStakingPower[...]) < ori(currentEpochReward)",
            "Sum(accumulatedStakingPower[...]) != ori(currentEpochReward)",
            "Sum(accumulatedStakingPower[...]) == currentEpoch",
            "Sum(accumulatedStakingPower[...]) >= currentEpoch",
            "Sum(accumulatedStakingPower[...]) <= currentEpoch",
            "Sum(accumulatedStakingPower[...]) <= ori(vETH_REWARD_FRACTION_RATE)",
            "Sum(accumulatedStakingPower[...]) < ori(vETH_REWARD_FRACTION_RATE)",
            "Sum(accumulatedStakingPower[...]) != ori(vETH_REWARD_FRACTION_RATE)",
            "Sum(accumulatedStakingPower[...]) <= periodFinish",
            "Sum(accumulatedStakingPower[...]) < periodFinish",
            "Sum(accumulatedStakingPower[...]) != periodFinish",
            "Sum(accumulatedStakingPower[...]) <= rewardRate",
            "Sum(accumulatedStakingPower[...]) < rewardRate",
            "Sum(accumulatedStakingPower[...]) != rewardRate",
            "Sum(accumulatedStakingPower[...]) <= reward",
            "Sum(accumulatedStakingPower[...]) < reward",
            "Sum(accumulatedStakingPower[...]) != reward",
            "Sum(accumulatedStakingPower[...]) == ori(_totalSupply)",
            "Sum(accumulatedStakingPower[...]) >= ori(_totalSupply)",
            "Sum(accumulatedStakingPower[...]) <= ori(_totalSupply)",
            "Sum(accumulatedStakingPower[...]) == ori(lastUpdateTime)",
            "Sum(accumulatedStakingPower[...]) >= ori(lastUpdateTime)",
            "Sum(accumulatedStakingPower[...]) <= ori(lastUpdateTime)",
            "Sum(accumulatedStakingPower[...]) == rewardPerTokenStored",
            "Sum(accumulatedStakingPower[...]) >= rewardPerTokenStored",
            "Sum(accumulatedStakingPower[...]) <= rewardPerTokenStored",
            "Sum(accumulatedStakingPower[...]) == Sum(_balances[...])",
            "Sum(accumulatedStakingPower[...]) >= Sum(_balances[...])",
            "Sum(accumulatedStakingPower[...]) <= Sum(_balances[...])",
            "Sum(accumulatedStakingPower[...]) == ori(totalAccumulatedReward)",
            "Sum(accumulatedStakingPower[...]) >= ori(totalAccumulatedReward)",
            "Sum(accumulatedStakingPower[...]) <= ori(totalAccumulatedReward)",
            "Sum(accumulatedStakingPower[...]) == ori(currentEpoch)",
            "Sum(accumulatedStakingPower[...]) >= ori(currentEpoch)",
            "Sum(accumulatedStakingPower[...]) <= ori(currentEpoch)",
            "Sum(accumulatedStakingPower[...]) == ori(rewardRate)",
            "Sum(accumulatedStakingPower[...]) >= ori(rewardRate)",
            "Sum(accumulatedStakingPower[...]) <= ori(rewardRate)",
            "Sum(accumulatedStakingPower[...]) <= ori(vUSD_REWARD_FRACTION_RATE)",
            "Sum(accumulatedStakingPower[...]) < ori(vUSD_REWARD_FRACTION_RATE)",
            "Sum(accumulatedStakingPower[...]) != ori(vUSD_REWARD_FRACTION_RATE)",
            "Sum(accumulatedStakingPower[...]) == ori(rewardPerTokenStored)",
            "Sum(accumulatedStakingPower[...]) >= ori(rewardPerTokenStored)",
            "Sum(accumulatedStakingPower[...]) <= ori(rewardPerTokenStored)",
            "Sum(accumulatedStakingPower[...]) <= starttime",
            "Sum(accumulatedStakingPower[...]) < starttime",
            "Sum(accumulatedStakingPower[...]) != starttime",
            "Sum(accumulatedStakingPower[...]) == ori(Sum(lastStakeTimes[...]))",
            "Sum(accumulatedStakingPower[...]) >= ori(Sum(lastStakeTimes[...]))",
            "Sum(accumulatedStakingPower[...]) <= ori(Sum(lastStakeTimes[...]))",
            "Sum(accumulatedStakingPower[...]) == ori(Sum(accumulatedStakingPower[...]))",
            "Sum(accumulatedStakingPower[...]) >= ori(Sum(accumulatedStakingPower[...]))",
            "Sum(accumulatedStakingPower[...]) <= ori(Sum(accumulatedStakingPower[...]))",
            "Sum(accumulatedStakingPower[...]) <= ori(starttime)",
            "Sum(accumulatedStakingPower[...]) < ori(starttime)",
            "Sum(accumulatedStakingPower[...]) != ori(starttime)",
            "Sum(accumulatedStakingPower[...]) <= vETH_REWARD_FRACTION_RATE",
            "Sum(accumulatedStakingPower[...]) < vETH_REWARD_FRACTION_RATE",
            "Sum(accumulatedStakingPower[...]) != vETH_REWARD_FRACTION_RATE",
            "Sum(accumulatedStakingPower[...]) <= currentEpochReward",
            "Sum(accumulatedStakingPower[...]) < currentEpochReward",
            "Sum(accumulatedStakingPower[...]) != currentEpochReward",
            "Sum(accumulatedStakingPower[...]) == Sum(userRewardPerTokenPaid[...])",
            "Sum(accumulatedStakingPower[...]) >= Sum(userRewardPerTokenPaid[...])",
            "Sum(accumulatedStakingPower[...]) <= Sum(userRewardPerTokenPaid[...])",
            "Sum(accumulatedStakingPower[...]) == ori(Sum(rewards[...]))",
            "Sum(accumulatedStakingPower[...]) >= ori(Sum(rewards[...]))",
            "Sum(accumulatedStakingPower[...]) <= ori(Sum(rewards[...]))",
            "Sum(accumulatedStakingPower[...]) == Sum(lastStakeTimes[...])",
            "Sum(accumulatedStakingPower[...]) >= Sum(lastStakeTimes[...])",
            "Sum(accumulatedStakingPower[...]) <= Sum(lastStakeTimes[...])",
            "Sum(accumulatedStakingPower[...]) == msg.value",
            "Sum(accumulatedStakingPower[...]) >= msg.value",
            "Sum(accumulatedStakingPower[...]) <= msg.value",
            "Sum(accumulatedStakingPower[...]) == Sum(rewards[...])",
            "Sum(accumulatedStakingPower[...]) >= Sum(rewards[...])",
            "Sum(accumulatedStakingPower[...]) <= Sum(rewards[...])",
            "Sum(accumulatedStakingPower[...]) == ori(periodFinish)",
            "Sum(accumulatedStakingPower[...]) >= ori(periodFinish)",
            "Sum(accumulatedStakingPower[...]) <= ori(periodFinish)",
            "Sum(accumulatedStakingPower[...]) <= vUSD_REWARD_FRACTION_RATE",
            "Sum(accumulatedStakingPower[...]) < vUSD_REWARD_FRACTION_RATE",
            "Sum(accumulatedStakingPower[...]) != vUSD_REWARD_FRACTION_RATE",
            "Sum(accumulatedStakingPower[...]) == ori(Sum(_balances[...]))",
            "Sum(accumulatedStakingPower[...]) >= ori(Sum(_balances[...]))",
            "Sum(accumulatedStakingPower[...]) <= ori(Sum(_balances[...]))",
            "Sum(accumulatedStakingPower[...]) == ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(accumulatedStakingPower[...]) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(accumulatedStakingPower[...]) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(accumulatedStakingPower[...]) <= totalAccumulatedReward",
            "Sum(accumulatedStakingPower[...]) < totalAccumulatedReward",
            "Sum(accumulatedStakingPower[...]) != totalAccumulatedReward",
            "_totalSupply <= lastUpdateTime",
            "_totalSupply < lastUpdateTime",
            "_totalSupply != lastUpdateTime",
            "_totalSupply <= ori(currentEpochReward)",
            "_totalSupply < ori(currentEpochReward)",
            "_totalSupply != ori(currentEpochReward)",
            "_totalSupply == currentEpoch",
            "_totalSupply >= currentEpoch",
            "_totalSupply <= currentEpoch",
            "_totalSupply <= ori(vETH_REWARD_FRACTION_RATE)",
            "_totalSupply < ori(vETH_REWARD_FRACTION_RATE)",
            "_totalSupply != ori(vETH_REWARD_FRACTION_RATE)",
            "_totalSupply <= periodFinish",
            "_totalSupply < periodFinish",
            "_totalSupply != periodFinish",
            "_totalSupply <= rewardRate",
            "_totalSupply < rewardRate",
            "_totalSupply != rewardRate",
            "_totalSupply <= reward",
            "_totalSupply < reward",
            "_totalSupply != reward",
            "_totalSupply == ori(_totalSupply)",
            "_totalSupply >= ori(_totalSupply)",
            "_totalSupply <= ori(_totalSupply)",
            "_totalSupply == ori(lastUpdateTime)",
            "_totalSupply >= ori(lastUpdateTime)",
            "_totalSupply <= ori(lastUpdateTime)",
            "_totalSupply == rewardPerTokenStored",
            "_totalSupply >= rewardPerTokenStored",
            "_totalSupply <= rewardPerTokenStored",
            "_totalSupply == Sum(_balances[...])",
            "_totalSupply >= Sum(_balances[...])",
            "_totalSupply <= Sum(_balances[...])",
            "_totalSupply == ori(totalAccumulatedReward)",
            "_totalSupply >= ori(totalAccumulatedReward)",
            "_totalSupply <= ori(totalAccumulatedReward)",
            "_totalSupply == ori(currentEpoch)",
            "_totalSupply >= ori(currentEpoch)",
            "_totalSupply <= ori(currentEpoch)",
            "_totalSupply == ori(rewardRate)",
            "_totalSupply >= ori(rewardRate)",
            "_totalSupply <= ori(rewardRate)",
            "_totalSupply <= ori(vUSD_REWARD_FRACTION_RATE)",
            "_totalSupply < ori(vUSD_REWARD_FRACTION_RATE)",
            "_totalSupply != ori(vUSD_REWARD_FRACTION_RATE)",
            "_totalSupply == ori(rewardPerTokenStored)",
            "_totalSupply >= ori(rewardPerTokenStored)",
            "_totalSupply <= ori(rewardPerTokenStored)",
            "_totalSupply <= starttime",
            "_totalSupply < starttime",
            "_totalSupply != starttime",
            "_totalSupply == ori(Sum(lastStakeTimes[...]))",
            "_totalSupply >= ori(Sum(lastStakeTimes[...]))",
            "_totalSupply <= ori(Sum(lastStakeTimes[...]))",
            "_totalSupply == ori(Sum(accumulatedStakingPower[...]))",
            "_totalSupply >= ori(Sum(accumulatedStakingPower[...]))",
            "_totalSupply <= ori(Sum(accumulatedStakingPower[...]))",
            "_totalSupply <= ori(starttime)",
            "_totalSupply < ori(starttime)",
            "_totalSupply != ori(starttime)",
            "_totalSupply <= vETH_REWARD_FRACTION_RATE",
            "_totalSupply < vETH_REWARD_FRACTION_RATE",
            "_totalSupply != vETH_REWARD_FRACTION_RATE",
            "_totalSupply <= currentEpochReward",
            "_totalSupply < currentEpochReward",
            "_totalSupply != currentEpochReward",
            "_totalSupply == Sum(userRewardPerTokenPaid[...])",
            "_totalSupply >= Sum(userRewardPerTokenPaid[...])",
            "_totalSupply <= Sum(userRewardPerTokenPaid[...])",
            "_totalSupply == ori(Sum(rewards[...]))",
            "_totalSupply >= ori(Sum(rewards[...]))",
            "_totalSupply <= ori(Sum(rewards[...]))",
            "_totalSupply == Sum(lastStakeTimes[...])",
            "_totalSupply >= Sum(lastStakeTimes[...])",
            "_totalSupply <= Sum(lastStakeTimes[...])",
            "_totalSupply == msg.value",
            "_totalSupply >= msg.value",
            "_totalSupply <= msg.value",
            "_totalSupply == Sum(rewards[...])",
            "_totalSupply >= Sum(rewards[...])",
            "_totalSupply <= Sum(rewards[...])",
            "_totalSupply == ori(periodFinish)",
            "_totalSupply >= ori(periodFinish)",
            "_totalSupply <= ori(periodFinish)",
            "_totalSupply <= vUSD_REWARD_FRACTION_RATE",
            "_totalSupply < vUSD_REWARD_FRACTION_RATE",
            "_totalSupply != vUSD_REWARD_FRACTION_RATE",
            "_totalSupply == ori(Sum(_balances[...]))",
            "_totalSupply >= ori(Sum(_balances[...]))",
            "_totalSupply <= ori(Sum(_balances[...]))",
            "_totalSupply == ori(Sum(userRewardPerTokenPaid[...]))",
            "_totalSupply >= ori(Sum(userRewardPerTokenPaid[...]))",
            "_totalSupply <= ori(Sum(userRewardPerTokenPaid[...]))",
            "_totalSupply <= totalAccumulatedReward",
            "_totalSupply < totalAccumulatedReward",
            "_totalSupply != totalAccumulatedReward",
            "vUSD != rewardVote",
            "vUSD != msg.sender",
            "vUSD != _owner",
            "vUSD != ori(_owner)",
            "vUSD != yfv",
            "vUSD != ori(rewardVote)",
            "vUSD != rewardReferral",
            "vUSD != ori(yfv)",
            "vUSD != ori(rewardReferral)",
            "vUSD == ori(vUSD)",
            "vUSD != vETH",
            "vUSD != ori(vETH)",
            "lastUpdateTime <= ori(currentEpochReward)",
            "lastUpdateTime < ori(currentEpochReward)",
            "lastUpdateTime != ori(currentEpochReward)",
            "lastUpdateTime >= currentEpoch",
            "lastUpdateTime > currentEpoch",
            "lastUpdateTime != currentEpoch",
            "lastUpdateTime <= ori(vETH_REWARD_FRACTION_RATE)",
            "lastUpdateTime < ori(vETH_REWARD_FRACTION_RATE)",
            "lastUpdateTime != ori(vETH_REWARD_FRACTION_RATE)",
            "lastUpdateTime <= periodFinish",
            "lastUpdateTime < periodFinish",
            "lastUpdateTime != periodFinish",
            "lastUpdateTime <= rewardRate",
            "lastUpdateTime < rewardRate",
            "lastUpdateTime != rewardRate",
            "lastUpdateTime <= reward",
            "lastUpdateTime < reward",
            "lastUpdateTime != reward",
            "lastUpdateTime >= ori(_totalSupply)",
            "lastUpdateTime > ori(_totalSupply)",
            "lastUpdateTime != ori(_totalSupply)",
            "lastUpdateTime >= ori(lastUpdateTime)",
            "lastUpdateTime > ori(lastUpdateTime)",
            "lastUpdateTime != ori(lastUpdateTime)",
            "lastUpdateTime >= rewardPerTokenStored",
            "lastUpdateTime > rewardPerTokenStored",
            "lastUpdateTime != rewardPerTokenStored",
            "lastUpdateTime >= Sum(_balances[...])",
            "lastUpdateTime > Sum(_balances[...])",
            "lastUpdateTime != Sum(_balances[...])",
            "lastUpdateTime >= ori(totalAccumulatedReward)",
            "lastUpdateTime > ori(totalAccumulatedReward)",
            "lastUpdateTime != ori(totalAccumulatedReward)",
            "lastUpdateTime >= ori(currentEpoch)",
            "lastUpdateTime > ori(currentEpoch)",
            "lastUpdateTime != ori(currentEpoch)",
            "lastUpdateTime >= ori(rewardRate)",
            "lastUpdateTime > ori(rewardRate)",
            "lastUpdateTime != ori(rewardRate)",
            "lastUpdateTime <= ori(vUSD_REWARD_FRACTION_RATE)",
            "lastUpdateTime < ori(vUSD_REWARD_FRACTION_RATE)",
            "lastUpdateTime != ori(vUSD_REWARD_FRACTION_RATE)",
            "lastUpdateTime >= ori(rewardPerTokenStored)",
            "lastUpdateTime > ori(rewardPerTokenStored)",
            "lastUpdateTime != ori(rewardPerTokenStored)",
            "lastUpdateTime <= starttime",
            "lastUpdateTime < starttime",
            "lastUpdateTime != starttime",
            "lastUpdateTime >= ori(Sum(lastStakeTimes[...]))",
            "lastUpdateTime > ori(Sum(lastStakeTimes[...]))",
            "lastUpdateTime != ori(Sum(lastStakeTimes[...]))",
            "lastUpdateTime >= ori(Sum(accumulatedStakingPower[...]))",
            "lastUpdateTime > ori(Sum(accumulatedStakingPower[...]))",
            "lastUpdateTime != ori(Sum(accumulatedStakingPower[...]))",
            "lastUpdateTime <= ori(starttime)",
            "lastUpdateTime < ori(starttime)",
            "lastUpdateTime != ori(starttime)",
            "lastUpdateTime <= vETH_REWARD_FRACTION_RATE",
            "lastUpdateTime < vETH_REWARD_FRACTION_RATE",
            "lastUpdateTime != vETH_REWARD_FRACTION_RATE",
            "lastUpdateTime <= currentEpochReward",
            "lastUpdateTime < currentEpochReward",
            "lastUpdateTime != currentEpochReward",
            "lastUpdateTime >= Sum(userRewardPerTokenPaid[...])",
            "lastUpdateTime > Sum(userRewardPerTokenPaid[...])",
            "lastUpdateTime != Sum(userRewardPerTokenPaid[...])",
            "lastUpdateTime >= ori(Sum(rewards[...]))",
            "lastUpdateTime > ori(Sum(rewards[...]))",
            "lastUpdateTime != ori(Sum(rewards[...]))",
            "lastUpdateTime >= Sum(lastStakeTimes[...])",
            "lastUpdateTime > Sum(lastStakeTimes[...])",
            "lastUpdateTime != Sum(lastStakeTimes[...])",
            "lastUpdateTime >= msg.value",
            "lastUpdateTime > msg.value",
            "lastUpdateTime != msg.value",
            "lastUpdateTime >= Sum(rewards[...])",
            "lastUpdateTime > Sum(rewards[...])",
            "lastUpdateTime != Sum(rewards[...])",
            "lastUpdateTime >= ori(periodFinish)",
            "lastUpdateTime > ori(periodFinish)",
            "lastUpdateTime != ori(periodFinish)",
            "lastUpdateTime <= vUSD_REWARD_FRACTION_RATE",
            "lastUpdateTime < vUSD_REWARD_FRACTION_RATE",
            "lastUpdateTime != vUSD_REWARD_FRACTION_RATE",
            "lastUpdateTime >= ori(Sum(_balances[...]))",
            "lastUpdateTime > ori(Sum(_balances[...]))",
            "lastUpdateTime != ori(Sum(_balances[...]))",
            "lastUpdateTime >= ori(Sum(userRewardPerTokenPaid[...]))",
            "lastUpdateTime > ori(Sum(userRewardPerTokenPaid[...]))",
            "lastUpdateTime != ori(Sum(userRewardPerTokenPaid[...]))",
            "lastUpdateTime <= totalAccumulatedReward",
            "lastUpdateTime < totalAccumulatedReward",
            "lastUpdateTime != totalAccumulatedReward",
            "ori(currentEpochReward) >= currentEpoch",
            "ori(currentEpochReward) > currentEpoch",
            "ori(currentEpochReward) != currentEpoch",
            "ori(currentEpochReward) >= periodFinish",
            "ori(currentEpochReward) > periodFinish",
            "ori(currentEpochReward) != periodFinish",
            "ori(currentEpochReward) >= rewardRate",
            "ori(currentEpochReward) > rewardRate",
            "ori(currentEpochReward) != rewardRate",
            "ori(currentEpochReward) >= rewardPerTokenStored",
            "ori(currentEpochReward) > rewardPerTokenStored",
            "ori(currentEpochReward) != rewardPerTokenStored",
            "ori(currentEpochReward) >= Sum(_balances[...])",
            "ori(currentEpochReward) > Sum(_balances[...])",
            "ori(currentEpochReward) != Sum(_balances[...])",
            "ori(currentEpochReward) >= starttime",
            "ori(currentEpochReward) > starttime",
            "ori(currentEpochReward) != starttime",
            "ori(currentEpochReward) >= vETH_REWARD_FRACTION_RATE",
            "ori(currentEpochReward) > vETH_REWARD_FRACTION_RATE",
            "ori(currentEpochReward) != vETH_REWARD_FRACTION_RATE",
            "ori(currentEpochReward) >= currentEpochReward",
            "ori(currentEpochReward) > currentEpochReward",
            "ori(currentEpochReward) != currentEpochReward",
            "ori(currentEpochReward) >= Sum(userRewardPerTokenPaid[...])",
            "ori(currentEpochReward) > Sum(userRewardPerTokenPaid[...])",
            "ori(currentEpochReward) != Sum(userRewardPerTokenPaid[...])",
            "ori(currentEpochReward) >= Sum(lastStakeTimes[...])",
            "ori(currentEpochReward) > Sum(lastStakeTimes[...])",
            "ori(currentEpochReward) != Sum(lastStakeTimes[...])",
            "ori(currentEpochReward) >= Sum(rewards[...])",
            "ori(currentEpochReward) > Sum(rewards[...])",
            "ori(currentEpochReward) != Sum(rewards[...])",
            "ori(currentEpochReward) >= vUSD_REWARD_FRACTION_RATE",
            "ori(currentEpochReward) > vUSD_REWARD_FRACTION_RATE",
            "ori(currentEpochReward) != vUSD_REWARD_FRACTION_RATE",
            "ori(currentEpochReward) >= totalAccumulatedReward",
            "ori(currentEpochReward) > totalAccumulatedReward",
            "ori(currentEpochReward) != totalAccumulatedReward",
            "rewardVote != msg.sender",
            "rewardVote != _owner",
            "rewardVote != ori(_owner)",
            "rewardVote != yfv",
            "rewardVote == ori(rewardVote)",
            "rewardVote != rewardReferral",
            "rewardVote != ori(yfv)",
            "rewardVote != ori(rewardReferral)",
            "rewardVote != ori(vUSD)",
            "rewardVote != vETH",
            "rewardVote != ori(vETH)",
            "msg.sender == _owner",
            "msg.sender != yfv",
            "msg.sender != rewardReferral",
            "msg.sender != vETH",
            "currentEpoch <= ori(vETH_REWARD_FRACTION_RATE)",
            "currentEpoch < ori(vETH_REWARD_FRACTION_RATE)",
            "currentEpoch != ori(vETH_REWARD_FRACTION_RATE)",
            "currentEpoch <= periodFinish",
            "currentEpoch < periodFinish",
            "currentEpoch != periodFinish",
            "currentEpoch <= rewardRate",
            "currentEpoch < rewardRate",
            "currentEpoch != rewardRate",
            "currentEpoch <= reward",
            "currentEpoch < reward",
            "currentEpoch != reward",
            "currentEpoch == ori(_totalSupply)",
            "currentEpoch >= ori(_totalSupply)",
            "currentEpoch <= ori(_totalSupply)",
            "currentEpoch == ori(lastUpdateTime)",
            "currentEpoch >= ori(lastUpdateTime)",
            "currentEpoch <= ori(lastUpdateTime)",
            "currentEpoch == rewardPerTokenStored",
            "currentEpoch >= rewardPerTokenStored",
            "currentEpoch <= rewardPerTokenStored",
            "currentEpoch == Sum(_balances[...])",
            "currentEpoch >= Sum(_balances[...])",
            "currentEpoch <= Sum(_balances[...])",
            "currentEpoch == ori(totalAccumulatedReward)",
            "currentEpoch >= ori(totalAccumulatedReward)",
            "currentEpoch <= ori(totalAccumulatedReward)",
            "currentEpoch == ori(currentEpoch)",
            "currentEpoch >= ori(currentEpoch)",
            "currentEpoch <= ori(currentEpoch)",
            "currentEpoch == ori(rewardRate)",
            "currentEpoch >= ori(rewardRate)",
            "currentEpoch <= ori(rewardRate)",
            "currentEpoch <= ori(vUSD_REWARD_FRACTION_RATE)",
            "currentEpoch < ori(vUSD_REWARD_FRACTION_RATE)",
            "currentEpoch != ori(vUSD_REWARD_FRACTION_RATE)",
            "currentEpoch == ori(rewardPerTokenStored)",
            "currentEpoch >= ori(rewardPerTokenStored)",
            "currentEpoch <= ori(rewardPerTokenStored)",
            "currentEpoch <= starttime",
            "currentEpoch < starttime",
            "currentEpoch != starttime",
            "currentEpoch == ori(Sum(lastStakeTimes[...]))",
            "currentEpoch >= ori(Sum(lastStakeTimes[...]))",
            "currentEpoch <= ori(Sum(lastStakeTimes[...]))",
            "currentEpoch == ori(Sum(accumulatedStakingPower[...]))",
            "currentEpoch >= ori(Sum(accumulatedStakingPower[...]))",
            "currentEpoch <= ori(Sum(accumulatedStakingPower[...]))",
            "currentEpoch <= ori(starttime)",
            "currentEpoch < ori(starttime)",
            "currentEpoch != ori(starttime)",
            "currentEpoch <= vETH_REWARD_FRACTION_RATE",
            "currentEpoch < vETH_REWARD_FRACTION_RATE",
            "currentEpoch != vETH_REWARD_FRACTION_RATE",
            "currentEpoch <= currentEpochReward",
            "currentEpoch < currentEpochReward",
            "currentEpoch != currentEpochReward",
            "currentEpoch == Sum(userRewardPerTokenPaid[...])",
            "currentEpoch >= Sum(userRewardPerTokenPaid[...])",
            "currentEpoch <= Sum(userRewardPerTokenPaid[...])",
            "currentEpoch == ori(Sum(rewards[...]))",
            "currentEpoch >= ori(Sum(rewards[...]))",
            "currentEpoch <= ori(Sum(rewards[...]))",
            "currentEpoch == Sum(lastStakeTimes[...])",
            "currentEpoch >= Sum(lastStakeTimes[...])",
            "currentEpoch <= Sum(lastStakeTimes[...])",
            "currentEpoch == msg.value",
            "currentEpoch >= msg.value",
            "currentEpoch <= msg.value",
            "currentEpoch == Sum(rewards[...])",
            "currentEpoch >= Sum(rewards[...])",
            "currentEpoch <= Sum(rewards[...])",
            "currentEpoch == ori(periodFinish)",
            "currentEpoch >= ori(periodFinish)",
            "currentEpoch <= ori(periodFinish)",
            "currentEpoch <= vUSD_REWARD_FRACTION_RATE",
            "currentEpoch < vUSD_REWARD_FRACTION_RATE",
            "currentEpoch != vUSD_REWARD_FRACTION_RATE",
            "currentEpoch == ori(Sum(_balances[...]))",
            "currentEpoch >= ori(Sum(_balances[...]))",
            "currentEpoch <= ori(Sum(_balances[...]))",
            "currentEpoch == ori(Sum(userRewardPerTokenPaid[...]))",
            "currentEpoch >= ori(Sum(userRewardPerTokenPaid[...]))",
            "currentEpoch <= ori(Sum(userRewardPerTokenPaid[...]))",
            "currentEpoch <= totalAccumulatedReward",
            "currentEpoch < totalAccumulatedReward",
            "currentEpoch != totalAccumulatedReward",
            "_owner == ori(_owner)",
            "_owner != yfv",
            "_owner != ori(rewardVote)",
            "_owner != rewardReferral",
            "_owner != ori(yfv)",
            "_owner != ori(rewardReferral)",
            "_owner != ori(vUSD)",
            "_owner != vETH",
            "_owner != ori(vETH)",
            "ori(_owner) != yfv",
            "ori(_owner) != rewardReferral",
            "ori(_owner) != vETH",
            "ori(vETH_REWARD_FRACTION_RATE) >= periodFinish",
            "ori(vETH_REWARD_FRACTION_RATE) > periodFinish",
            "ori(vETH_REWARD_FRACTION_RATE) != periodFinish",
            "ori(vETH_REWARD_FRACTION_RATE) <= rewardRate",
            "ori(vETH_REWARD_FRACTION_RATE) < rewardRate",
            "ori(vETH_REWARD_FRACTION_RATE) != rewardRate",
            "ori(vETH_REWARD_FRACTION_RATE) >= rewardPerTokenStored",
            "ori(vETH_REWARD_FRACTION_RATE) > rewardPerTokenStored",
            "ori(vETH_REWARD_FRACTION_RATE) != rewardPerTokenStored",
            "ori(vETH_REWARD_FRACTION_RATE) >= Sum(_balances[...])",
            "ori(vETH_REWARD_FRACTION_RATE) > Sum(_balances[...])",
            "ori(vETH_REWARD_FRACTION_RATE) != Sum(_balances[...])",
            "ori(vETH_REWARD_FRACTION_RATE) >= starttime",
            "ori(vETH_REWARD_FRACTION_RATE) > starttime",
            "ori(vETH_REWARD_FRACTION_RATE) != starttime",
            "ori(vETH_REWARD_FRACTION_RATE) == vETH_REWARD_FRACTION_RATE",
            "ori(vETH_REWARD_FRACTION_RATE) >= vETH_REWARD_FRACTION_RATE",
            "ori(vETH_REWARD_FRACTION_RATE) <= vETH_REWARD_FRACTION_RATE",
            "ori(vETH_REWARD_FRACTION_RATE) <= currentEpochReward",
            "ori(vETH_REWARD_FRACTION_RATE) < currentEpochReward",
            "ori(vETH_REWARD_FRACTION_RATE) != currentEpochReward",
            "ori(vETH_REWARD_FRACTION_RATE) >= Sum(userRewardPerTokenPaid[...])",
            "ori(vETH_REWARD_FRACTION_RATE) > Sum(userRewardPerTokenPaid[...])",
            "ori(vETH_REWARD_FRACTION_RATE) != Sum(userRewardPerTokenPaid[...])",
            "ori(vETH_REWARD_FRACTION_RATE) >= Sum(lastStakeTimes[...])",
            "ori(vETH_REWARD_FRACTION_RATE) > Sum(lastStakeTimes[...])",
            "ori(vETH_REWARD_FRACTION_RATE) != Sum(lastStakeTimes[...])",
            "ori(vETH_REWARD_FRACTION_RATE) >= Sum(rewards[...])",
            "ori(vETH_REWARD_FRACTION_RATE) > Sum(rewards[...])",
            "ori(vETH_REWARD_FRACTION_RATE) != Sum(rewards[...])",
            "ori(vETH_REWARD_FRACTION_RATE) >= vUSD_REWARD_FRACTION_RATE",
            "ori(vETH_REWARD_FRACTION_RATE) > vUSD_REWARD_FRACTION_RATE",
            "ori(vETH_REWARD_FRACTION_RATE) != vUSD_REWARD_FRACTION_RATE",
            "ori(vETH_REWARD_FRACTION_RATE) <= totalAccumulatedReward",
            "ori(vETH_REWARD_FRACTION_RATE) < totalAccumulatedReward",
            "ori(vETH_REWARD_FRACTION_RATE) != totalAccumulatedReward",
            "yfv != ori(rewardVote)",
            "yfv != rewardReferral",
            "yfv == ori(yfv)",
            "yfv != ori(rewardReferral)",
            "yfv != ori(vUSD)",
            "yfv != vETH",
            "yfv != ori(vETH)",
            "periodFinish <= rewardRate",
            "periodFinish < rewardRate",
            "periodFinish != rewardRate",
            "periodFinish <= reward",
            "periodFinish < reward",
            "periodFinish != reward",
            "periodFinish >= ori(_totalSupply)",
            "periodFinish > ori(_totalSupply)",
            "periodFinish != ori(_totalSupply)",
            "periodFinish >= ori(lastUpdateTime)",
            "periodFinish > ori(lastUpdateTime)",
            "periodFinish != ori(lastUpdateTime)",
            "periodFinish >= rewardPerTokenStored",
            "periodFinish > rewardPerTokenStored",
            "periodFinish != rewardPerTokenStored",
            "periodFinish >= Sum(_balances[...])",
            "periodFinish > Sum(_balances[...])",
            "periodFinish != Sum(_balances[...])",
            "periodFinish >= ori(totalAccumulatedReward)",
            "periodFinish > ori(totalAccumulatedReward)",
            "periodFinish != ori(totalAccumulatedReward)",
            "periodFinish >= ori(currentEpoch)",
            "periodFinish > ori(currentEpoch)",
            "periodFinish != ori(currentEpoch)",
            "periodFinish >= ori(rewardRate)",
            "periodFinish > ori(rewardRate)",
            "periodFinish != ori(rewardRate)",
            "periodFinish <= ori(vUSD_REWARD_FRACTION_RATE)",
            "periodFinish < ori(vUSD_REWARD_FRACTION_RATE)",
            "periodFinish != ori(vUSD_REWARD_FRACTION_RATE)",
            "periodFinish >= ori(rewardPerTokenStored)",
            "periodFinish > ori(rewardPerTokenStored)",
            "periodFinish != ori(rewardPerTokenStored)",
            "periodFinish == starttime",
            "periodFinish >= starttime",
            "periodFinish <= starttime",
            "periodFinish >= ori(Sum(lastStakeTimes[...]))",
            "periodFinish > ori(Sum(lastStakeTimes[...]))",
            "periodFinish != ori(Sum(lastStakeTimes[...]))",
            "periodFinish >= ori(Sum(accumulatedStakingPower[...]))",
            "periodFinish > ori(Sum(accumulatedStakingPower[...]))",
            "periodFinish != ori(Sum(accumulatedStakingPower[...]))",
            "periodFinish == ori(starttime)",
            "periodFinish >= ori(starttime)",
            "periodFinish <= ori(starttime)",
            "periodFinish <= vETH_REWARD_FRACTION_RATE",
            "periodFinish < vETH_REWARD_FRACTION_RATE",
            "periodFinish != vETH_REWARD_FRACTION_RATE",
            "periodFinish <= currentEpochReward",
            "periodFinish < currentEpochReward",
            "periodFinish != currentEpochReward",
            "periodFinish >= Sum(userRewardPerTokenPaid[...])",
            "periodFinish > Sum(userRewardPerTokenPaid[...])",
            "periodFinish != Sum(userRewardPerTokenPaid[...])",
            "periodFinish >= ori(Sum(rewards[...]))",
            "periodFinish > ori(Sum(rewards[...]))",
            "periodFinish != ori(Sum(rewards[...]))",
            "periodFinish >= Sum(lastStakeTimes[...])",
            "periodFinish > Sum(lastStakeTimes[...])",
            "periodFinish != Sum(lastStakeTimes[...])",
            "periodFinish >= msg.value",
            "periodFinish > msg.value",
            "periodFinish != msg.value",
            "periodFinish >= Sum(rewards[...])",
            "periodFinish > Sum(rewards[...])",
            "periodFinish != Sum(rewards[...])",
            "periodFinish >= ori(periodFinish)",
            "periodFinish > ori(periodFinish)",
            "periodFinish != ori(periodFinish)",
            "periodFinish <= vUSD_REWARD_FRACTION_RATE",
            "periodFinish < vUSD_REWARD_FRACTION_RATE",
            "periodFinish != vUSD_REWARD_FRACTION_RATE",
            "periodFinish >= ori(Sum(_balances[...]))",
            "periodFinish > ori(Sum(_balances[...]))",
            "periodFinish != ori(Sum(_balances[...]))",
            "periodFinish >= ori(Sum(userRewardPerTokenPaid[...]))",
            "periodFinish > ori(Sum(userRewardPerTokenPaid[...]))",
            "periodFinish != ori(Sum(userRewardPerTokenPaid[...]))",
            "periodFinish <= totalAccumulatedReward",
            "periodFinish < totalAccumulatedReward",
            "periodFinish != totalAccumulatedReward",
            "rewardRate <= reward",
            "rewardRate < reward",
            "rewardRate != reward",
            "rewardRate >= ori(_totalSupply)",
            "rewardRate > ori(_totalSupply)",
            "rewardRate != ori(_totalSupply)",
            "rewardRate >= ori(lastUpdateTime)",
            "rewardRate > ori(lastUpdateTime)",
            "rewardRate != ori(lastUpdateTime)",
            "rewardRate >= rewardPerTokenStored",
            "rewardRate > rewardPerTokenStored",
            "rewardRate != rewardPerTokenStored",
            "rewardRate >= Sum(_balances[...])",
            "rewardRate > Sum(_balances[...])",
            "rewardRate != Sum(_balances[...])",
            "rewardRate >= ori(totalAccumulatedReward)",
            "rewardRate > ori(totalAccumulatedReward)",
            "rewardRate != ori(totalAccumulatedReward)",
            "rewardRate >= ori(currentEpoch)",
            "rewardRate > ori(currentEpoch)",
            "rewardRate != ori(currentEpoch)",
            "rewardRate >= ori(rewardRate)",
            "rewardRate > ori(rewardRate)",
            "rewardRate != ori(rewardRate)",
            "rewardRate >= ori(vUSD_REWARD_FRACTION_RATE)",
            "rewardRate > ori(vUSD_REWARD_FRACTION_RATE)",
            "rewardRate != ori(vUSD_REWARD_FRACTION_RATE)",
            "rewardRate >= ori(rewardPerTokenStored)",
            "rewardRate > ori(rewardPerTokenStored)",
            "rewardRate != ori(rewardPerTokenStored)",
            "rewardRate >= starttime",
            "rewardRate > starttime",
            "rewardRate != starttime",
            "rewardRate >= ori(Sum(lastStakeTimes[...]))",
            "rewardRate > ori(Sum(lastStakeTimes[...]))",
            "rewardRate != ori(Sum(lastStakeTimes[...]))",
            "rewardRate >= ori(Sum(accumulatedStakingPower[...]))",
            "rewardRate > ori(Sum(accumulatedStakingPower[...]))",
            "rewardRate != ori(Sum(accumulatedStakingPower[...]))",
            "rewardRate >= ori(starttime)",
            "rewardRate > ori(starttime)",
            "rewardRate != ori(starttime)",
            "rewardRate >= vETH_REWARD_FRACTION_RATE",
            "rewardRate > vETH_REWARD_FRACTION_RATE",
            "rewardRate != vETH_REWARD_FRACTION_RATE",
            "rewardRate <= currentEpochReward",
            "rewardRate < currentEpochReward",
            "rewardRate != currentEpochReward",
            "rewardRate >= Sum(userRewardPerTokenPaid[...])",
            "rewardRate > Sum(userRewardPerTokenPaid[...])",
            "rewardRate != Sum(userRewardPerTokenPaid[...])",
            "rewardRate >= ori(Sum(rewards[...]))",
            "rewardRate > ori(Sum(rewards[...]))",
            "rewardRate != ori(Sum(rewards[...]))",
            "rewardRate >= Sum(lastStakeTimes[...])",
            "rewardRate > Sum(lastStakeTimes[...])",
            "rewardRate != Sum(lastStakeTimes[...])",
            "rewardRate >= msg.value",
            "rewardRate > msg.value",
            "rewardRate != msg.value",
            "rewardRate >= Sum(rewards[...])",
            "rewardRate > Sum(rewards[...])",
            "rewardRate != Sum(rewards[...])",
            "rewardRate >= ori(periodFinish)",
            "rewardRate > ori(periodFinish)",
            "rewardRate != ori(periodFinish)",
            "rewardRate >= vUSD_REWARD_FRACTION_RATE",
            "rewardRate > vUSD_REWARD_FRACTION_RATE",
            "rewardRate != vUSD_REWARD_FRACTION_RATE",
            "rewardRate >= ori(Sum(_balances[...]))",
            "rewardRate > ori(Sum(_balances[...]))",
            "rewardRate != ori(Sum(_balances[...]))",
            "rewardRate >= ori(Sum(userRewardPerTokenPaid[...]))",
            "rewardRate > ori(Sum(userRewardPerTokenPaid[...]))",
            "rewardRate != ori(Sum(userRewardPerTokenPaid[...]))",
            "rewardRate <= totalAccumulatedReward",
            "rewardRate < totalAccumulatedReward",
            "rewardRate != totalAccumulatedReward",
            "reward >= rewardPerTokenStored",
            "reward > rewardPerTokenStored",
            "reward != rewardPerTokenStored",
            "reward >= Sum(_balances[...])",
            "reward > Sum(_balances[...])",
            "reward != Sum(_balances[...])",
            "reward >= starttime",
            "reward > starttime",
            "reward != starttime",
            "reward >= vETH_REWARD_FRACTION_RATE",
            "reward > vETH_REWARD_FRACTION_RATE",
            "reward != vETH_REWARD_FRACTION_RATE",
            "reward == currentEpochReward",
            "reward >= currentEpochReward",
            "reward <= currentEpochReward",
            "reward >= Sum(userRewardPerTokenPaid[...])",
            "reward > Sum(userRewardPerTokenPaid[...])",
            "reward != Sum(userRewardPerTokenPaid[...])",
            "reward >= Sum(lastStakeTimes[...])",
            "reward > Sum(lastStakeTimes[...])",
            "reward != Sum(lastStakeTimes[...])",
            "reward >= Sum(rewards[...])",
            "reward > Sum(rewards[...])",
            "reward != Sum(rewards[...])",
            "reward >= vUSD_REWARD_FRACTION_RATE",
            "reward > vUSD_REWARD_FRACTION_RATE",
            "reward != vUSD_REWARD_FRACTION_RATE",
            "reward == totalAccumulatedReward",
            "reward >= totalAccumulatedReward",
            "reward <= totalAccumulatedReward",
            "ori(rewardVote) != rewardReferral",
            "ori(rewardVote) != vETH",
            "ori(_totalSupply) == rewardPerTokenStored",
            "ori(_totalSupply) >= rewardPerTokenStored",
            "ori(_totalSupply) <= rewardPerTokenStored",
            "ori(_totalSupply) == Sum(_balances[...])",
            "ori(_totalSupply) >= Sum(_balances[...])",
            "ori(_totalSupply) <= Sum(_balances[...])",
            "ori(_totalSupply) <= starttime",
            "ori(_totalSupply) < starttime",
            "ori(_totalSupply) != starttime",
            "ori(_totalSupply) <= vETH_REWARD_FRACTION_RATE",
            "ori(_totalSupply) < vETH_REWARD_FRACTION_RATE",
            "ori(_totalSupply) != vETH_REWARD_FRACTION_RATE",
            "ori(_totalSupply) <= currentEpochReward",
            "ori(_totalSupply) < currentEpochReward",
            "ori(_totalSupply) != currentEpochReward",
            "ori(_totalSupply) == Sum(userRewardPerTokenPaid[...])",
            "ori(_totalSupply) >= Sum(userRewardPerTokenPaid[...])",
            "ori(_totalSupply) <= Sum(userRewardPerTokenPaid[...])",
            "ori(_totalSupply) == Sum(lastStakeTimes[...])",
            "ori(_totalSupply) >= Sum(lastStakeTimes[...])",
            "ori(_totalSupply) <= Sum(lastStakeTimes[...])",
            "ori(_totalSupply) == Sum(rewards[...])",
            "ori(_totalSupply) >= Sum(rewards[...])",
            "ori(_totalSupply) <= Sum(rewards[...])",
            "ori(_totalSupply) <= vUSD_REWARD_FRACTION_RATE",
            "ori(_totalSupply) < vUSD_REWARD_FRACTION_RATE",
            "ori(_totalSupply) != vUSD_REWARD_FRACTION_RATE",
            "ori(_totalSupply) <= totalAccumulatedReward",
            "ori(_totalSupply) < totalAccumulatedReward",
            "ori(_totalSupply) != totalAccumulatedReward",
            "ori(lastUpdateTime) == rewardPerTokenStored",
            "ori(lastUpdateTime) >= rewardPerTokenStored",
            "ori(lastUpdateTime) <= rewardPerTokenStored",
            "ori(lastUpdateTime) == Sum(_balances[...])",
            "ori(lastUpdateTime) >= Sum(_balances[...])",
            "ori(lastUpdateTime) <= Sum(_balances[...])",
            "ori(lastUpdateTime) <= starttime",
            "ori(lastUpdateTime) < starttime",
            "ori(lastUpdateTime) != starttime",
            "ori(lastUpdateTime) <= vETH_REWARD_FRACTION_RATE",
            "ori(lastUpdateTime) < vETH_REWARD_FRACTION_RATE",
            "ori(lastUpdateTime) != vETH_REWARD_FRACTION_RATE",
            "ori(lastUpdateTime) <= currentEpochReward",
            "ori(lastUpdateTime) < currentEpochReward",
            "ori(lastUpdateTime) != currentEpochReward",
            "ori(lastUpdateTime) == Sum(userRewardPerTokenPaid[...])",
            "ori(lastUpdateTime) >= Sum(userRewardPerTokenPaid[...])",
            "ori(lastUpdateTime) <= Sum(userRewardPerTokenPaid[...])",
            "ori(lastUpdateTime) == Sum(lastStakeTimes[...])",
            "ori(lastUpdateTime) >= Sum(lastStakeTimes[...])",
            "ori(lastUpdateTime) <= Sum(lastStakeTimes[...])",
            "ori(lastUpdateTime) == Sum(rewards[...])",
            "ori(lastUpdateTime) >= Sum(rewards[...])",
            "ori(lastUpdateTime) <= Sum(rewards[...])",
            "ori(lastUpdateTime) <= vUSD_REWARD_FRACTION_RATE",
            "ori(lastUpdateTime) < vUSD_REWARD_FRACTION_RATE",
            "ori(lastUpdateTime) != vUSD_REWARD_FRACTION_RATE",
            "ori(lastUpdateTime) <= totalAccumulatedReward",
            "ori(lastUpdateTime) < totalAccumulatedReward",
            "ori(lastUpdateTime) != totalAccumulatedReward",
            "rewardPerTokenStored == Sum(_balances[...])",
            "rewardPerTokenStored >= Sum(_balances[...])",
            "rewardPerTokenStored <= Sum(_balances[...])",
            "rewardPerTokenStored == ori(totalAccumulatedReward)",
            "rewardPerTokenStored >= ori(totalAccumulatedReward)",
            "rewardPerTokenStored <= ori(totalAccumulatedReward)",
            "rewardPerTokenStored == ori(currentEpoch)",
            "rewardPerTokenStored >= ori(currentEpoch)",
            "rewardPerTokenStored <= ori(currentEpoch)",
            "rewardPerTokenStored == ori(rewardRate)",
            "rewardPerTokenStored >= ori(rewardRate)",
            "rewardPerTokenStored <= ori(rewardRate)",
            "rewardPerTokenStored <= ori(vUSD_REWARD_FRACTION_RATE)",
            "rewardPerTokenStored < ori(vUSD_REWARD_FRACTION_RATE)",
            "rewardPerTokenStored != ori(vUSD_REWARD_FRACTION_RATE)",
            "rewardPerTokenStored == ori(rewardPerTokenStored)",
            "rewardPerTokenStored >= ori(rewardPerTokenStored)",
            "rewardPerTokenStored <= ori(rewardPerTokenStored)",
            "rewardPerTokenStored <= starttime",
            "rewardPerTokenStored < starttime",
            "rewardPerTokenStored != starttime",
            "rewardPerTokenStored == ori(Sum(lastStakeTimes[...]))",
            "rewardPerTokenStored >= ori(Sum(lastStakeTimes[...]))",
            "rewardPerTokenStored <= ori(Sum(lastStakeTimes[...]))",
            "rewardPerTokenStored == ori(Sum(accumulatedStakingPower[...]))",
            "rewardPerTokenStored >= ori(Sum(accumulatedStakingPower[...]))",
            "rewardPerTokenStored <= ori(Sum(accumulatedStakingPower[...]))",
            "rewardPerTokenStored <= ori(starttime)",
            "rewardPerTokenStored < ori(starttime)",
            "rewardPerTokenStored != ori(starttime)",
            "rewardPerTokenStored <= vETH_REWARD_FRACTION_RATE",
            "rewardPerTokenStored < vETH_REWARD_FRACTION_RATE",
            "rewardPerTokenStored != vETH_REWARD_FRACTION_RATE",
            "rewardPerTokenStored <= currentEpochReward",
            "rewardPerTokenStored < currentEpochReward",
            "rewardPerTokenStored != currentEpochReward",
            "rewardPerTokenStored == Sum(userRewardPerTokenPaid[...])",
            "rewardPerTokenStored >= Sum(userRewardPerTokenPaid[...])",
            "rewardPerTokenStored <= Sum(userRewardPerTokenPaid[...])",
            "rewardPerTokenStored == ori(Sum(rewards[...]))",
            "rewardPerTokenStored >= ori(Sum(rewards[...]))",
            "rewardPerTokenStored <= ori(Sum(rewards[...]))",
            "rewardPerTokenStored == Sum(lastStakeTimes[...])",
            "rewardPerTokenStored >= Sum(lastStakeTimes[...])",
            "rewardPerTokenStored <= Sum(lastStakeTimes[...])",
            "rewardPerTokenStored == msg.value",
            "rewardPerTokenStored >= msg.value",
            "rewardPerTokenStored <= msg.value",
            "rewardPerTokenStored == Sum(rewards[...])",
            "rewardPerTokenStored >= Sum(rewards[...])",
            "rewardPerTokenStored <= Sum(rewards[...])",
            "rewardPerTokenStored == ori(periodFinish)",
            "rewardPerTokenStored >= ori(periodFinish)",
            "rewardPerTokenStored <= ori(periodFinish)",
            "rewardPerTokenStored <= vUSD_REWARD_FRACTION_RATE",
            "rewardPerTokenStored < vUSD_REWARD_FRACTION_RATE",
            "rewardPerTokenStored != vUSD_REWARD_FRACTION_RATE",
            "rewardPerTokenStored == ori(Sum(_balances[...]))",
            "rewardPerTokenStored >= ori(Sum(_balances[...]))",
            "rewardPerTokenStored <= ori(Sum(_balances[...]))",
            "rewardPerTokenStored == ori(Sum(userRewardPerTokenPaid[...]))",
            "rewardPerTokenStored >= ori(Sum(userRewardPerTokenPaid[...]))",
            "rewardPerTokenStored <= ori(Sum(userRewardPerTokenPaid[...]))",
            "rewardPerTokenStored <= totalAccumulatedReward",
            "rewardPerTokenStored < totalAccumulatedReward",
            "rewardPerTokenStored != totalAccumulatedReward",
            "Sum(_balances[...]) == ori(totalAccumulatedReward)",
            "Sum(_balances[...]) >= ori(totalAccumulatedReward)",
            "Sum(_balances[...]) <= ori(totalAccumulatedReward)",
            "Sum(_balances[...]) == ori(currentEpoch)",
            "Sum(_balances[...]) >= ori(currentEpoch)",
            "Sum(_balances[...]) <= ori(currentEpoch)",
            "Sum(_balances[...]) == ori(rewardRate)",
            "Sum(_balances[...]) >= ori(rewardRate)",
            "Sum(_balances[...]) <= ori(rewardRate)",
            "Sum(_balances[...]) <= ori(vUSD_REWARD_FRACTION_RATE)",
            "Sum(_balances[...]) < ori(vUSD_REWARD_FRACTION_RATE)",
            "Sum(_balances[...]) != ori(vUSD_REWARD_FRACTION_RATE)",
            "Sum(_balances[...]) == ori(rewardPerTokenStored)",
            "Sum(_balances[...]) >= ori(rewardPerTokenStored)",
            "Sum(_balances[...]) <= ori(rewardPerTokenStored)",
            "Sum(_balances[...]) <= starttime",
            "Sum(_balances[...]) < starttime",
            "Sum(_balances[...]) != starttime",
            "Sum(_balances[...]) == ori(Sum(lastStakeTimes[...]))",
            "Sum(_balances[...]) >= ori(Sum(lastStakeTimes[...]))",
            "Sum(_balances[...]) <= ori(Sum(lastStakeTimes[...]))",
            "Sum(_balances[...]) == ori(Sum(accumulatedStakingPower[...]))",
            "Sum(_balances[...]) >= ori(Sum(accumulatedStakingPower[...]))",
            "Sum(_balances[...]) <= ori(Sum(accumulatedStakingPower[...]))",
            "Sum(_balances[...]) <= ori(starttime)",
            "Sum(_balances[...]) < ori(starttime)",
            "Sum(_balances[...]) != ori(starttime)",
            "Sum(_balances[...]) <= vETH_REWARD_FRACTION_RATE",
            "Sum(_balances[...]) < vETH_REWARD_FRACTION_RATE",
            "Sum(_balances[...]) != vETH_REWARD_FRACTION_RATE",
            "Sum(_balances[...]) <= currentEpochReward",
            "Sum(_balances[...]) < currentEpochReward",
            "Sum(_balances[...]) != currentEpochReward",
            "Sum(_balances[...]) == Sum(userRewardPerTokenPaid[...])",
            "Sum(_balances[...]) >= Sum(userRewardPerTokenPaid[...])",
            "Sum(_balances[...]) <= Sum(userRewardPerTokenPaid[...])",
            "Sum(_balances[...]) == ori(Sum(rewards[...]))",
            "Sum(_balances[...]) >= ori(Sum(rewards[...]))",
            "Sum(_balances[...]) <= ori(Sum(rewards[...]))",
            "Sum(_balances[...]) == Sum(lastStakeTimes[...])",
            "Sum(_balances[...]) >= Sum(lastStakeTimes[...])",
            "Sum(_balances[...]) <= Sum(lastStakeTimes[...])",
            "Sum(_balances[...]) == msg.value",
            "Sum(_balances[...]) >= msg.value",
            "Sum(_balances[...]) <= msg.value",
            "Sum(_balances[...]) == Sum(rewards[...])",
            "Sum(_balances[...]) >= Sum(rewards[...])",
            "Sum(_balances[...]) <= Sum(rewards[...])",
            "Sum(_balances[...]) == ori(periodFinish)",
            "Sum(_balances[...]) >= ori(periodFinish)",
            "Sum(_balances[...]) <= ori(periodFinish)",
            "Sum(_balances[...]) <= vUSD_REWARD_FRACTION_RATE",
            "Sum(_balances[...]) < vUSD_REWARD_FRACTION_RATE",
            "Sum(_balances[...]) != vUSD_REWARD_FRACTION_RATE",
            "Sum(_balances[...]) == ori(Sum(_balances[...]))",
            "Sum(_balances[...]) >= ori(Sum(_balances[...]))",
            "Sum(_balances[...]) <= ori(Sum(_balances[...]))",
            "Sum(_balances[...]) == ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(_balances[...]) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(_balances[...]) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(_balances[...]) <= totalAccumulatedReward",
            "Sum(_balances[...]) < totalAccumulatedReward",
            "Sum(_balances[...]) != totalAccumulatedReward",
            "ori(totalAccumulatedReward) <= starttime",
            "ori(totalAccumulatedReward) < starttime",
            "ori(totalAccumulatedReward) != starttime",
            "ori(totalAccumulatedReward) <= vETH_REWARD_FRACTION_RATE",
            "ori(totalAccumulatedReward) < vETH_REWARD_FRACTION_RATE",
            "ori(totalAccumulatedReward) != vETH_REWARD_FRACTION_RATE",
            "ori(totalAccumulatedReward) <= currentEpochReward",
            "ori(totalAccumulatedReward) < currentEpochReward",
            "ori(totalAccumulatedReward) != currentEpochReward",
            "ori(totalAccumulatedReward) == Sum(userRewardPerTokenPaid[...])",
            "ori(totalAccumulatedReward) >= Sum(userRewardPerTokenPaid[...])",
            "ori(totalAccumulatedReward) <= Sum(userRewardPerTokenPaid[...])",
            "ori(totalAccumulatedReward) == Sum(lastStakeTimes[...])",
            "ori(totalAccumulatedReward) >= Sum(lastStakeTimes[...])",
            "ori(totalAccumulatedReward) <= Sum(lastStakeTimes[...])",
            "ori(totalAccumulatedReward) == Sum(rewards[...])",
            "ori(totalAccumulatedReward) >= Sum(rewards[...])",
            "ori(totalAccumulatedReward) <= Sum(rewards[...])",
            "ori(totalAccumulatedReward) <= vUSD_REWARD_FRACTION_RATE",
            "ori(totalAccumulatedReward) < vUSD_REWARD_FRACTION_RATE",
            "ori(totalAccumulatedReward) != vUSD_REWARD_FRACTION_RATE",
            "ori(totalAccumulatedReward) <= totalAccumulatedReward",
            "ori(totalAccumulatedReward) < totalAccumulatedReward",
            "ori(totalAccumulatedReward) != totalAccumulatedReward",
            "ori(currentEpoch) <= starttime",
            "ori(currentEpoch) < starttime",
            "ori(currentEpoch) != starttime",
            "ori(currentEpoch) <= vETH_REWARD_FRACTION_RATE",
            "ori(currentEpoch) < vETH_REWARD_FRACTION_RATE",
            "ori(currentEpoch) != vETH_REWARD_FRACTION_RATE",
            "ori(currentEpoch) <= currentEpochReward",
            "ori(currentEpoch) < currentEpochReward",
            "ori(currentEpoch) != currentEpochReward",
            "ori(currentEpoch) == Sum(userRewardPerTokenPaid[...])",
            "ori(currentEpoch) >= Sum(userRewardPerTokenPaid[...])",
            "ori(currentEpoch) <= Sum(userRewardPerTokenPaid[...])",
            "ori(currentEpoch) == Sum(lastStakeTimes[...])",
            "ori(currentEpoch) >= Sum(lastStakeTimes[...])",
            "ori(currentEpoch) <= Sum(lastStakeTimes[...])",
            "ori(currentEpoch) == Sum(rewards[...])",
            "ori(currentEpoch) >= Sum(rewards[...])",
            "ori(currentEpoch) <= Sum(rewards[...])",
            "ori(currentEpoch) <= vUSD_REWARD_FRACTION_RATE",
            "ori(currentEpoch) < vUSD_REWARD_FRACTION_RATE",
            "ori(currentEpoch) != vUSD_REWARD_FRACTION_RATE",
            "ori(currentEpoch) <= totalAccumulatedReward",
            "ori(currentEpoch) < totalAccumulatedReward",
            "ori(currentEpoch) != totalAccumulatedReward",
            "ori(rewardRate) <= starttime",
            "ori(rewardRate) < starttime",
            "ori(rewardRate) != starttime",
            "ori(rewardRate) <= vETH_REWARD_FRACTION_RATE",
            "ori(rewardRate) < vETH_REWARD_FRACTION_RATE",
            "ori(rewardRate) != vETH_REWARD_FRACTION_RATE",
            "ori(rewardRate) <= currentEpochReward",
            "ori(rewardRate) < currentEpochReward",
            "ori(rewardRate) != currentEpochReward",
            "ori(rewardRate) == Sum(userRewardPerTokenPaid[...])",
            "ori(rewardRate) >= Sum(userRewardPerTokenPaid[...])",
            "ori(rewardRate) <= Sum(userRewardPerTokenPaid[...])",
            "ori(rewardRate) == Sum(lastStakeTimes[...])",
            "ori(rewardRate) >= Sum(lastStakeTimes[...])",
            "ori(rewardRate) <= Sum(lastStakeTimes[...])",
            "ori(rewardRate) == Sum(rewards[...])",
            "ori(rewardRate) >= Sum(rewards[...])",
            "ori(rewardRate) <= Sum(rewards[...])",
            "ori(rewardRate) <= vUSD_REWARD_FRACTION_RATE",
            "ori(rewardRate) < vUSD_REWARD_FRACTION_RATE",
            "ori(rewardRate) != vUSD_REWARD_FRACTION_RATE",
            "ori(rewardRate) <= totalAccumulatedReward",
            "ori(rewardRate) < totalAccumulatedReward",
            "ori(rewardRate) != totalAccumulatedReward",
            "rewardReferral != ori(yfv)",
            "rewardReferral == ori(rewardReferral)",
            "rewardReferral != ori(vUSD)",
            "rewardReferral != vETH",
            "rewardReferral != ori(vETH)",
            "ori(vUSD_REWARD_FRACTION_RATE) >= starttime",
            "ori(vUSD_REWARD_FRACTION_RATE) > starttime",
            "ori(vUSD_REWARD_FRACTION_RATE) != starttime",
            "ori(vUSD_REWARD_FRACTION_RATE) <= vETH_REWARD_FRACTION_RATE",
            "ori(vUSD_REWARD_FRACTION_RATE) < vETH_REWARD_FRACTION_RATE",
            "ori(vUSD_REWARD_FRACTION_RATE) != vETH_REWARD_FRACTION_RATE",
            "ori(vUSD_REWARD_FRACTION_RATE) <= currentEpochReward",
            "ori(vUSD_REWARD_FRACTION_RATE) < currentEpochReward",
            "ori(vUSD_REWARD_FRACTION_RATE) != currentEpochReward",
            "ori(vUSD_REWARD_FRACTION_RATE) >= Sum(userRewardPerTokenPaid[...])",
            "ori(vUSD_REWARD_FRACTION_RATE) > Sum(userRewardPerTokenPaid[...])",
            "ori(vUSD_REWARD_FRACTION_RATE) != Sum(userRewardPerTokenPaid[...])",
            "ori(vUSD_REWARD_FRACTION_RATE) >= Sum(lastStakeTimes[...])",
            "ori(vUSD_REWARD_FRACTION_RATE) > Sum(lastStakeTimes[...])",
            "ori(vUSD_REWARD_FRACTION_RATE) != Sum(lastStakeTimes[...])",
            "ori(vUSD_REWARD_FRACTION_RATE) >= Sum(rewards[...])",
            "ori(vUSD_REWARD_FRACTION_RATE) > Sum(rewards[...])",
            "ori(vUSD_REWARD_FRACTION_RATE) != Sum(rewards[...])",
            "ori(vUSD_REWARD_FRACTION_RATE) == vUSD_REWARD_FRACTION_RATE",
            "ori(vUSD_REWARD_FRACTION_RATE) >= vUSD_REWARD_FRACTION_RATE",
            "ori(vUSD_REWARD_FRACTION_RATE) <= vUSD_REWARD_FRACTION_RATE",
            "ori(vUSD_REWARD_FRACTION_RATE) <= totalAccumulatedReward",
            "ori(vUSD_REWARD_FRACTION_RATE) < totalAccumulatedReward",
            "ori(vUSD_REWARD_FRACTION_RATE) != totalAccumulatedReward",
            "ori(rewardPerTokenStored) <= starttime",
            "ori(rewardPerTokenStored) < starttime",
            "ori(rewardPerTokenStored) != starttime",
            "ori(rewardPerTokenStored) <= vETH_REWARD_FRACTION_RATE",
            "ori(rewardPerTokenStored) < vETH_REWARD_FRACTION_RATE",
            "ori(rewardPerTokenStored) != vETH_REWARD_FRACTION_RATE",
            "ori(rewardPerTokenStored) <= currentEpochReward",
            "ori(rewardPerTokenStored) < currentEpochReward",
            "ori(rewardPerTokenStored) != currentEpochReward",
            "ori(rewardPerTokenStored) == Sum(userRewardPerTokenPaid[...])",
            "ori(rewardPerTokenStored) >= Sum(userRewardPerTokenPaid[...])",
            "ori(rewardPerTokenStored) <= Sum(userRewardPerTokenPaid[...])",
            "ori(rewardPerTokenStored) == Sum(lastStakeTimes[...])",
            "ori(rewardPerTokenStored) >= Sum(lastStakeTimes[...])",
            "ori(rewardPerTokenStored) <= Sum(lastStakeTimes[...])",
            "ori(rewardPerTokenStored) == Sum(rewards[...])",
            "ori(rewardPerTokenStored) >= Sum(rewards[...])",
            "ori(rewardPerTokenStored) <= Sum(rewards[...])",
            "ori(rewardPerTokenStored) <= vUSD_REWARD_FRACTION_RATE",
            "ori(rewardPerTokenStored) < vUSD_REWARD_FRACTION_RATE",
            "ori(rewardPerTokenStored) != vUSD_REWARD_FRACTION_RATE",
            "ori(rewardPerTokenStored) <= totalAccumulatedReward",
            "ori(rewardPerTokenStored) < totalAccumulatedReward",
            "ori(rewardPerTokenStored) != totalAccumulatedReward",
            "starttime >= ori(Sum(lastStakeTimes[...]))",
            "starttime > ori(Sum(lastStakeTimes[...]))",
            "starttime != ori(Sum(lastStakeTimes[...]))",
            "starttime >= ori(Sum(accumulatedStakingPower[...]))",
            "starttime > ori(Sum(accumulatedStakingPower[...]))",
            "starttime != ori(Sum(accumulatedStakingPower[...]))",
            "starttime == ori(starttime)",
            "starttime >= ori(starttime)",
            "starttime <= ori(starttime)",
            "starttime <= vETH_REWARD_FRACTION_RATE",
            "starttime < vETH_REWARD_FRACTION_RATE",
            "starttime != vETH_REWARD_FRACTION_RATE",
            "starttime <= currentEpochReward",
            "starttime < currentEpochReward",
            "starttime != currentEpochReward",
            "starttime >= Sum(userRewardPerTokenPaid[...])",
            "starttime > Sum(userRewardPerTokenPaid[...])",
            "starttime != Sum(userRewardPerTokenPaid[...])",
            "starttime >= ori(Sum(rewards[...]))",
            "starttime > ori(Sum(rewards[...]))",
            "starttime != ori(Sum(rewards[...]))",
            "starttime >= Sum(lastStakeTimes[...])",
            "starttime > Sum(lastStakeTimes[...])",
            "starttime != Sum(lastStakeTimes[...])",
            "starttime >= msg.value",
            "starttime > msg.value",
            "starttime != msg.value",
            "starttime >= Sum(rewards[...])",
            "starttime > Sum(rewards[...])",
            "starttime != Sum(rewards[...])",
            "starttime >= ori(periodFinish)",
            "starttime > ori(periodFinish)",
            "starttime != ori(periodFinish)",
            "starttime <= vUSD_REWARD_FRACTION_RATE",
            "starttime < vUSD_REWARD_FRACTION_RATE",
            "starttime != vUSD_REWARD_FRACTION_RATE",
            "starttime >= ori(Sum(_balances[...]))",
            "starttime > ori(Sum(_balances[...]))",
            "starttime != ori(Sum(_balances[...]))",
            "starttime >= ori(Sum(userRewardPerTokenPaid[...]))",
            "starttime > ori(Sum(userRewardPerTokenPaid[...]))",
            "starttime != ori(Sum(userRewardPerTokenPaid[...]))",
            "starttime <= totalAccumulatedReward",
            "starttime < totalAccumulatedReward",
            "starttime != totalAccumulatedReward",
            "ori(Sum(lastStakeTimes[...])) <= vETH_REWARD_FRACTION_RATE",
            "ori(Sum(lastStakeTimes[...])) < vETH_REWARD_FRACTION_RATE",
            "ori(Sum(lastStakeTimes[...])) != vETH_REWARD_FRACTION_RATE",
            "ori(Sum(lastStakeTimes[...])) <= currentEpochReward",
            "ori(Sum(lastStakeTimes[...])) < currentEpochReward",
            "ori(Sum(lastStakeTimes[...])) != currentEpochReward",
            "ori(Sum(lastStakeTimes[...])) == Sum(userRewardPerTokenPaid[...])",
            "ori(Sum(lastStakeTimes[...])) >= Sum(userRewardPerTokenPaid[...])",
            "ori(Sum(lastStakeTimes[...])) <= Sum(userRewardPerTokenPaid[...])",
            "ori(Sum(lastStakeTimes[...])) == Sum(lastStakeTimes[...])",
            "ori(Sum(lastStakeTimes[...])) >= Sum(lastStakeTimes[...])",
            "ori(Sum(lastStakeTimes[...])) <= Sum(lastStakeTimes[...])",
            "ori(Sum(lastStakeTimes[...])) == Sum(rewards[...])",
            "ori(Sum(lastStakeTimes[...])) >= Sum(rewards[...])",
            "ori(Sum(lastStakeTimes[...])) <= Sum(rewards[...])",
            "ori(Sum(lastStakeTimes[...])) <= vUSD_REWARD_FRACTION_RATE",
            "ori(Sum(lastStakeTimes[...])) < vUSD_REWARD_FRACTION_RATE",
            "ori(Sum(lastStakeTimes[...])) != vUSD_REWARD_FRACTION_RATE",
            "ori(Sum(lastStakeTimes[...])) <= totalAccumulatedReward",
            "ori(Sum(lastStakeTimes[...])) < totalAccumulatedReward",
            "ori(Sum(lastStakeTimes[...])) != totalAccumulatedReward",
            "ori(Sum(accumulatedStakingPower[...])) <= vETH_REWARD_FRACTION_RATE",
            "ori(Sum(accumulatedStakingPower[...])) < vETH_REWARD_FRACTION_RATE",
            "ori(Sum(accumulatedStakingPower[...])) != vETH_REWARD_FRACTION_RATE",
            "ori(Sum(accumulatedStakingPower[...])) <= currentEpochReward",
            "ori(Sum(accumulatedStakingPower[...])) < currentEpochReward",
            "ori(Sum(accumulatedStakingPower[...])) != currentEpochReward",
            "ori(Sum(accumulatedStakingPower[...])) == Sum(userRewardPerTokenPaid[...])",
            "ori(Sum(accumulatedStakingPower[...])) >= Sum(userRewardPerTokenPaid[...])",
            "ori(Sum(accumulatedStakingPower[...])) <= Sum(userRewardPerTokenPaid[...])",
            "ori(Sum(accumulatedStakingPower[...])) == Sum(lastStakeTimes[...])",
            "ori(Sum(accumulatedStakingPower[...])) >= Sum(lastStakeTimes[...])",
            "ori(Sum(accumulatedStakingPower[...])) <= Sum(lastStakeTimes[...])",
            "ori(Sum(accumulatedStakingPower[...])) == Sum(rewards[...])",
            "ori(Sum(accumulatedStakingPower[...])) >= Sum(rewards[...])",
            "ori(Sum(accumulatedStakingPower[...])) <= Sum(rewards[...])",
            "ori(Sum(accumulatedStakingPower[...])) <= vUSD_REWARD_FRACTION_RATE",
            "ori(Sum(accumulatedStakingPower[...])) < vUSD_REWARD_FRACTION_RATE",
            "ori(Sum(accumulatedStakingPower[...])) != vUSD_REWARD_FRACTION_RATE",
            "ori(Sum(accumulatedStakingPower[...])) <= totalAccumulatedReward",
            "ori(Sum(accumulatedStakingPower[...])) < totalAccumulatedReward",
            "ori(Sum(accumulatedStakingPower[...])) != totalAccumulatedReward",
            "ori(yfv) != vETH",
            "ori(starttime) <= vETH_REWARD_FRACTION_RATE",
            "ori(starttime) < vETH_REWARD_FRACTION_RATE",
            "ori(starttime) != vETH_REWARD_FRACTION_RATE",
            "ori(starttime) <= currentEpochReward",
            "ori(starttime) < currentEpochReward",
            "ori(starttime) != currentEpochReward",
            "ori(starttime) >= Sum(userRewardPerTokenPaid[...])",
            "ori(starttime) > Sum(userRewardPerTokenPaid[...])",
            "ori(starttime) != Sum(userRewardPerTokenPaid[...])",
            "ori(starttime) >= Sum(lastStakeTimes[...])",
            "ori(starttime) > Sum(lastStakeTimes[...])",
            "ori(starttime) != Sum(lastStakeTimes[...])",
            "ori(starttime) >= Sum(rewards[...])",
            "ori(starttime) > Sum(rewards[...])",
            "ori(starttime) != Sum(rewards[...])",
            "ori(starttime) <= vUSD_REWARD_FRACTION_RATE",
            "ori(starttime) < vUSD_REWARD_FRACTION_RATE",
            "ori(starttime) != vUSD_REWARD_FRACTION_RATE",
            "ori(starttime) <= totalAccumulatedReward",
            "ori(starttime) < totalAccumulatedReward",
            "ori(starttime) != totalAccumulatedReward",
            "vETH_REWARD_FRACTION_RATE <= currentEpochReward",
            "vETH_REWARD_FRACTION_RATE < currentEpochReward",
            "vETH_REWARD_FRACTION_RATE != currentEpochReward",
            "vETH_REWARD_FRACTION_RATE >= Sum(userRewardPerTokenPaid[...])",
            "vETH_REWARD_FRACTION_RATE > Sum(userRewardPerTokenPaid[...])",
            "vETH_REWARD_FRACTION_RATE != Sum(userRewardPerTokenPaid[...])",
            "vETH_REWARD_FRACTION_RATE >= ori(Sum(rewards[...]))",
            "vETH_REWARD_FRACTION_RATE > ori(Sum(rewards[...]))",
            "vETH_REWARD_FRACTION_RATE != ori(Sum(rewards[...]))",
            "vETH_REWARD_FRACTION_RATE >= Sum(lastStakeTimes[...])",
            "vETH_REWARD_FRACTION_RATE > Sum(lastStakeTimes[...])",
            "vETH_REWARD_FRACTION_RATE != Sum(lastStakeTimes[...])",
            "vETH_REWARD_FRACTION_RATE >= msg.value",
            "vETH_REWARD_FRACTION_RATE > msg.value",
            "vETH_REWARD_FRACTION_RATE != msg.value",
            "vETH_REWARD_FRACTION_RATE >= Sum(rewards[...])",
            "vETH_REWARD_FRACTION_RATE > Sum(rewards[...])",
            "vETH_REWARD_FRACTION_RATE != Sum(rewards[...])",
            "vETH_REWARD_FRACTION_RATE >= ori(periodFinish)",
            "vETH_REWARD_FRACTION_RATE > ori(periodFinish)",
            "vETH_REWARD_FRACTION_RATE != ori(periodFinish)",
            "vETH_REWARD_FRACTION_RATE >= vUSD_REWARD_FRACTION_RATE",
            "vETH_REWARD_FRACTION_RATE > vUSD_REWARD_FRACTION_RATE",
            "vETH_REWARD_FRACTION_RATE != vUSD_REWARD_FRACTION_RATE",
            "vETH_REWARD_FRACTION_RATE >= ori(Sum(_balances[...]))",
            "vETH_REWARD_FRACTION_RATE > ori(Sum(_balances[...]))",
            "vETH_REWARD_FRACTION_RATE != ori(Sum(_balances[...]))",
            "vETH_REWARD_FRACTION_RATE >= ori(Sum(userRewardPerTokenPaid[...]))",
            "vETH_REWARD_FRACTION_RATE > ori(Sum(userRewardPerTokenPaid[...]))",
            "vETH_REWARD_FRACTION_RATE != ori(Sum(userRewardPerTokenPaid[...]))",
            "vETH_REWARD_FRACTION_RATE <= totalAccumulatedReward",
            "vETH_REWARD_FRACTION_RATE < totalAccumulatedReward",
            "vETH_REWARD_FRACTION_RATE != totalAccumulatedReward",
            "currentEpochReward >= Sum(userRewardPerTokenPaid[...])",
            "currentEpochReward > Sum(userRewardPerTokenPaid[...])",
            "currentEpochReward != Sum(userRewardPerTokenPaid[...])",
            "currentEpochReward >= ori(Sum(rewards[...]))",
            "currentEpochReward > ori(Sum(rewards[...]))",
            "currentEpochReward != ori(Sum(rewards[...]))",
            "currentEpochReward >= Sum(lastStakeTimes[...])",
            "currentEpochReward > Sum(lastStakeTimes[...])",
            "currentEpochReward != Sum(lastStakeTimes[...])",
            "currentEpochReward >= msg.value",
            "currentEpochReward > msg.value",
            "currentEpochReward != msg.value",
            "currentEpochReward >= Sum(rewards[...])",
            "currentEpochReward > Sum(rewards[...])",
            "currentEpochReward != Sum(rewards[...])",
            "currentEpochReward >= ori(periodFinish)",
            "currentEpochReward > ori(periodFinish)",
            "currentEpochReward != ori(periodFinish)",
            "currentEpochReward >= vUSD_REWARD_FRACTION_RATE",
            "currentEpochReward > vUSD_REWARD_FRACTION_RATE",
            "currentEpochReward != vUSD_REWARD_FRACTION_RATE",
            "currentEpochReward >= ori(Sum(_balances[...]))",
            "currentEpochReward > ori(Sum(_balances[...]))",
            "currentEpochReward != ori(Sum(_balances[...]))",
            "currentEpochReward >= ori(Sum(userRewardPerTokenPaid[...]))",
            "currentEpochReward > ori(Sum(userRewardPerTokenPaid[...]))",
            "currentEpochReward != ori(Sum(userRewardPerTokenPaid[...]))",
            "currentEpochReward == totalAccumulatedReward",
            "currentEpochReward >= totalAccumulatedReward",
            "currentEpochReward <= totalAccumulatedReward",
            "Sum(userRewardPerTokenPaid[...]) == ori(Sum(rewards[...]))",
            "Sum(userRewardPerTokenPaid[...]) >= ori(Sum(rewards[...]))",
            "Sum(userRewardPerTokenPaid[...]) <= ori(Sum(rewards[...]))",
            "Sum(userRewardPerTokenPaid[...]) == Sum(lastStakeTimes[...])",
            "Sum(userRewardPerTokenPaid[...]) >= Sum(lastStakeTimes[...])",
            "Sum(userRewardPerTokenPaid[...]) <= Sum(lastStakeTimes[...])",
            "Sum(userRewardPerTokenPaid[...]) == msg.value",
            "Sum(userRewardPerTokenPaid[...]) >= msg.value",
            "Sum(userRewardPerTokenPaid[...]) <= msg.value",
            "Sum(userRewardPerTokenPaid[...]) == Sum(rewards[...])",
            "Sum(userRewardPerTokenPaid[...]) >= Sum(rewards[...])",
            "Sum(userRewardPerTokenPaid[...]) <= Sum(rewards[...])",
            "Sum(userRewardPerTokenPaid[...]) == ori(periodFinish)",
            "Sum(userRewardPerTokenPaid[...]) >= ori(periodFinish)",
            "Sum(userRewardPerTokenPaid[...]) <= ori(periodFinish)",
            "Sum(userRewardPerTokenPaid[...]) <= vUSD_REWARD_FRACTION_RATE",
            "Sum(userRewardPerTokenPaid[...]) < vUSD_REWARD_FRACTION_RATE",
            "Sum(userRewardPerTokenPaid[...]) != vUSD_REWARD_FRACTION_RATE",
            "Sum(userRewardPerTokenPaid[...]) == ori(Sum(_balances[...]))",
            "Sum(userRewardPerTokenPaid[...]) >= ori(Sum(_balances[...]))",
            "Sum(userRewardPerTokenPaid[...]) <= ori(Sum(_balances[...]))",
            "Sum(userRewardPerTokenPaid[...]) == ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(userRewardPerTokenPaid[...]) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(userRewardPerTokenPaid[...]) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(userRewardPerTokenPaid[...]) <= totalAccumulatedReward",
            "Sum(userRewardPerTokenPaid[...]) < totalAccumulatedReward",
            "Sum(userRewardPerTokenPaid[...]) != totalAccumulatedReward",
            "ori(Sum(rewards[...])) == Sum(lastStakeTimes[...])",
            "ori(Sum(rewards[...])) >= Sum(lastStakeTimes[...])",
            "ori(Sum(rewards[...])) <= Sum(lastStakeTimes[...])",
            "ori(Sum(rewards[...])) == Sum(rewards[...])",
            "ori(Sum(rewards[...])) >= Sum(rewards[...])",
            "ori(Sum(rewards[...])) <= Sum(rewards[...])",
            "ori(Sum(rewards[...])) <= vUSD_REWARD_FRACTION_RATE",
            "ori(Sum(rewards[...])) < vUSD_REWARD_FRACTION_RATE",
            "ori(Sum(rewards[...])) != vUSD_REWARD_FRACTION_RATE",
            "ori(Sum(rewards[...])) <= totalAccumulatedReward",
            "ori(Sum(rewards[...])) < totalAccumulatedReward",
            "ori(Sum(rewards[...])) != totalAccumulatedReward",
            "ori(rewardReferral) != vETH",
            "ori(vUSD) != vETH",
            "Sum(lastStakeTimes[...]) == msg.value",
            "Sum(lastStakeTimes[...]) >= msg.value",
            "Sum(lastStakeTimes[...]) <= msg.value",
            "Sum(lastStakeTimes[...]) == Sum(rewards[...])",
            "Sum(lastStakeTimes[...]) >= Sum(rewards[...])",
            "Sum(lastStakeTimes[...]) <= Sum(rewards[...])",
            "Sum(lastStakeTimes[...]) == ori(periodFinish)",
            "Sum(lastStakeTimes[...]) >= ori(periodFinish)",
            "Sum(lastStakeTimes[...]) <= ori(periodFinish)",
            "Sum(lastStakeTimes[...]) <= vUSD_REWARD_FRACTION_RATE",
            "Sum(lastStakeTimes[...]) < vUSD_REWARD_FRACTION_RATE",
            "Sum(lastStakeTimes[...]) != vUSD_REWARD_FRACTION_RATE",
            "Sum(lastStakeTimes[...]) == ori(Sum(_balances[...]))",
            "Sum(lastStakeTimes[...]) >= ori(Sum(_balances[...]))",
            "Sum(lastStakeTimes[...]) <= ori(Sum(_balances[...]))",
            "Sum(lastStakeTimes[...]) == ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(lastStakeTimes[...]) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(lastStakeTimes[...]) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(lastStakeTimes[...]) <= totalAccumulatedReward",
            "Sum(lastStakeTimes[...]) < totalAccumulatedReward",
            "Sum(lastStakeTimes[...]) != totalAccumulatedReward",
            "msg.value == Sum(rewards[...])",
            "msg.value >= Sum(rewards[...])",
            "msg.value <= Sum(rewards[...])",
            "msg.value <= vUSD_REWARD_FRACTION_RATE",
            "msg.value < vUSD_REWARD_FRACTION_RATE",
            "msg.value != vUSD_REWARD_FRACTION_RATE",
            "msg.value <= totalAccumulatedReward",
            "msg.value < totalAccumulatedReward",
            "msg.value != totalAccumulatedReward",
            "vETH == ori(vETH)",
            "Sum(rewards[...]) == ori(periodFinish)",
            "Sum(rewards[...]) >= ori(periodFinish)",
            "Sum(rewards[...]) <= ori(periodFinish)",
            "Sum(rewards[...]) <= vUSD_REWARD_FRACTION_RATE",
            "Sum(rewards[...]) < vUSD_REWARD_FRACTION_RATE",
            "Sum(rewards[...]) != vUSD_REWARD_FRACTION_RATE",
            "Sum(rewards[...]) == ori(Sum(_balances[...]))",
            "Sum(rewards[...]) >= ori(Sum(_balances[...]))",
            "Sum(rewards[...]) <= ori(Sum(_balances[...]))",
            "Sum(rewards[...]) == ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(rewards[...]) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(rewards[...]) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(rewards[...]) <= totalAccumulatedReward",
            "Sum(rewards[...]) < totalAccumulatedReward",
            "Sum(rewards[...]) != totalAccumulatedReward",
            "ori(periodFinish) <= vUSD_REWARD_FRACTION_RATE",
            "ori(periodFinish) < vUSD_REWARD_FRACTION_RATE",
            "ori(periodFinish) != vUSD_REWARD_FRACTION_RATE",
            "ori(periodFinish) <= totalAccumulatedReward",
            "ori(periodFinish) < totalAccumulatedReward",
            "ori(periodFinish) != totalAccumulatedReward",
            "vUSD_REWARD_FRACTION_RATE >= ori(Sum(_balances[...]))",
            "vUSD_REWARD_FRACTION_RATE > ori(Sum(_balances[...]))",
            "vUSD_REWARD_FRACTION_RATE != ori(Sum(_balances[...]))",
            "vUSD_REWARD_FRACTION_RATE >= ori(Sum(userRewardPerTokenPaid[...]))",
            "vUSD_REWARD_FRACTION_RATE > ori(Sum(userRewardPerTokenPaid[...]))",
            "vUSD_REWARD_FRACTION_RATE != ori(Sum(userRewardPerTokenPaid[...]))",
            "vUSD_REWARD_FRACTION_RATE <= totalAccumulatedReward",
            "vUSD_REWARD_FRACTION_RATE < totalAccumulatedReward",
            "vUSD_REWARD_FRACTION_RATE != totalAccumulatedReward",
            "ori(Sum(_balances[...])) <= totalAccumulatedReward",
            "ori(Sum(_balances[...])) < totalAccumulatedReward",
            "ori(Sum(_balances[...])) != totalAccumulatedReward",
            "ori(Sum(userRewardPerTokenPaid[...])) <= totalAccumulatedReward",
            "ori(Sum(userRewardPerTokenPaid[...])) < totalAccumulatedReward",
            "ori(Sum(userRewardPerTokenPaid[...])) != totalAccumulatedReward"
        ],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "notifyRewardAmount(reward)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "renounceOwnership()",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "renounceOwnership()",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "setRewardReferral(_rewardReferral)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [
            "ori(currentEpochReward) > 0",
            "ori(currentEpochReward) == 63000000000000000000000",
            "ori(currentEpochReward) one of [63000000000000000000000]",
            "msg.sender != 0",
            "ori(_owner) != 0",
            "ori(vETH_REWARD_FRACTION_RATE) > 0",
            "ori(vETH_REWARD_FRACTION_RATE) == 21000000000000",
            "ori(vETH_REWARD_FRACTION_RATE) one of [21000000000000]",
            "ori(rewardVote) == 0",
            "ori(_totalSupply) == 0",
            "ori(_totalSupply) one of [0]",
            "ori(lastUpdateTime) == 0",
            "ori(lastUpdateTime) one of [0]",
            "ori(totalAccumulatedReward) == 0",
            "ori(totalAccumulatedReward) one of [0]",
            "ori(currentEpoch) == 0",
            "ori(currentEpoch) one of [0]",
            "ori(rewardRate) == 0",
            "ori(rewardRate) one of [0]",
            "ori(vUSD_REWARD_FRACTION_RATE) > 0",
            "ori(vUSD_REWARD_FRACTION_RATE) == 21000000000",
            "ori(vUSD_REWARD_FRACTION_RATE) one of [21000000000]",
            "ori(rewardPerTokenStored) == 0",
            "ori(rewardPerTokenStored) one of [0]",
            "ori(Sum(lastStakeTimes[...])) == 0",
            "ori(Sum(lastStakeTimes[...])) one of [0]",
            "ori(Sum(accumulatedStakingPower[...])) == 0",
            "ori(Sum(accumulatedStakingPower[...])) one of [0]",
            "ori(yfv) != 0",
            "ori(starttime) > 0",
            "ori(starttime) == 1598018400",
            "ori(starttime) one of [1598018400]",
            "_rewardReferral != 0",
            "ori(Sum(rewards[...])) == 0",
            "ori(Sum(rewards[...])) one of [0]",
            "ori(rewardReferral) == 0",
            "ori(vUSD) != 0",
            "msg.value == 0",
            "msg.value one of [0]",
            "ori(periodFinish) == 0",
            "ori(periodFinish) one of [0]",
            "ori(vETH) != 0",
            "ori(Sum(_balances[...])) == 0",
            "ori(Sum(_balances[...])) one of [0]",
            "ori(Sum(userRewardPerTokenPaid[...])) == 0",
            "ori(Sum(userRewardPerTokenPaid[...])) one of [0]",
            "ori(currentEpochReward) >= ori(vETH_REWARD_FRACTION_RATE)",
            "ori(currentEpochReward) > ori(vETH_REWARD_FRACTION_RATE)",
            "ori(currentEpochReward) != ori(vETH_REWARD_FRACTION_RATE)",
            "ori(currentEpochReward) >= ori(_totalSupply)",
            "ori(currentEpochReward) > ori(_totalSupply)",
            "ori(currentEpochReward) != ori(_totalSupply)",
            "ori(currentEpochReward) >= ori(lastUpdateTime)",
            "ori(currentEpochReward) > ori(lastUpdateTime)",
            "ori(currentEpochReward) != ori(lastUpdateTime)",
            "ori(currentEpochReward) >= ori(totalAccumulatedReward)",
            "ori(currentEpochReward) > ori(totalAccumulatedReward)",
            "ori(currentEpochReward) != ori(totalAccumulatedReward)",
            "ori(currentEpochReward) >= ori(currentEpoch)",
            "ori(currentEpochReward) > ori(currentEpoch)",
            "ori(currentEpochReward) != ori(currentEpoch)",
            "ori(currentEpochReward) >= ori(rewardRate)",
            "ori(currentEpochReward) > ori(rewardRate)",
            "ori(currentEpochReward) != ori(rewardRate)",
            "ori(currentEpochReward) >= ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(currentEpochReward) > ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(currentEpochReward) != ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(currentEpochReward) >= ori(rewardPerTokenStored)",
            "ori(currentEpochReward) > ori(rewardPerTokenStored)",
            "ori(currentEpochReward) != ori(rewardPerTokenStored)",
            "ori(currentEpochReward) >= ori(Sum(lastStakeTimes[...]))",
            "ori(currentEpochReward) > ori(Sum(lastStakeTimes[...]))",
            "ori(currentEpochReward) != ori(Sum(lastStakeTimes[...]))",
            "ori(currentEpochReward) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(currentEpochReward) > ori(Sum(accumulatedStakingPower[...]))",
            "ori(currentEpochReward) != ori(Sum(accumulatedStakingPower[...]))",
            "ori(currentEpochReward) >= ori(starttime)",
            "ori(currentEpochReward) > ori(starttime)",
            "ori(currentEpochReward) != ori(starttime)",
            "ori(currentEpochReward) >= ori(Sum(rewards[...]))",
            "ori(currentEpochReward) > ori(Sum(rewards[...]))",
            "ori(currentEpochReward) != ori(Sum(rewards[...]))",
            "ori(currentEpochReward) >= msg.value",
            "ori(currentEpochReward) > msg.value",
            "ori(currentEpochReward) != msg.value",
            "ori(currentEpochReward) >= ori(periodFinish)",
            "ori(currentEpochReward) > ori(periodFinish)",
            "ori(currentEpochReward) != ori(periodFinish)",
            "ori(currentEpochReward) >= ori(Sum(_balances[...]))",
            "ori(currentEpochReward) > ori(Sum(_balances[...]))",
            "ori(currentEpochReward) != ori(Sum(_balances[...]))",
            "ori(currentEpochReward) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(currentEpochReward) > ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(currentEpochReward) != ori(Sum(userRewardPerTokenPaid[...]))",
            "msg.sender == ori(_owner)",
            "msg.sender != ori(rewardVote)",
            "msg.sender != ori(yfv)",
            "msg.sender != _rewardReferral",
            "msg.sender != ori(rewardReferral)",
            "msg.sender != ori(vUSD)",
            "msg.sender != ori(vETH)",
            "ori(_owner) != ori(rewardVote)",
            "ori(_owner) != ori(yfv)",
            "ori(_owner) != _rewardReferral",
            "ori(_owner) != ori(rewardReferral)",
            "ori(_owner) != ori(vUSD)",
            "ori(_owner) != ori(vETH)",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(_totalSupply)",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(_totalSupply)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(_totalSupply)",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(lastUpdateTime)",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(lastUpdateTime)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(lastUpdateTime)",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(totalAccumulatedReward)",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(totalAccumulatedReward)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(totalAccumulatedReward)",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(currentEpoch)",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(currentEpoch)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(currentEpoch)",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(rewardRate)",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(rewardRate)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(rewardRate)",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(rewardPerTokenStored)",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(rewardPerTokenStored)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(rewardPerTokenStored)",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(Sum(lastStakeTimes[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(Sum(lastStakeTimes[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(Sum(lastStakeTimes[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(Sum(accumulatedStakingPower[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(Sum(accumulatedStakingPower[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(starttime)",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(starttime)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(starttime)",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(Sum(rewards[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(Sum(rewards[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(Sum(rewards[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) >= msg.value",
            "ori(vETH_REWARD_FRACTION_RATE) > msg.value",
            "ori(vETH_REWARD_FRACTION_RATE) != msg.value",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(periodFinish)",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(periodFinish)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(periodFinish)",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(Sum(_balances[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(Sum(_balances[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(Sum(_balances[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(rewardVote) != ori(yfv)",
            "ori(rewardVote) != _rewardReferral",
            "ori(rewardVote) == ori(rewardReferral)",
            "ori(rewardVote) != ori(vUSD)",
            "ori(rewardVote) != ori(vETH)",
            "ori(_totalSupply) == ori(lastUpdateTime)",
            "ori(_totalSupply) >= ori(lastUpdateTime)",
            "ori(_totalSupply) <= ori(lastUpdateTime)",
            "ori(_totalSupply) == ori(totalAccumulatedReward)",
            "ori(_totalSupply) >= ori(totalAccumulatedReward)",
            "ori(_totalSupply) <= ori(totalAccumulatedReward)",
            "ori(_totalSupply) == ori(currentEpoch)",
            "ori(_totalSupply) >= ori(currentEpoch)",
            "ori(_totalSupply) <= ori(currentEpoch)",
            "ori(_totalSupply) == ori(rewardRate)",
            "ori(_totalSupply) >= ori(rewardRate)",
            "ori(_totalSupply) <= ori(rewardRate)",
            "ori(_totalSupply) <= ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(_totalSupply) < ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(_totalSupply) != ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(_totalSupply) == ori(rewardPerTokenStored)",
            "ori(_totalSupply) >= ori(rewardPerTokenStored)",
            "ori(_totalSupply) <= ori(rewardPerTokenStored)",
            "ori(_totalSupply) == ori(Sum(lastStakeTimes[...]))",
            "ori(_totalSupply) >= ori(Sum(lastStakeTimes[...]))",
            "ori(_totalSupply) <= ori(Sum(lastStakeTimes[...]))",
            "ori(_totalSupply) == ori(Sum(accumulatedStakingPower[...]))",
            "ori(_totalSupply) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(_totalSupply) <= ori(Sum(accumulatedStakingPower[...]))",
            "ori(_totalSupply) <= ori(starttime)",
            "ori(_totalSupply) < ori(starttime)",
            "ori(_totalSupply) != ori(starttime)",
            "ori(_totalSupply) == ori(Sum(rewards[...]))",
            "ori(_totalSupply) >= ori(Sum(rewards[...]))",
            "ori(_totalSupply) <= ori(Sum(rewards[...]))",
            "ori(_totalSupply) == msg.value",
            "ori(_totalSupply) >= msg.value",
            "ori(_totalSupply) <= msg.value",
            "ori(_totalSupply) == ori(periodFinish)",
            "ori(_totalSupply) >= ori(periodFinish)",
            "ori(_totalSupply) <= ori(periodFinish)",
            "ori(_totalSupply) == ori(Sum(_balances[...]))",
            "ori(_totalSupply) >= ori(Sum(_balances[...]))",
            "ori(_totalSupply) <= ori(Sum(_balances[...]))",
            "ori(_totalSupply) == ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(_totalSupply) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(_totalSupply) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(lastUpdateTime) == ori(totalAccumulatedReward)",
            "ori(lastUpdateTime) >= ori(totalAccumulatedReward)",
            "ori(lastUpdateTime) <= ori(totalAccumulatedReward)",
            "ori(lastUpdateTime) == ori(currentEpoch)",
            "ori(lastUpdateTime) >= ori(currentEpoch)",
            "ori(lastUpdateTime) <= ori(currentEpoch)",
            "ori(lastUpdateTime) == ori(rewardRate)",
            "ori(lastUpdateTime) >= ori(rewardRate)",
            "ori(lastUpdateTime) <= ori(rewardRate)",
            "ori(lastUpdateTime) <= ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(lastUpdateTime) < ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(lastUpdateTime) != ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(lastUpdateTime) == ori(rewardPerTokenStored)",
            "ori(lastUpdateTime) >= ori(rewardPerTokenStored)",
            "ori(lastUpdateTime) <= ori(rewardPerTokenStored)",
            "ori(lastUpdateTime) == ori(Sum(lastStakeTimes[...]))",
            "ori(lastUpdateTime) >= ori(Sum(lastStakeTimes[...]))",
            "ori(lastUpdateTime) <= ori(Sum(lastStakeTimes[...]))",
            "ori(lastUpdateTime) == ori(Sum(accumulatedStakingPower[...]))",
            "ori(lastUpdateTime) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(lastUpdateTime) <= ori(Sum(accumulatedStakingPower[...]))",
            "ori(lastUpdateTime) <= ori(starttime)",
            "ori(lastUpdateTime) < ori(starttime)",
            "ori(lastUpdateTime) != ori(starttime)",
            "ori(lastUpdateTime) == ori(Sum(rewards[...]))",
            "ori(lastUpdateTime) >= ori(Sum(rewards[...]))",
            "ori(lastUpdateTime) <= ori(Sum(rewards[...]))",
            "ori(lastUpdateTime) == msg.value",
            "ori(lastUpdateTime) >= msg.value",
            "ori(lastUpdateTime) <= msg.value",
            "ori(lastUpdateTime) == ori(periodFinish)",
            "ori(lastUpdateTime) >= ori(periodFinish)",
            "ori(lastUpdateTime) <= ori(periodFinish)",
            "ori(lastUpdateTime) == ori(Sum(_balances[...]))",
            "ori(lastUpdateTime) >= ori(Sum(_balances[...]))",
            "ori(lastUpdateTime) <= ori(Sum(_balances[...]))",
            "ori(lastUpdateTime) == ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(lastUpdateTime) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(lastUpdateTime) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(totalAccumulatedReward) == ori(currentEpoch)",
            "ori(totalAccumulatedReward) >= ori(currentEpoch)",
            "ori(totalAccumulatedReward) <= ori(currentEpoch)",
            "ori(totalAccumulatedReward) == ori(rewardRate)",
            "ori(totalAccumulatedReward) >= ori(rewardRate)",
            "ori(totalAccumulatedReward) <= ori(rewardRate)",
            "ori(totalAccumulatedReward) <= ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(totalAccumulatedReward) < ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(totalAccumulatedReward) != ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(totalAccumulatedReward) == ori(rewardPerTokenStored)",
            "ori(totalAccumulatedReward) >= ori(rewardPerTokenStored)",
            "ori(totalAccumulatedReward) <= ori(rewardPerTokenStored)",
            "ori(totalAccumulatedReward) == ori(Sum(lastStakeTimes[...]))",
            "ori(totalAccumulatedReward) >= ori(Sum(lastStakeTimes[...]))",
            "ori(totalAccumulatedReward) <= ori(Sum(lastStakeTimes[...]))",
            "ori(totalAccumulatedReward) == ori(Sum(accumulatedStakingPower[...]))",
            "ori(totalAccumulatedReward) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(totalAccumulatedReward) <= ori(Sum(accumulatedStakingPower[...]))",
            "ori(totalAccumulatedReward) <= ori(starttime)",
            "ori(totalAccumulatedReward) < ori(starttime)",
            "ori(totalAccumulatedReward) != ori(starttime)",
            "ori(totalAccumulatedReward) == ori(Sum(rewards[...]))",
            "ori(totalAccumulatedReward) >= ori(Sum(rewards[...]))",
            "ori(totalAccumulatedReward) <= ori(Sum(rewards[...]))",
            "ori(totalAccumulatedReward) == msg.value",
            "ori(totalAccumulatedReward) >= msg.value",
            "ori(totalAccumulatedReward) <= msg.value",
            "ori(totalAccumulatedReward) == ori(periodFinish)",
            "ori(totalAccumulatedReward) >= ori(periodFinish)",
            "ori(totalAccumulatedReward) <= ori(periodFinish)",
            "ori(totalAccumulatedReward) == ori(Sum(_balances[...]))",
            "ori(totalAccumulatedReward) >= ori(Sum(_balances[...]))",
            "ori(totalAccumulatedReward) <= ori(Sum(_balances[...]))",
            "ori(totalAccumulatedReward) == ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(totalAccumulatedReward) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(totalAccumulatedReward) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(currentEpoch) == ori(rewardRate)",
            "ori(currentEpoch) >= ori(rewardRate)",
            "ori(currentEpoch) <= ori(rewardRate)",
            "ori(currentEpoch) <= ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(currentEpoch) < ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(currentEpoch) != ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(currentEpoch) == ori(rewardPerTokenStored)",
            "ori(currentEpoch) >= ori(rewardPerTokenStored)",
            "ori(currentEpoch) <= ori(rewardPerTokenStored)",
            "ori(currentEpoch) == ori(Sum(lastStakeTimes[...]))",
            "ori(currentEpoch) >= ori(Sum(lastStakeTimes[...]))",
            "ori(currentEpoch) <= ori(Sum(lastStakeTimes[...]))",
            "ori(currentEpoch) == ori(Sum(accumulatedStakingPower[...]))",
            "ori(currentEpoch) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(currentEpoch) <= ori(Sum(accumulatedStakingPower[...]))",
            "ori(currentEpoch) <= ori(starttime)",
            "ori(currentEpoch) < ori(starttime)",
            "ori(currentEpoch) != ori(starttime)",
            "ori(currentEpoch) == ori(Sum(rewards[...]))",
            "ori(currentEpoch) >= ori(Sum(rewards[...]))",
            "ori(currentEpoch) <= ori(Sum(rewards[...]))",
            "ori(currentEpoch) == msg.value",
            "ori(currentEpoch) >= msg.value",
            "ori(currentEpoch) <= msg.value",
            "ori(currentEpoch) == ori(periodFinish)",
            "ori(currentEpoch) >= ori(periodFinish)",
            "ori(currentEpoch) <= ori(periodFinish)",
            "ori(currentEpoch) == ori(Sum(_balances[...]))",
            "ori(currentEpoch) >= ori(Sum(_balances[...]))",
            "ori(currentEpoch) <= ori(Sum(_balances[...]))",
            "ori(currentEpoch) == ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(currentEpoch) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(currentEpoch) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(rewardRate) <= ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(rewardRate) < ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(rewardRate) != ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(rewardRate) == ori(rewardPerTokenStored)",
            "ori(rewardRate) >= ori(rewardPerTokenStored)",
            "ori(rewardRate) <= ori(rewardPerTokenStored)",
            "ori(rewardRate) == ori(Sum(lastStakeTimes[...]))",
            "ori(rewardRate) >= ori(Sum(lastStakeTimes[...]))",
            "ori(rewardRate) <= ori(Sum(lastStakeTimes[...]))",
            "ori(rewardRate) == ori(Sum(accumulatedStakingPower[...]))",
            "ori(rewardRate) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(rewardRate) <= ori(Sum(accumulatedStakingPower[...]))",
            "ori(rewardRate) <= ori(starttime)",
            "ori(rewardRate) < ori(starttime)",
            "ori(rewardRate) != ori(starttime)",
            "ori(rewardRate) == ori(Sum(rewards[...]))",
            "ori(rewardRate) >= ori(Sum(rewards[...]))",
            "ori(rewardRate) <= ori(Sum(rewards[...]))",
            "ori(rewardRate) == msg.value",
            "ori(rewardRate) >= msg.value",
            "ori(rewardRate) <= msg.value",
            "ori(rewardRate) == ori(periodFinish)",
            "ori(rewardRate) >= ori(periodFinish)",
            "ori(rewardRate) <= ori(periodFinish)",
            "ori(rewardRate) == ori(Sum(_balances[...]))",
            "ori(rewardRate) >= ori(Sum(_balances[...]))",
            "ori(rewardRate) <= ori(Sum(_balances[...]))",
            "ori(rewardRate) == ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(rewardRate) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(rewardRate) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) >= ori(rewardPerTokenStored)",
            "ori(vUSD_REWARD_FRACTION_RATE) > ori(rewardPerTokenStored)",
            "ori(vUSD_REWARD_FRACTION_RATE) != ori(rewardPerTokenStored)",
            "ori(vUSD_REWARD_FRACTION_RATE) >= ori(Sum(lastStakeTimes[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) > ori(Sum(lastStakeTimes[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) != ori(Sum(lastStakeTimes[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) > ori(Sum(accumulatedStakingPower[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) != ori(Sum(accumulatedStakingPower[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) >= ori(starttime)",
            "ori(vUSD_REWARD_FRACTION_RATE) > ori(starttime)",
            "ori(vUSD_REWARD_FRACTION_RATE) != ori(starttime)",
            "ori(vUSD_REWARD_FRACTION_RATE) >= ori(Sum(rewards[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) > ori(Sum(rewards[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) != ori(Sum(rewards[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) >= msg.value",
            "ori(vUSD_REWARD_FRACTION_RATE) > msg.value",
            "ori(vUSD_REWARD_FRACTION_RATE) != msg.value",
            "ori(vUSD_REWARD_FRACTION_RATE) >= ori(periodFinish)",
            "ori(vUSD_REWARD_FRACTION_RATE) > ori(periodFinish)",
            "ori(vUSD_REWARD_FRACTION_RATE) != ori(periodFinish)",
            "ori(vUSD_REWARD_FRACTION_RATE) >= ori(Sum(_balances[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) > ori(Sum(_balances[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) != ori(Sum(_balances[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) > ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) != ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(rewardPerTokenStored) == ori(Sum(lastStakeTimes[...]))",
            "ori(rewardPerTokenStored) >= ori(Sum(lastStakeTimes[...]))",
            "ori(rewardPerTokenStored) <= ori(Sum(lastStakeTimes[...]))",
            "ori(rewardPerTokenStored) == ori(Sum(accumulatedStakingPower[...]))",
            "ori(rewardPerTokenStored) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(rewardPerTokenStored) <= ori(Sum(accumulatedStakingPower[...]))",
            "ori(rewardPerTokenStored) <= ori(starttime)",
            "ori(rewardPerTokenStored) < ori(starttime)",
            "ori(rewardPerTokenStored) != ori(starttime)",
            "ori(rewardPerTokenStored) == ori(Sum(rewards[...]))",
            "ori(rewardPerTokenStored) >= ori(Sum(rewards[...]))",
            "ori(rewardPerTokenStored) <= ori(Sum(rewards[...]))",
            "ori(rewardPerTokenStored) == msg.value",
            "ori(rewardPerTokenStored) >= msg.value",
            "ori(rewardPerTokenStored) <= msg.value",
            "ori(rewardPerTokenStored) == ori(periodFinish)",
            "ori(rewardPerTokenStored) >= ori(periodFinish)",
            "ori(rewardPerTokenStored) <= ori(periodFinish)",
            "ori(rewardPerTokenStored) == ori(Sum(_balances[...]))",
            "ori(rewardPerTokenStored) >= ori(Sum(_balances[...]))",
            "ori(rewardPerTokenStored) <= ori(Sum(_balances[...]))",
            "ori(rewardPerTokenStored) == ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(rewardPerTokenStored) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(rewardPerTokenStored) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(lastStakeTimes[...])) == ori(Sum(accumulatedStakingPower[...]))",
            "ori(Sum(lastStakeTimes[...])) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(Sum(lastStakeTimes[...])) <= ori(Sum(accumulatedStakingPower[...]))",
            "ori(Sum(lastStakeTimes[...])) <= ori(starttime)",
            "ori(Sum(lastStakeTimes[...])) < ori(starttime)",
            "ori(Sum(lastStakeTimes[...])) != ori(starttime)",
            "ori(Sum(lastStakeTimes[...])) == ori(Sum(rewards[...]))",
            "ori(Sum(lastStakeTimes[...])) >= ori(Sum(rewards[...]))",
            "ori(Sum(lastStakeTimes[...])) <= ori(Sum(rewards[...]))",
            "ori(Sum(lastStakeTimes[...])) == msg.value",
            "ori(Sum(lastStakeTimes[...])) >= msg.value",
            "ori(Sum(lastStakeTimes[...])) <= msg.value",
            "ori(Sum(lastStakeTimes[...])) == ori(periodFinish)",
            "ori(Sum(lastStakeTimes[...])) >= ori(periodFinish)",
            "ori(Sum(lastStakeTimes[...])) <= ori(periodFinish)",
            "ori(Sum(lastStakeTimes[...])) == ori(Sum(_balances[...]))",
            "ori(Sum(lastStakeTimes[...])) >= ori(Sum(_balances[...]))",
            "ori(Sum(lastStakeTimes[...])) <= ori(Sum(_balances[...]))",
            "ori(Sum(lastStakeTimes[...])) == ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(lastStakeTimes[...])) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(lastStakeTimes[...])) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(accumulatedStakingPower[...])) <= ori(starttime)",
            "ori(Sum(accumulatedStakingPower[...])) < ori(starttime)",
            "ori(Sum(accumulatedStakingPower[...])) != ori(starttime)",
            "ori(Sum(accumulatedStakingPower[...])) == ori(Sum(rewards[...]))",
            "ori(Sum(accumulatedStakingPower[...])) >= ori(Sum(rewards[...]))",
            "ori(Sum(accumulatedStakingPower[...])) <= ori(Sum(rewards[...]))",
            "ori(Sum(accumulatedStakingPower[...])) == msg.value",
            "ori(Sum(accumulatedStakingPower[...])) >= msg.value",
            "ori(Sum(accumulatedStakingPower[...])) <= msg.value",
            "ori(Sum(accumulatedStakingPower[...])) == ori(periodFinish)",
            "ori(Sum(accumulatedStakingPower[...])) >= ori(periodFinish)",
            "ori(Sum(accumulatedStakingPower[...])) <= ori(periodFinish)",
            "ori(Sum(accumulatedStakingPower[...])) == ori(Sum(_balances[...]))",
            "ori(Sum(accumulatedStakingPower[...])) >= ori(Sum(_balances[...]))",
            "ori(Sum(accumulatedStakingPower[...])) <= ori(Sum(_balances[...]))",
            "ori(Sum(accumulatedStakingPower[...])) == ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(accumulatedStakingPower[...])) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(accumulatedStakingPower[...])) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(yfv) != _rewardReferral",
            "ori(yfv) != ori(rewardReferral)",
            "ori(yfv) != ori(vUSD)",
            "ori(yfv) != ori(vETH)",
            "ori(starttime) >= ori(Sum(rewards[...]))",
            "ori(starttime) > ori(Sum(rewards[...]))",
            "ori(starttime) != ori(Sum(rewards[...]))",
            "ori(starttime) >= msg.value",
            "ori(starttime) > msg.value",
            "ori(starttime) != msg.value",
            "ori(starttime) >= ori(periodFinish)",
            "ori(starttime) > ori(periodFinish)",
            "ori(starttime) != ori(periodFinish)",
            "ori(starttime) >= ori(Sum(_balances[...]))",
            "ori(starttime) > ori(Sum(_balances[...]))",
            "ori(starttime) != ori(Sum(_balances[...]))",
            "ori(starttime) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(starttime) > ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(starttime) != ori(Sum(userRewardPerTokenPaid[...]))",
            "_rewardReferral != ori(rewardReferral)",
            "_rewardReferral != ori(vUSD)",
            "_rewardReferral != ori(vETH)",
            "ori(Sum(rewards[...])) == msg.value",
            "ori(Sum(rewards[...])) >= msg.value",
            "ori(Sum(rewards[...])) <= msg.value",
            "ori(Sum(rewards[...])) == ori(periodFinish)",
            "ori(Sum(rewards[...])) >= ori(periodFinish)",
            "ori(Sum(rewards[...])) <= ori(periodFinish)",
            "ori(Sum(rewards[...])) == ori(Sum(_balances[...]))",
            "ori(Sum(rewards[...])) >= ori(Sum(_balances[...]))",
            "ori(Sum(rewards[...])) <= ori(Sum(_balances[...]))",
            "ori(Sum(rewards[...])) == ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(rewards[...])) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(rewards[...])) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(rewardReferral) != ori(vUSD)",
            "ori(rewardReferral) != ori(vETH)",
            "ori(vUSD) != ori(vETH)",
            "msg.value == ori(periodFinish)",
            "msg.value >= ori(periodFinish)",
            "msg.value <= ori(periodFinish)",
            "msg.value == ori(Sum(_balances[...]))",
            "msg.value >= ori(Sum(_balances[...]))",
            "msg.value <= ori(Sum(_balances[...]))",
            "msg.value == ori(Sum(userRewardPerTokenPaid[...]))",
            "msg.value >= ori(Sum(userRewardPerTokenPaid[...]))",
            "msg.value <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(periodFinish) == ori(Sum(_balances[...]))",
            "ori(periodFinish) >= ori(Sum(_balances[...]))",
            "ori(periodFinish) <= ori(Sum(_balances[...]))",
            "ori(periodFinish) == ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(periodFinish) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(periodFinish) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(_balances[...])) == ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(_balances[...])) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(_balances[...])) <= ori(Sum(userRewardPerTokenPaid[...]))"
        ],
        "postconditions": [
            "Sum(accumulatedStakingPower[...]) == 0",
            "Sum(accumulatedStakingPower[...]) one of [0]",
            "_totalSupply == 0",
            "_totalSupply one of [0]",
            "vUSD != 0",
            "lastUpdateTime == 0",
            "lastUpdateTime one of [0]",
            "rewardVote == 0",
            "currentEpoch == 0",
            "currentEpoch one of [0]",
            "_owner != 0",
            "elem of accumulatedStakingPower[...] is one of [0]",
            "elem of accumulatedStakingPower[...] is one of []",
            "yfv != 0",
            "periodFinish == 0",
            "periodFinish one of [0]",
            "rewardRate == 0",
            "rewardRate one of [0]",
            "elem of lastStakeTimes[...] is one of [0]",
            "elem of lastStakeTimes[...] is one of []",
            "rewardPerTokenStored == 0",
            "rewardPerTokenStored one of [0]",
            "elem of userRewardPerTokenPaid[...] is one of [0]",
            "elem of userRewardPerTokenPaid[...] is one of []",
            "Sum(_balances[...]) == 0",
            "Sum(_balances[...]) one of [0]",
            "elem of _balances[...] is one of [0]",
            "elem of _balances[...] is one of []",
            "rewardReferral != 0",
            "starttime > 0",
            "starttime == 1598018400",
            "starttime one of [1598018400]",
            "vETH_REWARD_FRACTION_RATE > 0",
            "vETH_REWARD_FRACTION_RATE == 21000000000000",
            "vETH_REWARD_FRACTION_RATE one of [21000000000000]",
            "currentEpochReward > 0",
            "currentEpochReward == 63000000000000000000000",
            "currentEpochReward one of [63000000000000000000000]",
            "Sum(userRewardPerTokenPaid[...]) == 0",
            "Sum(userRewardPerTokenPaid[...]) one of [0]",
            "Sum(lastStakeTimes[...]) == 0",
            "Sum(lastStakeTimes[...]) one of [0]",
            "vETH != 0",
            "Sum(rewards[...]) == 0",
            "Sum(rewards[...]) one of [0]",
            "vUSD_REWARD_FRACTION_RATE > 0",
            "vUSD_REWARD_FRACTION_RATE == 21000000000",
            "vUSD_REWARD_FRACTION_RATE one of [21000000000]",
            "elem of rewards[...] is one of [0]",
            "elem of rewards[...] is one of []",
            "totalAccumulatedReward == 0",
            "totalAccumulatedReward one of [0]",
            "Sum(accumulatedStakingPower[...]) == _totalSupply",
            "Sum(accumulatedStakingPower[...]) >= _totalSupply",
            "Sum(accumulatedStakingPower[...]) <= _totalSupply",
            "Sum(accumulatedStakingPower[...]) == lastUpdateTime",
            "Sum(accumulatedStakingPower[...]) >= lastUpdateTime",
            "Sum(accumulatedStakingPower[...]) <= lastUpdateTime",
            "Sum(accumulatedStakingPower[...]) <= ori(currentEpochReward)",
            "Sum(accumulatedStakingPower[...]) < ori(currentEpochReward)",
            "Sum(accumulatedStakingPower[...]) != ori(currentEpochReward)",
            "Sum(accumulatedStakingPower[...]) == currentEpoch",
            "Sum(accumulatedStakingPower[...]) >= currentEpoch",
            "Sum(accumulatedStakingPower[...]) <= currentEpoch",
            "Sum(accumulatedStakingPower[...]) <= ori(vETH_REWARD_FRACTION_RATE)",
            "Sum(accumulatedStakingPower[...]) < ori(vETH_REWARD_FRACTION_RATE)",
            "Sum(accumulatedStakingPower[...]) != ori(vETH_REWARD_FRACTION_RATE)",
            "Sum(accumulatedStakingPower[...]) == periodFinish",
            "Sum(accumulatedStakingPower[...]) >= periodFinish",
            "Sum(accumulatedStakingPower[...]) <= periodFinish",
            "Sum(accumulatedStakingPower[...]) == rewardRate",
            "Sum(accumulatedStakingPower[...]) >= rewardRate",
            "Sum(accumulatedStakingPower[...]) <= rewardRate",
            "Sum(accumulatedStakingPower[...]) == ori(_totalSupply)",
            "Sum(accumulatedStakingPower[...]) >= ori(_totalSupply)",
            "Sum(accumulatedStakingPower[...]) <= ori(_totalSupply)",
            "Sum(accumulatedStakingPower[...]) == ori(lastUpdateTime)",
            "Sum(accumulatedStakingPower[...]) >= ori(lastUpdateTime)",
            "Sum(accumulatedStakingPower[...]) <= ori(lastUpdateTime)",
            "Sum(accumulatedStakingPower[...]) == rewardPerTokenStored",
            "Sum(accumulatedStakingPower[...]) >= rewardPerTokenStored",
            "Sum(accumulatedStakingPower[...]) <= rewardPerTokenStored",
            "Sum(accumulatedStakingPower[...]) == Sum(_balances[...])",
            "Sum(accumulatedStakingPower[...]) >= Sum(_balances[...])",
            "Sum(accumulatedStakingPower[...]) <= Sum(_balances[...])",
            "Sum(accumulatedStakingPower[...]) == ori(totalAccumulatedReward)",
            "Sum(accumulatedStakingPower[...]) >= ori(totalAccumulatedReward)",
            "Sum(accumulatedStakingPower[...]) <= ori(totalAccumulatedReward)",
            "Sum(accumulatedStakingPower[...]) == ori(currentEpoch)",
            "Sum(accumulatedStakingPower[...]) >= ori(currentEpoch)",
            "Sum(accumulatedStakingPower[...]) <= ori(currentEpoch)",
            "Sum(accumulatedStakingPower[...]) == ori(rewardRate)",
            "Sum(accumulatedStakingPower[...]) >= ori(rewardRate)",
            "Sum(accumulatedStakingPower[...]) <= ori(rewardRate)",
            "Sum(accumulatedStakingPower[...]) <= ori(vUSD_REWARD_FRACTION_RATE)",
            "Sum(accumulatedStakingPower[...]) < ori(vUSD_REWARD_FRACTION_RATE)",
            "Sum(accumulatedStakingPower[...]) != ori(vUSD_REWARD_FRACTION_RATE)",
            "Sum(accumulatedStakingPower[...]) == ori(rewardPerTokenStored)",
            "Sum(accumulatedStakingPower[...]) >= ori(rewardPerTokenStored)",
            "Sum(accumulatedStakingPower[...]) <= ori(rewardPerTokenStored)",
            "Sum(accumulatedStakingPower[...]) <= starttime",
            "Sum(accumulatedStakingPower[...]) < starttime",
            "Sum(accumulatedStakingPower[...]) != starttime",
            "Sum(accumulatedStakingPower[...]) == ori(Sum(lastStakeTimes[...]))",
            "Sum(accumulatedStakingPower[...]) >= ori(Sum(lastStakeTimes[...]))",
            "Sum(accumulatedStakingPower[...]) <= ori(Sum(lastStakeTimes[...]))",
            "Sum(accumulatedStakingPower[...]) == ori(Sum(accumulatedStakingPower[...]))",
            "Sum(accumulatedStakingPower[...]) >= ori(Sum(accumulatedStakingPower[...]))",
            "Sum(accumulatedStakingPower[...]) <= ori(Sum(accumulatedStakingPower[...]))",
            "Sum(accumulatedStakingPower[...]) <= ori(starttime)",
            "Sum(accumulatedStakingPower[...]) < ori(starttime)",
            "Sum(accumulatedStakingPower[...]) != ori(starttime)",
            "Sum(accumulatedStakingPower[...]) <= vETH_REWARD_FRACTION_RATE",
            "Sum(accumulatedStakingPower[...]) < vETH_REWARD_FRACTION_RATE",
            "Sum(accumulatedStakingPower[...]) != vETH_REWARD_FRACTION_RATE",
            "Sum(accumulatedStakingPower[...]) <= currentEpochReward",
            "Sum(accumulatedStakingPower[...]) < currentEpochReward",
            "Sum(accumulatedStakingPower[...]) != currentEpochReward",
            "Sum(accumulatedStakingPower[...]) == Sum(userRewardPerTokenPaid[...])",
            "Sum(accumulatedStakingPower[...]) >= Sum(userRewardPerTokenPaid[...])",
            "Sum(accumulatedStakingPower[...]) <= Sum(userRewardPerTokenPaid[...])",
            "Sum(accumulatedStakingPower[...]) == ori(Sum(rewards[...]))",
            "Sum(accumulatedStakingPower[...]) >= ori(Sum(rewards[...]))",
            "Sum(accumulatedStakingPower[...]) <= ori(Sum(rewards[...]))",
            "Sum(accumulatedStakingPower[...]) == Sum(lastStakeTimes[...])",
            "Sum(accumulatedStakingPower[...]) >= Sum(lastStakeTimes[...])",
            "Sum(accumulatedStakingPower[...]) <= Sum(lastStakeTimes[...])",
            "Sum(accumulatedStakingPower[...]) == msg.value",
            "Sum(accumulatedStakingPower[...]) >= msg.value",
            "Sum(accumulatedStakingPower[...]) <= msg.value",
            "Sum(accumulatedStakingPower[...]) == Sum(rewards[...])",
            "Sum(accumulatedStakingPower[...]) >= Sum(rewards[...])",
            "Sum(accumulatedStakingPower[...]) <= Sum(rewards[...])",
            "Sum(accumulatedStakingPower[...]) == ori(periodFinish)",
            "Sum(accumulatedStakingPower[...]) >= ori(periodFinish)",
            "Sum(accumulatedStakingPower[...]) <= ori(periodFinish)",
            "Sum(accumulatedStakingPower[...]) <= vUSD_REWARD_FRACTION_RATE",
            "Sum(accumulatedStakingPower[...]) < vUSD_REWARD_FRACTION_RATE",
            "Sum(accumulatedStakingPower[...]) != vUSD_REWARD_FRACTION_RATE",
            "Sum(accumulatedStakingPower[...]) == ori(Sum(_balances[...]))",
            "Sum(accumulatedStakingPower[...]) >= ori(Sum(_balances[...]))",
            "Sum(accumulatedStakingPower[...]) <= ori(Sum(_balances[...]))",
            "Sum(accumulatedStakingPower[...]) == ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(accumulatedStakingPower[...]) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(accumulatedStakingPower[...]) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(accumulatedStakingPower[...]) == totalAccumulatedReward",
            "Sum(accumulatedStakingPower[...]) >= totalAccumulatedReward",
            "Sum(accumulatedStakingPower[...]) <= totalAccumulatedReward",
            "_totalSupply == lastUpdateTime",
            "_totalSupply >= lastUpdateTime",
            "_totalSupply <= lastUpdateTime",
            "_totalSupply <= ori(currentEpochReward)",
            "_totalSupply < ori(currentEpochReward)",
            "_totalSupply != ori(currentEpochReward)",
            "_totalSupply == currentEpoch",
            "_totalSupply >= currentEpoch",
            "_totalSupply <= currentEpoch",
            "_totalSupply <= ori(vETH_REWARD_FRACTION_RATE)",
            "_totalSupply < ori(vETH_REWARD_FRACTION_RATE)",
            "_totalSupply != ori(vETH_REWARD_FRACTION_RATE)",
            "_totalSupply == periodFinish",
            "_totalSupply >= periodFinish",
            "_totalSupply <= periodFinish",
            "_totalSupply == rewardRate",
            "_totalSupply >= rewardRate",
            "_totalSupply <= rewardRate",
            "_totalSupply == ori(_totalSupply)",
            "_totalSupply >= ori(_totalSupply)",
            "_totalSupply <= ori(_totalSupply)",
            "_totalSupply == ori(lastUpdateTime)",
            "_totalSupply >= ori(lastUpdateTime)",
            "_totalSupply <= ori(lastUpdateTime)",
            "_totalSupply == rewardPerTokenStored",
            "_totalSupply >= rewardPerTokenStored",
            "_totalSupply <= rewardPerTokenStored",
            "_totalSupply == Sum(_balances[...])",
            "_totalSupply >= Sum(_balances[...])",
            "_totalSupply <= Sum(_balances[...])",
            "_totalSupply == ori(totalAccumulatedReward)",
            "_totalSupply >= ori(totalAccumulatedReward)",
            "_totalSupply <= ori(totalAccumulatedReward)",
            "_totalSupply == ori(currentEpoch)",
            "_totalSupply >= ori(currentEpoch)",
            "_totalSupply <= ori(currentEpoch)",
            "_totalSupply == ori(rewardRate)",
            "_totalSupply >= ori(rewardRate)",
            "_totalSupply <= ori(rewardRate)",
            "_totalSupply <= ori(vUSD_REWARD_FRACTION_RATE)",
            "_totalSupply < ori(vUSD_REWARD_FRACTION_RATE)",
            "_totalSupply != ori(vUSD_REWARD_FRACTION_RATE)",
            "_totalSupply == ori(rewardPerTokenStored)",
            "_totalSupply >= ori(rewardPerTokenStored)",
            "_totalSupply <= ori(rewardPerTokenStored)",
            "_totalSupply <= starttime",
            "_totalSupply < starttime",
            "_totalSupply != starttime",
            "_totalSupply == ori(Sum(lastStakeTimes[...]))",
            "_totalSupply >= ori(Sum(lastStakeTimes[...]))",
            "_totalSupply <= ori(Sum(lastStakeTimes[...]))",
            "_totalSupply == ori(Sum(accumulatedStakingPower[...]))",
            "_totalSupply >= ori(Sum(accumulatedStakingPower[...]))",
            "_totalSupply <= ori(Sum(accumulatedStakingPower[...]))",
            "_totalSupply <= ori(starttime)",
            "_totalSupply < ori(starttime)",
            "_totalSupply != ori(starttime)",
            "_totalSupply <= vETH_REWARD_FRACTION_RATE",
            "_totalSupply < vETH_REWARD_FRACTION_RATE",
            "_totalSupply != vETH_REWARD_FRACTION_RATE",
            "_totalSupply <= currentEpochReward",
            "_totalSupply < currentEpochReward",
            "_totalSupply != currentEpochReward",
            "_totalSupply == Sum(userRewardPerTokenPaid[...])",
            "_totalSupply >= Sum(userRewardPerTokenPaid[...])",
            "_totalSupply <= Sum(userRewardPerTokenPaid[...])",
            "_totalSupply == ori(Sum(rewards[...]))",
            "_totalSupply >= ori(Sum(rewards[...]))",
            "_totalSupply <= ori(Sum(rewards[...]))",
            "_totalSupply == Sum(lastStakeTimes[...])",
            "_totalSupply >= Sum(lastStakeTimes[...])",
            "_totalSupply <= Sum(lastStakeTimes[...])",
            "_totalSupply == msg.value",
            "_totalSupply >= msg.value",
            "_totalSupply <= msg.value",
            "_totalSupply == Sum(rewards[...])",
            "_totalSupply >= Sum(rewards[...])",
            "_totalSupply <= Sum(rewards[...])",
            "_totalSupply == ori(periodFinish)",
            "_totalSupply >= ori(periodFinish)",
            "_totalSupply <= ori(periodFinish)",
            "_totalSupply <= vUSD_REWARD_FRACTION_RATE",
            "_totalSupply < vUSD_REWARD_FRACTION_RATE",
            "_totalSupply != vUSD_REWARD_FRACTION_RATE",
            "_totalSupply == ori(Sum(_balances[...]))",
            "_totalSupply >= ori(Sum(_balances[...]))",
            "_totalSupply <= ori(Sum(_balances[...]))",
            "_totalSupply == ori(Sum(userRewardPerTokenPaid[...]))",
            "_totalSupply >= ori(Sum(userRewardPerTokenPaid[...]))",
            "_totalSupply <= ori(Sum(userRewardPerTokenPaid[...]))",
            "_totalSupply == totalAccumulatedReward",
            "_totalSupply >= totalAccumulatedReward",
            "_totalSupply <= totalAccumulatedReward",
            "vUSD != rewardVote",
            "vUSD != msg.sender",
            "vUSD != _owner",
            "vUSD != ori(_owner)",
            "vUSD != yfv",
            "vUSD != ori(rewardVote)",
            "vUSD != rewardReferral",
            "vUSD != ori(yfv)",
            "vUSD != _rewardReferral",
            "vUSD != ori(rewardReferral)",
            "vUSD == ori(vUSD)",
            "vUSD != vETH",
            "vUSD != ori(vETH)",
            "lastUpdateTime <= ori(currentEpochReward)",
            "lastUpdateTime < ori(currentEpochReward)",
            "lastUpdateTime != ori(currentEpochReward)",
            "lastUpdateTime == currentEpoch",
            "lastUpdateTime >= currentEpoch",
            "lastUpdateTime <= currentEpoch",
            "lastUpdateTime <= ori(vETH_REWARD_FRACTION_RATE)",
            "lastUpdateTime < ori(vETH_REWARD_FRACTION_RATE)",
            "lastUpdateTime != ori(vETH_REWARD_FRACTION_RATE)",
            "lastUpdateTime == periodFinish",
            "lastUpdateTime >= periodFinish",
            "lastUpdateTime <= periodFinish",
            "lastUpdateTime == rewardRate",
            "lastUpdateTime >= rewardRate",
            "lastUpdateTime <= rewardRate",
            "lastUpdateTime == ori(_totalSupply)",
            "lastUpdateTime >= ori(_totalSupply)",
            "lastUpdateTime <= ori(_totalSupply)",
            "lastUpdateTime == ori(lastUpdateTime)",
            "lastUpdateTime >= ori(lastUpdateTime)",
            "lastUpdateTime <= ori(lastUpdateTime)",
            "lastUpdateTime == rewardPerTokenStored",
            "lastUpdateTime >= rewardPerTokenStored",
            "lastUpdateTime <= rewardPerTokenStored",
            "lastUpdateTime == Sum(_balances[...])",
            "lastUpdateTime >= Sum(_balances[...])",
            "lastUpdateTime <= Sum(_balances[...])",
            "lastUpdateTime == ori(totalAccumulatedReward)",
            "lastUpdateTime >= ori(totalAccumulatedReward)",
            "lastUpdateTime <= ori(totalAccumulatedReward)",
            "lastUpdateTime == ori(currentEpoch)",
            "lastUpdateTime >= ori(currentEpoch)",
            "lastUpdateTime <= ori(currentEpoch)",
            "lastUpdateTime == ori(rewardRate)",
            "lastUpdateTime >= ori(rewardRate)",
            "lastUpdateTime <= ori(rewardRate)",
            "lastUpdateTime <= ori(vUSD_REWARD_FRACTION_RATE)",
            "lastUpdateTime < ori(vUSD_REWARD_FRACTION_RATE)",
            "lastUpdateTime != ori(vUSD_REWARD_FRACTION_RATE)",
            "lastUpdateTime == ori(rewardPerTokenStored)",
            "lastUpdateTime >= ori(rewardPerTokenStored)",
            "lastUpdateTime <= ori(rewardPerTokenStored)",
            "lastUpdateTime <= starttime",
            "lastUpdateTime < starttime",
            "lastUpdateTime != starttime",
            "lastUpdateTime == ori(Sum(lastStakeTimes[...]))",
            "lastUpdateTime >= ori(Sum(lastStakeTimes[...]))",
            "lastUpdateTime <= ori(Sum(lastStakeTimes[...]))",
            "lastUpdateTime == ori(Sum(accumulatedStakingPower[...]))",
            "lastUpdateTime >= ori(Sum(accumulatedStakingPower[...]))",
            "lastUpdateTime <= ori(Sum(accumulatedStakingPower[...]))",
            "lastUpdateTime <= ori(starttime)",
            "lastUpdateTime < ori(starttime)",
            "lastUpdateTime != ori(starttime)",
            "lastUpdateTime <= vETH_REWARD_FRACTION_RATE",
            "lastUpdateTime < vETH_REWARD_FRACTION_RATE",
            "lastUpdateTime != vETH_REWARD_FRACTION_RATE",
            "lastUpdateTime <= currentEpochReward",
            "lastUpdateTime < currentEpochReward",
            "lastUpdateTime != currentEpochReward",
            "lastUpdateTime == Sum(userRewardPerTokenPaid[...])",
            "lastUpdateTime >= Sum(userRewardPerTokenPaid[...])",
            "lastUpdateTime <= Sum(userRewardPerTokenPaid[...])",
            "lastUpdateTime == ori(Sum(rewards[...]))",
            "lastUpdateTime >= ori(Sum(rewards[...]))",
            "lastUpdateTime <= ori(Sum(rewards[...]))",
            "lastUpdateTime == Sum(lastStakeTimes[...])",
            "lastUpdateTime >= Sum(lastStakeTimes[...])",
            "lastUpdateTime <= Sum(lastStakeTimes[...])",
            "lastUpdateTime == msg.value",
            "lastUpdateTime >= msg.value",
            "lastUpdateTime <= msg.value",
            "lastUpdateTime == Sum(rewards[...])",
            "lastUpdateTime >= Sum(rewards[...])",
            "lastUpdateTime <= Sum(rewards[...])",
            "lastUpdateTime == ori(periodFinish)",
            "lastUpdateTime >= ori(periodFinish)",
            "lastUpdateTime <= ori(periodFinish)",
            "lastUpdateTime <= vUSD_REWARD_FRACTION_RATE",
            "lastUpdateTime < vUSD_REWARD_FRACTION_RATE",
            "lastUpdateTime != vUSD_REWARD_FRACTION_RATE",
            "lastUpdateTime == ori(Sum(_balances[...]))",
            "lastUpdateTime >= ori(Sum(_balances[...]))",
            "lastUpdateTime <= ori(Sum(_balances[...]))",
            "lastUpdateTime == ori(Sum(userRewardPerTokenPaid[...]))",
            "lastUpdateTime >= ori(Sum(userRewardPerTokenPaid[...]))",
            "lastUpdateTime <= ori(Sum(userRewardPerTokenPaid[...]))",
            "lastUpdateTime == totalAccumulatedReward",
            "lastUpdateTime >= totalAccumulatedReward",
            "lastUpdateTime <= totalAccumulatedReward",
            "ori(currentEpochReward) >= currentEpoch",
            "ori(currentEpochReward) > currentEpoch",
            "ori(currentEpochReward) != currentEpoch",
            "ori(currentEpochReward) >= periodFinish",
            "ori(currentEpochReward) > periodFinish",
            "ori(currentEpochReward) != periodFinish",
            "ori(currentEpochReward) >= rewardRate",
            "ori(currentEpochReward) > rewardRate",
            "ori(currentEpochReward) != rewardRate",
            "ori(currentEpochReward) >= rewardPerTokenStored",
            "ori(currentEpochReward) > rewardPerTokenStored",
            "ori(currentEpochReward) != rewardPerTokenStored",
            "ori(currentEpochReward) >= Sum(_balances[...])",
            "ori(currentEpochReward) > Sum(_balances[...])",
            "ori(currentEpochReward) != Sum(_balances[...])",
            "ori(currentEpochReward) >= starttime",
            "ori(currentEpochReward) > starttime",
            "ori(currentEpochReward) != starttime",
            "ori(currentEpochReward) >= vETH_REWARD_FRACTION_RATE",
            "ori(currentEpochReward) > vETH_REWARD_FRACTION_RATE",
            "ori(currentEpochReward) != vETH_REWARD_FRACTION_RATE",
            "ori(currentEpochReward) == currentEpochReward",
            "ori(currentEpochReward) >= currentEpochReward",
            "ori(currentEpochReward) <= currentEpochReward",
            "ori(currentEpochReward) >= Sum(userRewardPerTokenPaid[...])",
            "ori(currentEpochReward) > Sum(userRewardPerTokenPaid[...])",
            "ori(currentEpochReward) != Sum(userRewardPerTokenPaid[...])",
            "ori(currentEpochReward) >= Sum(lastStakeTimes[...])",
            "ori(currentEpochReward) > Sum(lastStakeTimes[...])",
            "ori(currentEpochReward) != Sum(lastStakeTimes[...])",
            "ori(currentEpochReward) >= Sum(rewards[...])",
            "ori(currentEpochReward) > Sum(rewards[...])",
            "ori(currentEpochReward) != Sum(rewards[...])",
            "ori(currentEpochReward) >= vUSD_REWARD_FRACTION_RATE",
            "ori(currentEpochReward) > vUSD_REWARD_FRACTION_RATE",
            "ori(currentEpochReward) != vUSD_REWARD_FRACTION_RATE",
            "ori(currentEpochReward) >= totalAccumulatedReward",
            "ori(currentEpochReward) > totalAccumulatedReward",
            "ori(currentEpochReward) != totalAccumulatedReward",
            "rewardVote != msg.sender",
            "rewardVote != _owner",
            "rewardVote != ori(_owner)",
            "rewardVote != yfv",
            "rewardVote == ori(rewardVote)",
            "rewardVote != rewardReferral",
            "rewardVote != ori(yfv)",
            "rewardVote != _rewardReferral",
            "rewardVote == ori(rewardReferral)",
            "rewardVote != ori(vUSD)",
            "rewardVote != vETH",
            "rewardVote != ori(vETH)",
            "msg.sender == _owner",
            "msg.sender != yfv",
            "msg.sender != rewardReferral",
            "msg.sender != vETH",
            "currentEpoch <= ori(vETH_REWARD_FRACTION_RATE)",
            "currentEpoch < ori(vETH_REWARD_FRACTION_RATE)",
            "currentEpoch != ori(vETH_REWARD_FRACTION_RATE)",
            "currentEpoch == periodFinish",
            "currentEpoch >= periodFinish",
            "currentEpoch <= periodFinish",
            "currentEpoch == rewardRate",
            "currentEpoch >= rewardRate",
            "currentEpoch <= rewardRate",
            "currentEpoch == ori(_totalSupply)",
            "currentEpoch >= ori(_totalSupply)",
            "currentEpoch <= ori(_totalSupply)",
            "currentEpoch == ori(lastUpdateTime)",
            "currentEpoch >= ori(lastUpdateTime)",
            "currentEpoch <= ori(lastUpdateTime)",
            "currentEpoch == rewardPerTokenStored",
            "currentEpoch >= rewardPerTokenStored",
            "currentEpoch <= rewardPerTokenStored",
            "currentEpoch == Sum(_balances[...])",
            "currentEpoch >= Sum(_balances[...])",
            "currentEpoch <= Sum(_balances[...])",
            "currentEpoch == ori(totalAccumulatedReward)",
            "currentEpoch >= ori(totalAccumulatedReward)",
            "currentEpoch <= ori(totalAccumulatedReward)",
            "currentEpoch == ori(currentEpoch)",
            "currentEpoch >= ori(currentEpoch)",
            "currentEpoch <= ori(currentEpoch)",
            "currentEpoch == ori(rewardRate)",
            "currentEpoch >= ori(rewardRate)",
            "currentEpoch <= ori(rewardRate)",
            "currentEpoch <= ori(vUSD_REWARD_FRACTION_RATE)",
            "currentEpoch < ori(vUSD_REWARD_FRACTION_RATE)",
            "currentEpoch != ori(vUSD_REWARD_FRACTION_RATE)",
            "currentEpoch == ori(rewardPerTokenStored)",
            "currentEpoch >= ori(rewardPerTokenStored)",
            "currentEpoch <= ori(rewardPerTokenStored)",
            "currentEpoch <= starttime",
            "currentEpoch < starttime",
            "currentEpoch != starttime",
            "currentEpoch == ori(Sum(lastStakeTimes[...]))",
            "currentEpoch >= ori(Sum(lastStakeTimes[...]))",
            "currentEpoch <= ori(Sum(lastStakeTimes[...]))",
            "currentEpoch == ori(Sum(accumulatedStakingPower[...]))",
            "currentEpoch >= ori(Sum(accumulatedStakingPower[...]))",
            "currentEpoch <= ori(Sum(accumulatedStakingPower[...]))",
            "currentEpoch <= ori(starttime)",
            "currentEpoch < ori(starttime)",
            "currentEpoch != ori(starttime)",
            "currentEpoch <= vETH_REWARD_FRACTION_RATE",
            "currentEpoch < vETH_REWARD_FRACTION_RATE",
            "currentEpoch != vETH_REWARD_FRACTION_RATE",
            "currentEpoch <= currentEpochReward",
            "currentEpoch < currentEpochReward",
            "currentEpoch != currentEpochReward",
            "currentEpoch == Sum(userRewardPerTokenPaid[...])",
            "currentEpoch >= Sum(userRewardPerTokenPaid[...])",
            "currentEpoch <= Sum(userRewardPerTokenPaid[...])",
            "currentEpoch == ori(Sum(rewards[...]))",
            "currentEpoch >= ori(Sum(rewards[...]))",
            "currentEpoch <= ori(Sum(rewards[...]))",
            "currentEpoch == Sum(lastStakeTimes[...])",
            "currentEpoch >= Sum(lastStakeTimes[...])",
            "currentEpoch <= Sum(lastStakeTimes[...])",
            "currentEpoch == msg.value",
            "currentEpoch >= msg.value",
            "currentEpoch <= msg.value",
            "currentEpoch == Sum(rewards[...])",
            "currentEpoch >= Sum(rewards[...])",
            "currentEpoch <= Sum(rewards[...])",
            "currentEpoch == ori(periodFinish)",
            "currentEpoch >= ori(periodFinish)",
            "currentEpoch <= ori(periodFinish)",
            "currentEpoch <= vUSD_REWARD_FRACTION_RATE",
            "currentEpoch < vUSD_REWARD_FRACTION_RATE",
            "currentEpoch != vUSD_REWARD_FRACTION_RATE",
            "currentEpoch == ori(Sum(_balances[...]))",
            "currentEpoch >= ori(Sum(_balances[...]))",
            "currentEpoch <= ori(Sum(_balances[...]))",
            "currentEpoch == ori(Sum(userRewardPerTokenPaid[...]))",
            "currentEpoch >= ori(Sum(userRewardPerTokenPaid[...]))",
            "currentEpoch <= ori(Sum(userRewardPerTokenPaid[...]))",
            "currentEpoch == totalAccumulatedReward",
            "currentEpoch >= totalAccumulatedReward",
            "currentEpoch <= totalAccumulatedReward",
            "_owner == ori(_owner)",
            "_owner != yfv",
            "_owner != ori(rewardVote)",
            "_owner != rewardReferral",
            "_owner != ori(yfv)",
            "_owner != _rewardReferral",
            "_owner != ori(rewardReferral)",
            "_owner != ori(vUSD)",
            "_owner != vETH",
            "_owner != ori(vETH)",
            "ori(_owner) != yfv",
            "ori(_owner) != rewardReferral",
            "ori(_owner) != vETH",
            "ori(vETH_REWARD_FRACTION_RATE) >= periodFinish",
            "ori(vETH_REWARD_FRACTION_RATE) > periodFinish",
            "ori(vETH_REWARD_FRACTION_RATE) != periodFinish",
            "ori(vETH_REWARD_FRACTION_RATE) >= rewardRate",
            "ori(vETH_REWARD_FRACTION_RATE) > rewardRate",
            "ori(vETH_REWARD_FRACTION_RATE) != rewardRate",
            "ori(vETH_REWARD_FRACTION_RATE) >= rewardPerTokenStored",
            "ori(vETH_REWARD_FRACTION_RATE) > rewardPerTokenStored",
            "ori(vETH_REWARD_FRACTION_RATE) != rewardPerTokenStored",
            "ori(vETH_REWARD_FRACTION_RATE) >= Sum(_balances[...])",
            "ori(vETH_REWARD_FRACTION_RATE) > Sum(_balances[...])",
            "ori(vETH_REWARD_FRACTION_RATE) != Sum(_balances[...])",
            "ori(vETH_REWARD_FRACTION_RATE) >= starttime",
            "ori(vETH_REWARD_FRACTION_RATE) > starttime",
            "ori(vETH_REWARD_FRACTION_RATE) != starttime",
            "ori(vETH_REWARD_FRACTION_RATE) == vETH_REWARD_FRACTION_RATE",
            "ori(vETH_REWARD_FRACTION_RATE) >= vETH_REWARD_FRACTION_RATE",
            "ori(vETH_REWARD_FRACTION_RATE) <= vETH_REWARD_FRACTION_RATE",
            "ori(vETH_REWARD_FRACTION_RATE) <= currentEpochReward",
            "ori(vETH_REWARD_FRACTION_RATE) < currentEpochReward",
            "ori(vETH_REWARD_FRACTION_RATE) != currentEpochReward",
            "ori(vETH_REWARD_FRACTION_RATE) >= Sum(userRewardPerTokenPaid[...])",
            "ori(vETH_REWARD_FRACTION_RATE) > Sum(userRewardPerTokenPaid[...])",
            "ori(vETH_REWARD_FRACTION_RATE) != Sum(userRewardPerTokenPaid[...])",
            "ori(vETH_REWARD_FRACTION_RATE) >= Sum(lastStakeTimes[...])",
            "ori(vETH_REWARD_FRACTION_RATE) > Sum(lastStakeTimes[...])",
            "ori(vETH_REWARD_FRACTION_RATE) != Sum(lastStakeTimes[...])",
            "ori(vETH_REWARD_FRACTION_RATE) >= Sum(rewards[...])",
            "ori(vETH_REWARD_FRACTION_RATE) > Sum(rewards[...])",
            "ori(vETH_REWARD_FRACTION_RATE) != Sum(rewards[...])",
            "ori(vETH_REWARD_FRACTION_RATE) >= vUSD_REWARD_FRACTION_RATE",
            "ori(vETH_REWARD_FRACTION_RATE) > vUSD_REWARD_FRACTION_RATE",
            "ori(vETH_REWARD_FRACTION_RATE) != vUSD_REWARD_FRACTION_RATE",
            "ori(vETH_REWARD_FRACTION_RATE) >= totalAccumulatedReward",
            "ori(vETH_REWARD_FRACTION_RATE) > totalAccumulatedReward",
            "ori(vETH_REWARD_FRACTION_RATE) != totalAccumulatedReward",
            "yfv != ori(rewardVote)",
            "yfv != rewardReferral",
            "yfv == ori(yfv)",
            "yfv != _rewardReferral",
            "yfv != ori(rewardReferral)",
            "yfv != ori(vUSD)",
            "yfv != vETH",
            "yfv != ori(vETH)",
            "periodFinish == rewardRate",
            "periodFinish >= rewardRate",
            "periodFinish <= rewardRate",
            "periodFinish == ori(_totalSupply)",
            "periodFinish >= ori(_totalSupply)",
            "periodFinish <= ori(_totalSupply)",
            "periodFinish == ori(lastUpdateTime)",
            "periodFinish >= ori(lastUpdateTime)",
            "periodFinish <= ori(lastUpdateTime)",
            "periodFinish == rewardPerTokenStored",
            "periodFinish >= rewardPerTokenStored",
            "periodFinish <= rewardPerTokenStored",
            "periodFinish == Sum(_balances[...])",
            "periodFinish >= Sum(_balances[...])",
            "periodFinish <= Sum(_balances[...])",
            "periodFinish == ori(totalAccumulatedReward)",
            "periodFinish >= ori(totalAccumulatedReward)",
            "periodFinish <= ori(totalAccumulatedReward)",
            "periodFinish == ori(currentEpoch)",
            "periodFinish >= ori(currentEpoch)",
            "periodFinish <= ori(currentEpoch)",
            "periodFinish == ori(rewardRate)",
            "periodFinish >= ori(rewardRate)",
            "periodFinish <= ori(rewardRate)",
            "periodFinish <= ori(vUSD_REWARD_FRACTION_RATE)",
            "periodFinish < ori(vUSD_REWARD_FRACTION_RATE)",
            "periodFinish != ori(vUSD_REWARD_FRACTION_RATE)",
            "periodFinish == ori(rewardPerTokenStored)",
            "periodFinish >= ori(rewardPerTokenStored)",
            "periodFinish <= ori(rewardPerTokenStored)",
            "periodFinish <= starttime",
            "periodFinish < starttime",
            "periodFinish != starttime",
            "periodFinish == ori(Sum(lastStakeTimes[...]))",
            "periodFinish >= ori(Sum(lastStakeTimes[...]))",
            "periodFinish <= ori(Sum(lastStakeTimes[...]))",
            "periodFinish == ori(Sum(accumulatedStakingPower[...]))",
            "periodFinish >= ori(Sum(accumulatedStakingPower[...]))",
            "periodFinish <= ori(Sum(accumulatedStakingPower[...]))",
            "periodFinish <= ori(starttime)",
            "periodFinish < ori(starttime)",
            "periodFinish != ori(starttime)",
            "periodFinish <= vETH_REWARD_FRACTION_RATE",
            "periodFinish < vETH_REWARD_FRACTION_RATE",
            "periodFinish != vETH_REWARD_FRACTION_RATE",
            "periodFinish <= currentEpochReward",
            "periodFinish < currentEpochReward",
            "periodFinish != currentEpochReward",
            "periodFinish == Sum(userRewardPerTokenPaid[...])",
            "periodFinish >= Sum(userRewardPerTokenPaid[...])",
            "periodFinish <= Sum(userRewardPerTokenPaid[...])",
            "periodFinish == ori(Sum(rewards[...]))",
            "periodFinish >= ori(Sum(rewards[...]))",
            "periodFinish <= ori(Sum(rewards[...]))",
            "periodFinish == Sum(lastStakeTimes[...])",
            "periodFinish >= Sum(lastStakeTimes[...])",
            "periodFinish <= Sum(lastStakeTimes[...])",
            "periodFinish == msg.value",
            "periodFinish >= msg.value",
            "periodFinish <= msg.value",
            "periodFinish == Sum(rewards[...])",
            "periodFinish >= Sum(rewards[...])",
            "periodFinish <= Sum(rewards[...])",
            "periodFinish == ori(periodFinish)",
            "periodFinish >= ori(periodFinish)",
            "periodFinish <= ori(periodFinish)",
            "periodFinish <= vUSD_REWARD_FRACTION_RATE",
            "periodFinish < vUSD_REWARD_FRACTION_RATE",
            "periodFinish != vUSD_REWARD_FRACTION_RATE",
            "periodFinish == ori(Sum(_balances[...]))",
            "periodFinish >= ori(Sum(_balances[...]))",
            "periodFinish <= ori(Sum(_balances[...]))",
            "periodFinish == ori(Sum(userRewardPerTokenPaid[...]))",
            "periodFinish >= ori(Sum(userRewardPerTokenPaid[...]))",
            "periodFinish <= ori(Sum(userRewardPerTokenPaid[...]))",
            "periodFinish == totalAccumulatedReward",
            "periodFinish >= totalAccumulatedReward",
            "periodFinish <= totalAccumulatedReward",
            "rewardRate == ori(_totalSupply)",
            "rewardRate >= ori(_totalSupply)",
            "rewardRate <= ori(_totalSupply)",
            "rewardRate == ori(lastUpdateTime)",
            "rewardRate >= ori(lastUpdateTime)",
            "rewardRate <= ori(lastUpdateTime)",
            "rewardRate == rewardPerTokenStored",
            "rewardRate >= rewardPerTokenStored",
            "rewardRate <= rewardPerTokenStored",
            "rewardRate == Sum(_balances[...])",
            "rewardRate >= Sum(_balances[...])",
            "rewardRate <= Sum(_balances[...])",
            "rewardRate == ori(totalAccumulatedReward)",
            "rewardRate >= ori(totalAccumulatedReward)",
            "rewardRate <= ori(totalAccumulatedReward)",
            "rewardRate == ori(currentEpoch)",
            "rewardRate >= ori(currentEpoch)",
            "rewardRate <= ori(currentEpoch)",
            "rewardRate == ori(rewardRate)",
            "rewardRate >= ori(rewardRate)",
            "rewardRate <= ori(rewardRate)",
            "rewardRate <= ori(vUSD_REWARD_FRACTION_RATE)",
            "rewardRate < ori(vUSD_REWARD_FRACTION_RATE)",
            "rewardRate != ori(vUSD_REWARD_FRACTION_RATE)",
            "rewardRate == ori(rewardPerTokenStored)",
            "rewardRate >= ori(rewardPerTokenStored)",
            "rewardRate <= ori(rewardPerTokenStored)",
            "rewardRate <= starttime",
            "rewardRate < starttime",
            "rewardRate != starttime",
            "rewardRate == ori(Sum(lastStakeTimes[...]))",
            "rewardRate >= ori(Sum(lastStakeTimes[...]))",
            "rewardRate <= ori(Sum(lastStakeTimes[...]))",
            "rewardRate == ori(Sum(accumulatedStakingPower[...]))",
            "rewardRate >= ori(Sum(accumulatedStakingPower[...]))",
            "rewardRate <= ori(Sum(accumulatedStakingPower[...]))",
            "rewardRate <= ori(starttime)",
            "rewardRate < ori(starttime)",
            "rewardRate != ori(starttime)",
            "rewardRate <= vETH_REWARD_FRACTION_RATE",
            "rewardRate < vETH_REWARD_FRACTION_RATE",
            "rewardRate != vETH_REWARD_FRACTION_RATE",
            "rewardRate <= currentEpochReward",
            "rewardRate < currentEpochReward",
            "rewardRate != currentEpochReward",
            "rewardRate == Sum(userRewardPerTokenPaid[...])",
            "rewardRate >= Sum(userRewardPerTokenPaid[...])",
            "rewardRate <= Sum(userRewardPerTokenPaid[...])",
            "rewardRate == ori(Sum(rewards[...]))",
            "rewardRate >= ori(Sum(rewards[...]))",
            "rewardRate <= ori(Sum(rewards[...]))",
            "rewardRate == Sum(lastStakeTimes[...])",
            "rewardRate >= Sum(lastStakeTimes[...])",
            "rewardRate <= Sum(lastStakeTimes[...])",
            "rewardRate == msg.value",
            "rewardRate >= msg.value",
            "rewardRate <= msg.value",
            "rewardRate == Sum(rewards[...])",
            "rewardRate >= Sum(rewards[...])",
            "rewardRate <= Sum(rewards[...])",
            "rewardRate == ori(periodFinish)",
            "rewardRate >= ori(periodFinish)",
            "rewardRate <= ori(periodFinish)",
            "rewardRate <= vUSD_REWARD_FRACTION_RATE",
            "rewardRate < vUSD_REWARD_FRACTION_RATE",
            "rewardRate != vUSD_REWARD_FRACTION_RATE",
            "rewardRate == ori(Sum(_balances[...]))",
            "rewardRate >= ori(Sum(_balances[...]))",
            "rewardRate <= ori(Sum(_balances[...]))",
            "rewardRate == ori(Sum(userRewardPerTokenPaid[...]))",
            "rewardRate >= ori(Sum(userRewardPerTokenPaid[...]))",
            "rewardRate <= ori(Sum(userRewardPerTokenPaid[...]))",
            "rewardRate == totalAccumulatedReward",
            "rewardRate >= totalAccumulatedReward",
            "rewardRate <= totalAccumulatedReward",
            "ori(rewardVote) != rewardReferral",
            "ori(rewardVote) != vETH",
            "ori(_totalSupply) == rewardPerTokenStored",
            "ori(_totalSupply) >= rewardPerTokenStored",
            "ori(_totalSupply) <= rewardPerTokenStored",
            "ori(_totalSupply) == Sum(_balances[...])",
            "ori(_totalSupply) >= Sum(_balances[...])",
            "ori(_totalSupply) <= Sum(_balances[...])",
            "ori(_totalSupply) <= starttime",
            "ori(_totalSupply) < starttime",
            "ori(_totalSupply) != starttime",
            "ori(_totalSupply) <= vETH_REWARD_FRACTION_RATE",
            "ori(_totalSupply) < vETH_REWARD_FRACTION_RATE",
            "ori(_totalSupply) != vETH_REWARD_FRACTION_RATE",
            "ori(_totalSupply) <= currentEpochReward",
            "ori(_totalSupply) < currentEpochReward",
            "ori(_totalSupply) != currentEpochReward",
            "ori(_totalSupply) == Sum(userRewardPerTokenPaid[...])",
            "ori(_totalSupply) >= Sum(userRewardPerTokenPaid[...])",
            "ori(_totalSupply) <= Sum(userRewardPerTokenPaid[...])",
            "ori(_totalSupply) == Sum(lastStakeTimes[...])",
            "ori(_totalSupply) >= Sum(lastStakeTimes[...])",
            "ori(_totalSupply) <= Sum(lastStakeTimes[...])",
            "ori(_totalSupply) == Sum(rewards[...])",
            "ori(_totalSupply) >= Sum(rewards[...])",
            "ori(_totalSupply) <= Sum(rewards[...])",
            "ori(_totalSupply) <= vUSD_REWARD_FRACTION_RATE",
            "ori(_totalSupply) < vUSD_REWARD_FRACTION_RATE",
            "ori(_totalSupply) != vUSD_REWARD_FRACTION_RATE",
            "ori(_totalSupply) == totalAccumulatedReward",
            "ori(_totalSupply) >= totalAccumulatedReward",
            "ori(_totalSupply) <= totalAccumulatedReward",
            "ori(lastUpdateTime) == rewardPerTokenStored",
            "ori(lastUpdateTime) >= rewardPerTokenStored",
            "ori(lastUpdateTime) <= rewardPerTokenStored",
            "ori(lastUpdateTime) == Sum(_balances[...])",
            "ori(lastUpdateTime) >= Sum(_balances[...])",
            "ori(lastUpdateTime) <= Sum(_balances[...])",
            "ori(lastUpdateTime) <= starttime",
            "ori(lastUpdateTime) < starttime",
            "ori(lastUpdateTime) != starttime",
            "ori(lastUpdateTime) <= vETH_REWARD_FRACTION_RATE",
            "ori(lastUpdateTime) < vETH_REWARD_FRACTION_RATE",
            "ori(lastUpdateTime) != vETH_REWARD_FRACTION_RATE",
            "ori(lastUpdateTime) <= currentEpochReward",
            "ori(lastUpdateTime) < currentEpochReward",
            "ori(lastUpdateTime) != currentEpochReward",
            "ori(lastUpdateTime) == Sum(userRewardPerTokenPaid[...])",
            "ori(lastUpdateTime) >= Sum(userRewardPerTokenPaid[...])",
            "ori(lastUpdateTime) <= Sum(userRewardPerTokenPaid[...])",
            "ori(lastUpdateTime) == Sum(lastStakeTimes[...])",
            "ori(lastUpdateTime) >= Sum(lastStakeTimes[...])",
            "ori(lastUpdateTime) <= Sum(lastStakeTimes[...])",
            "ori(lastUpdateTime) == Sum(rewards[...])",
            "ori(lastUpdateTime) >= Sum(rewards[...])",
            "ori(lastUpdateTime) <= Sum(rewards[...])",
            "ori(lastUpdateTime) <= vUSD_REWARD_FRACTION_RATE",
            "ori(lastUpdateTime) < vUSD_REWARD_FRACTION_RATE",
            "ori(lastUpdateTime) != vUSD_REWARD_FRACTION_RATE",
            "ori(lastUpdateTime) == totalAccumulatedReward",
            "ori(lastUpdateTime) >= totalAccumulatedReward",
            "ori(lastUpdateTime) <= totalAccumulatedReward",
            "rewardPerTokenStored == Sum(_balances[...])",
            "rewardPerTokenStored >= Sum(_balances[...])",
            "rewardPerTokenStored <= Sum(_balances[...])",
            "rewardPerTokenStored == ori(totalAccumulatedReward)",
            "rewardPerTokenStored >= ori(totalAccumulatedReward)",
            "rewardPerTokenStored <= ori(totalAccumulatedReward)",
            "rewardPerTokenStored == ori(currentEpoch)",
            "rewardPerTokenStored >= ori(currentEpoch)",
            "rewardPerTokenStored <= ori(currentEpoch)",
            "rewardPerTokenStored == ori(rewardRate)",
            "rewardPerTokenStored >= ori(rewardRate)",
            "rewardPerTokenStored <= ori(rewardRate)",
            "rewardPerTokenStored <= ori(vUSD_REWARD_FRACTION_RATE)",
            "rewardPerTokenStored < ori(vUSD_REWARD_FRACTION_RATE)",
            "rewardPerTokenStored != ori(vUSD_REWARD_FRACTION_RATE)",
            "rewardPerTokenStored == ori(rewardPerTokenStored)",
            "rewardPerTokenStored >= ori(rewardPerTokenStored)",
            "rewardPerTokenStored <= ori(rewardPerTokenStored)",
            "rewardPerTokenStored <= starttime",
            "rewardPerTokenStored < starttime",
            "rewardPerTokenStored != starttime",
            "rewardPerTokenStored == ori(Sum(lastStakeTimes[...]))",
            "rewardPerTokenStored >= ori(Sum(lastStakeTimes[...]))",
            "rewardPerTokenStored <= ori(Sum(lastStakeTimes[...]))",
            "rewardPerTokenStored == ori(Sum(accumulatedStakingPower[...]))",
            "rewardPerTokenStored >= ori(Sum(accumulatedStakingPower[...]))",
            "rewardPerTokenStored <= ori(Sum(accumulatedStakingPower[...]))",
            "rewardPerTokenStored <= ori(starttime)",
            "rewardPerTokenStored < ori(starttime)",
            "rewardPerTokenStored != ori(starttime)",
            "rewardPerTokenStored <= vETH_REWARD_FRACTION_RATE",
            "rewardPerTokenStored < vETH_REWARD_FRACTION_RATE",
            "rewardPerTokenStored != vETH_REWARD_FRACTION_RATE",
            "rewardPerTokenStored <= currentEpochReward",
            "rewardPerTokenStored < currentEpochReward",
            "rewardPerTokenStored != currentEpochReward",
            "rewardPerTokenStored == Sum(userRewardPerTokenPaid[...])",
            "rewardPerTokenStored >= Sum(userRewardPerTokenPaid[...])",
            "rewardPerTokenStored <= Sum(userRewardPerTokenPaid[...])",
            "rewardPerTokenStored == ori(Sum(rewards[...]))",
            "rewardPerTokenStored >= ori(Sum(rewards[...]))",
            "rewardPerTokenStored <= ori(Sum(rewards[...]))",
            "rewardPerTokenStored == Sum(lastStakeTimes[...])",
            "rewardPerTokenStored >= Sum(lastStakeTimes[...])",
            "rewardPerTokenStored <= Sum(lastStakeTimes[...])",
            "rewardPerTokenStored == msg.value",
            "rewardPerTokenStored >= msg.value",
            "rewardPerTokenStored <= msg.value",
            "rewardPerTokenStored == Sum(rewards[...])",
            "rewardPerTokenStored >= Sum(rewards[...])",
            "rewardPerTokenStored <= Sum(rewards[...])",
            "rewardPerTokenStored == ori(periodFinish)",
            "rewardPerTokenStored >= ori(periodFinish)",
            "rewardPerTokenStored <= ori(periodFinish)",
            "rewardPerTokenStored <= vUSD_REWARD_FRACTION_RATE",
            "rewardPerTokenStored < vUSD_REWARD_FRACTION_RATE",
            "rewardPerTokenStored != vUSD_REWARD_FRACTION_RATE",
            "rewardPerTokenStored == ori(Sum(_balances[...]))",
            "rewardPerTokenStored >= ori(Sum(_balances[...]))",
            "rewardPerTokenStored <= ori(Sum(_balances[...]))",
            "rewardPerTokenStored == ori(Sum(userRewardPerTokenPaid[...]))",
            "rewardPerTokenStored >= ori(Sum(userRewardPerTokenPaid[...]))",
            "rewardPerTokenStored <= ori(Sum(userRewardPerTokenPaid[...]))",
            "rewardPerTokenStored == totalAccumulatedReward",
            "rewardPerTokenStored >= totalAccumulatedReward",
            "rewardPerTokenStored <= totalAccumulatedReward",
            "Sum(_balances[...]) == ori(totalAccumulatedReward)",
            "Sum(_balances[...]) >= ori(totalAccumulatedReward)",
            "Sum(_balances[...]) <= ori(totalAccumulatedReward)",
            "Sum(_balances[...]) == ori(currentEpoch)",
            "Sum(_balances[...]) >= ori(currentEpoch)",
            "Sum(_balances[...]) <= ori(currentEpoch)",
            "Sum(_balances[...]) == ori(rewardRate)",
            "Sum(_balances[...]) >= ori(rewardRate)",
            "Sum(_balances[...]) <= ori(rewardRate)",
            "Sum(_balances[...]) <= ori(vUSD_REWARD_FRACTION_RATE)",
            "Sum(_balances[...]) < ori(vUSD_REWARD_FRACTION_RATE)",
            "Sum(_balances[...]) != ori(vUSD_REWARD_FRACTION_RATE)",
            "Sum(_balances[...]) == ori(rewardPerTokenStored)",
            "Sum(_balances[...]) >= ori(rewardPerTokenStored)",
            "Sum(_balances[...]) <= ori(rewardPerTokenStored)",
            "Sum(_balances[...]) <= starttime",
            "Sum(_balances[...]) < starttime",
            "Sum(_balances[...]) != starttime",
            "Sum(_balances[...]) == ori(Sum(lastStakeTimes[...]))",
            "Sum(_balances[...]) >= ori(Sum(lastStakeTimes[...]))",
            "Sum(_balances[...]) <= ori(Sum(lastStakeTimes[...]))",
            "Sum(_balances[...]) == ori(Sum(accumulatedStakingPower[...]))",
            "Sum(_balances[...]) >= ori(Sum(accumulatedStakingPower[...]))",
            "Sum(_balances[...]) <= ori(Sum(accumulatedStakingPower[...]))",
            "Sum(_balances[...]) <= ori(starttime)",
            "Sum(_balances[...]) < ori(starttime)",
            "Sum(_balances[...]) != ori(starttime)",
            "Sum(_balances[...]) <= vETH_REWARD_FRACTION_RATE",
            "Sum(_balances[...]) < vETH_REWARD_FRACTION_RATE",
            "Sum(_balances[...]) != vETH_REWARD_FRACTION_RATE",
            "Sum(_balances[...]) <= currentEpochReward",
            "Sum(_balances[...]) < currentEpochReward",
            "Sum(_balances[...]) != currentEpochReward",
            "Sum(_balances[...]) == Sum(userRewardPerTokenPaid[...])",
            "Sum(_balances[...]) >= Sum(userRewardPerTokenPaid[...])",
            "Sum(_balances[...]) <= Sum(userRewardPerTokenPaid[...])",
            "Sum(_balances[...]) == ori(Sum(rewards[...]))",
            "Sum(_balances[...]) >= ori(Sum(rewards[...]))",
            "Sum(_balances[...]) <= ori(Sum(rewards[...]))",
            "Sum(_balances[...]) == Sum(lastStakeTimes[...])",
            "Sum(_balances[...]) >= Sum(lastStakeTimes[...])",
            "Sum(_balances[...]) <= Sum(lastStakeTimes[...])",
            "Sum(_balances[...]) == msg.value",
            "Sum(_balances[...]) >= msg.value",
            "Sum(_balances[...]) <= msg.value",
            "Sum(_balances[...]) == Sum(rewards[...])",
            "Sum(_balances[...]) >= Sum(rewards[...])",
            "Sum(_balances[...]) <= Sum(rewards[...])",
            "Sum(_balances[...]) == ori(periodFinish)",
            "Sum(_balances[...]) >= ori(periodFinish)",
            "Sum(_balances[...]) <= ori(periodFinish)",
            "Sum(_balances[...]) <= vUSD_REWARD_FRACTION_RATE",
            "Sum(_balances[...]) < vUSD_REWARD_FRACTION_RATE",
            "Sum(_balances[...]) != vUSD_REWARD_FRACTION_RATE",
            "Sum(_balances[...]) == ori(Sum(_balances[...]))",
            "Sum(_balances[...]) >= ori(Sum(_balances[...]))",
            "Sum(_balances[...]) <= ori(Sum(_balances[...]))",
            "Sum(_balances[...]) == ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(_balances[...]) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(_balances[...]) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(_balances[...]) == totalAccumulatedReward",
            "Sum(_balances[...]) >= totalAccumulatedReward",
            "Sum(_balances[...]) <= totalAccumulatedReward",
            "ori(totalAccumulatedReward) <= starttime",
            "ori(totalAccumulatedReward) < starttime",
            "ori(totalAccumulatedReward) != starttime",
            "ori(totalAccumulatedReward) <= vETH_REWARD_FRACTION_RATE",
            "ori(totalAccumulatedReward) < vETH_REWARD_FRACTION_RATE",
            "ori(totalAccumulatedReward) != vETH_REWARD_FRACTION_RATE",
            "ori(totalAccumulatedReward) <= currentEpochReward",
            "ori(totalAccumulatedReward) < currentEpochReward",
            "ori(totalAccumulatedReward) != currentEpochReward",
            "ori(totalAccumulatedReward) == Sum(userRewardPerTokenPaid[...])",
            "ori(totalAccumulatedReward) >= Sum(userRewardPerTokenPaid[...])",
            "ori(totalAccumulatedReward) <= Sum(userRewardPerTokenPaid[...])",
            "ori(totalAccumulatedReward) == Sum(lastStakeTimes[...])",
            "ori(totalAccumulatedReward) >= Sum(lastStakeTimes[...])",
            "ori(totalAccumulatedReward) <= Sum(lastStakeTimes[...])",
            "ori(totalAccumulatedReward) == Sum(rewards[...])",
            "ori(totalAccumulatedReward) >= Sum(rewards[...])",
            "ori(totalAccumulatedReward) <= Sum(rewards[...])",
            "ori(totalAccumulatedReward) <= vUSD_REWARD_FRACTION_RATE",
            "ori(totalAccumulatedReward) < vUSD_REWARD_FRACTION_RATE",
            "ori(totalAccumulatedReward) != vUSD_REWARD_FRACTION_RATE",
            "ori(totalAccumulatedReward) == totalAccumulatedReward",
            "ori(totalAccumulatedReward) >= totalAccumulatedReward",
            "ori(totalAccumulatedReward) <= totalAccumulatedReward",
            "ori(currentEpoch) <= starttime",
            "ori(currentEpoch) < starttime",
            "ori(currentEpoch) != starttime",
            "ori(currentEpoch) <= vETH_REWARD_FRACTION_RATE",
            "ori(currentEpoch) < vETH_REWARD_FRACTION_RATE",
            "ori(currentEpoch) != vETH_REWARD_FRACTION_RATE",
            "ori(currentEpoch) <= currentEpochReward",
            "ori(currentEpoch) < currentEpochReward",
            "ori(currentEpoch) != currentEpochReward",
            "ori(currentEpoch) == Sum(userRewardPerTokenPaid[...])",
            "ori(currentEpoch) >= Sum(userRewardPerTokenPaid[...])",
            "ori(currentEpoch) <= Sum(userRewardPerTokenPaid[...])",
            "ori(currentEpoch) == Sum(lastStakeTimes[...])",
            "ori(currentEpoch) >= Sum(lastStakeTimes[...])",
            "ori(currentEpoch) <= Sum(lastStakeTimes[...])",
            "ori(currentEpoch) == Sum(rewards[...])",
            "ori(currentEpoch) >= Sum(rewards[...])",
            "ori(currentEpoch) <= Sum(rewards[...])",
            "ori(currentEpoch) <= vUSD_REWARD_FRACTION_RATE",
            "ori(currentEpoch) < vUSD_REWARD_FRACTION_RATE",
            "ori(currentEpoch) != vUSD_REWARD_FRACTION_RATE",
            "ori(currentEpoch) == totalAccumulatedReward",
            "ori(currentEpoch) >= totalAccumulatedReward",
            "ori(currentEpoch) <= totalAccumulatedReward",
            "ori(rewardRate) <= starttime",
            "ori(rewardRate) < starttime",
            "ori(rewardRate) != starttime",
            "ori(rewardRate) <= vETH_REWARD_FRACTION_RATE",
            "ori(rewardRate) < vETH_REWARD_FRACTION_RATE",
            "ori(rewardRate) != vETH_REWARD_FRACTION_RATE",
            "ori(rewardRate) <= currentEpochReward",
            "ori(rewardRate) < currentEpochReward",
            "ori(rewardRate) != currentEpochReward",
            "ori(rewardRate) == Sum(userRewardPerTokenPaid[...])",
            "ori(rewardRate) >= Sum(userRewardPerTokenPaid[...])",
            "ori(rewardRate) <= Sum(userRewardPerTokenPaid[...])",
            "ori(rewardRate) == Sum(lastStakeTimes[...])",
            "ori(rewardRate) >= Sum(lastStakeTimes[...])",
            "ori(rewardRate) <= Sum(lastStakeTimes[...])",
            "ori(rewardRate) == Sum(rewards[...])",
            "ori(rewardRate) >= Sum(rewards[...])",
            "ori(rewardRate) <= Sum(rewards[...])",
            "ori(rewardRate) <= vUSD_REWARD_FRACTION_RATE",
            "ori(rewardRate) < vUSD_REWARD_FRACTION_RATE",
            "ori(rewardRate) != vUSD_REWARD_FRACTION_RATE",
            "ori(rewardRate) == totalAccumulatedReward",
            "ori(rewardRate) >= totalAccumulatedReward",
            "ori(rewardRate) <= totalAccumulatedReward",
            "rewardReferral != ori(yfv)",
            "rewardReferral == _rewardReferral",
            "rewardReferral != ori(rewardReferral)",
            "rewardReferral != ori(vUSD)",
            "rewardReferral != vETH",
            "rewardReferral != ori(vETH)",
            "ori(vUSD_REWARD_FRACTION_RATE) >= starttime",
            "ori(vUSD_REWARD_FRACTION_RATE) > starttime",
            "ori(vUSD_REWARD_FRACTION_RATE) != starttime",
            "ori(vUSD_REWARD_FRACTION_RATE) <= vETH_REWARD_FRACTION_RATE",
            "ori(vUSD_REWARD_FRACTION_RATE) < vETH_REWARD_FRACTION_RATE",
            "ori(vUSD_REWARD_FRACTION_RATE) != vETH_REWARD_FRACTION_RATE",
            "ori(vUSD_REWARD_FRACTION_RATE) <= currentEpochReward",
            "ori(vUSD_REWARD_FRACTION_RATE) < currentEpochReward",
            "ori(vUSD_REWARD_FRACTION_RATE) != currentEpochReward",
            "ori(vUSD_REWARD_FRACTION_RATE) >= Sum(userRewardPerTokenPaid[...])",
            "ori(vUSD_REWARD_FRACTION_RATE) > Sum(userRewardPerTokenPaid[...])",
            "ori(vUSD_REWARD_FRACTION_RATE) != Sum(userRewardPerTokenPaid[...])",
            "ori(vUSD_REWARD_FRACTION_RATE) >= Sum(lastStakeTimes[...])",
            "ori(vUSD_REWARD_FRACTION_RATE) > Sum(lastStakeTimes[...])",
            "ori(vUSD_REWARD_FRACTION_RATE) != Sum(lastStakeTimes[...])",
            "ori(vUSD_REWARD_FRACTION_RATE) >= Sum(rewards[...])",
            "ori(vUSD_REWARD_FRACTION_RATE) > Sum(rewards[...])",
            "ori(vUSD_REWARD_FRACTION_RATE) != Sum(rewards[...])",
            "ori(vUSD_REWARD_FRACTION_RATE) == vUSD_REWARD_FRACTION_RATE",
            "ori(vUSD_REWARD_FRACTION_RATE) >= vUSD_REWARD_FRACTION_RATE",
            "ori(vUSD_REWARD_FRACTION_RATE) <= vUSD_REWARD_FRACTION_RATE",
            "ori(vUSD_REWARD_FRACTION_RATE) >= totalAccumulatedReward",
            "ori(vUSD_REWARD_FRACTION_RATE) > totalAccumulatedReward",
            "ori(vUSD_REWARD_FRACTION_RATE) != totalAccumulatedReward",
            "ori(rewardPerTokenStored) <= starttime",
            "ori(rewardPerTokenStored) < starttime",
            "ori(rewardPerTokenStored) != starttime",
            "ori(rewardPerTokenStored) <= vETH_REWARD_FRACTION_RATE",
            "ori(rewardPerTokenStored) < vETH_REWARD_FRACTION_RATE",
            "ori(rewardPerTokenStored) != vETH_REWARD_FRACTION_RATE",
            "ori(rewardPerTokenStored) <= currentEpochReward",
            "ori(rewardPerTokenStored) < currentEpochReward",
            "ori(rewardPerTokenStored) != currentEpochReward",
            "ori(rewardPerTokenStored) == Sum(userRewardPerTokenPaid[...])",
            "ori(rewardPerTokenStored) >= Sum(userRewardPerTokenPaid[...])",
            "ori(rewardPerTokenStored) <= Sum(userRewardPerTokenPaid[...])",
            "ori(rewardPerTokenStored) == Sum(lastStakeTimes[...])",
            "ori(rewardPerTokenStored) >= Sum(lastStakeTimes[...])",
            "ori(rewardPerTokenStored) <= Sum(lastStakeTimes[...])",
            "ori(rewardPerTokenStored) == Sum(rewards[...])",
            "ori(rewardPerTokenStored) >= Sum(rewards[...])",
            "ori(rewardPerTokenStored) <= Sum(rewards[...])",
            "ori(rewardPerTokenStored) <= vUSD_REWARD_FRACTION_RATE",
            "ori(rewardPerTokenStored) < vUSD_REWARD_FRACTION_RATE",
            "ori(rewardPerTokenStored) != vUSD_REWARD_FRACTION_RATE",
            "ori(rewardPerTokenStored) == totalAccumulatedReward",
            "ori(rewardPerTokenStored) >= totalAccumulatedReward",
            "ori(rewardPerTokenStored) <= totalAccumulatedReward",
            "starttime >= ori(Sum(lastStakeTimes[...]))",
            "starttime > ori(Sum(lastStakeTimes[...]))",
            "starttime != ori(Sum(lastStakeTimes[...]))",
            "starttime >= ori(Sum(accumulatedStakingPower[...]))",
            "starttime > ori(Sum(accumulatedStakingPower[...]))",
            "starttime != ori(Sum(accumulatedStakingPower[...]))",
            "starttime == ori(starttime)",
            "starttime >= ori(starttime)",
            "starttime <= ori(starttime)",
            "starttime <= vETH_REWARD_FRACTION_RATE",
            "starttime < vETH_REWARD_FRACTION_RATE",
            "starttime != vETH_REWARD_FRACTION_RATE",
            "starttime <= currentEpochReward",
            "starttime < currentEpochReward",
            "starttime != currentEpochReward",
            "starttime >= Sum(userRewardPerTokenPaid[...])",
            "starttime > Sum(userRewardPerTokenPaid[...])",
            "starttime != Sum(userRewardPerTokenPaid[...])",
            "starttime >= ori(Sum(rewards[...]))",
            "starttime > ori(Sum(rewards[...]))",
            "starttime != ori(Sum(rewards[...]))",
            "starttime >= Sum(lastStakeTimes[...])",
            "starttime > Sum(lastStakeTimes[...])",
            "starttime != Sum(lastStakeTimes[...])",
            "starttime >= msg.value",
            "starttime > msg.value",
            "starttime != msg.value",
            "starttime >= Sum(rewards[...])",
            "starttime > Sum(rewards[...])",
            "starttime != Sum(rewards[...])",
            "starttime >= ori(periodFinish)",
            "starttime > ori(periodFinish)",
            "starttime != ori(periodFinish)",
            "starttime <= vUSD_REWARD_FRACTION_RATE",
            "starttime < vUSD_REWARD_FRACTION_RATE",
            "starttime != vUSD_REWARD_FRACTION_RATE",
            "starttime >= ori(Sum(_balances[...]))",
            "starttime > ori(Sum(_balances[...]))",
            "starttime != ori(Sum(_balances[...]))",
            "starttime >= ori(Sum(userRewardPerTokenPaid[...]))",
            "starttime > ori(Sum(userRewardPerTokenPaid[...]))",
            "starttime != ori(Sum(userRewardPerTokenPaid[...]))",
            "starttime >= totalAccumulatedReward",
            "starttime > totalAccumulatedReward",
            "starttime != totalAccumulatedReward",
            "ori(Sum(lastStakeTimes[...])) <= vETH_REWARD_FRACTION_RATE",
            "ori(Sum(lastStakeTimes[...])) < vETH_REWARD_FRACTION_RATE",
            "ori(Sum(lastStakeTimes[...])) != vETH_REWARD_FRACTION_RATE",
            "ori(Sum(lastStakeTimes[...])) <= currentEpochReward",
            "ori(Sum(lastStakeTimes[...])) < currentEpochReward",
            "ori(Sum(lastStakeTimes[...])) != currentEpochReward",
            "ori(Sum(lastStakeTimes[...])) == Sum(userRewardPerTokenPaid[...])",
            "ori(Sum(lastStakeTimes[...])) >= Sum(userRewardPerTokenPaid[...])",
            "ori(Sum(lastStakeTimes[...])) <= Sum(userRewardPerTokenPaid[...])",
            "ori(Sum(lastStakeTimes[...])) == Sum(lastStakeTimes[...])",
            "ori(Sum(lastStakeTimes[...])) >= Sum(lastStakeTimes[...])",
            "ori(Sum(lastStakeTimes[...])) <= Sum(lastStakeTimes[...])",
            "ori(Sum(lastStakeTimes[...])) == Sum(rewards[...])",
            "ori(Sum(lastStakeTimes[...])) >= Sum(rewards[...])",
            "ori(Sum(lastStakeTimes[...])) <= Sum(rewards[...])",
            "ori(Sum(lastStakeTimes[...])) <= vUSD_REWARD_FRACTION_RATE",
            "ori(Sum(lastStakeTimes[...])) < vUSD_REWARD_FRACTION_RATE",
            "ori(Sum(lastStakeTimes[...])) != vUSD_REWARD_FRACTION_RATE",
            "ori(Sum(lastStakeTimes[...])) == totalAccumulatedReward",
            "ori(Sum(lastStakeTimes[...])) >= totalAccumulatedReward",
            "ori(Sum(lastStakeTimes[...])) <= totalAccumulatedReward",
            "ori(Sum(accumulatedStakingPower[...])) <= vETH_REWARD_FRACTION_RATE",
            "ori(Sum(accumulatedStakingPower[...])) < vETH_REWARD_FRACTION_RATE",
            "ori(Sum(accumulatedStakingPower[...])) != vETH_REWARD_FRACTION_RATE",
            "ori(Sum(accumulatedStakingPower[...])) <= currentEpochReward",
            "ori(Sum(accumulatedStakingPower[...])) < currentEpochReward",
            "ori(Sum(accumulatedStakingPower[...])) != currentEpochReward",
            "ori(Sum(accumulatedStakingPower[...])) == Sum(userRewardPerTokenPaid[...])",
            "ori(Sum(accumulatedStakingPower[...])) >= Sum(userRewardPerTokenPaid[...])",
            "ori(Sum(accumulatedStakingPower[...])) <= Sum(userRewardPerTokenPaid[...])",
            "ori(Sum(accumulatedStakingPower[...])) == Sum(lastStakeTimes[...])",
            "ori(Sum(accumulatedStakingPower[...])) >= Sum(lastStakeTimes[...])",
            "ori(Sum(accumulatedStakingPower[...])) <= Sum(lastStakeTimes[...])",
            "ori(Sum(accumulatedStakingPower[...])) == Sum(rewards[...])",
            "ori(Sum(accumulatedStakingPower[...])) >= Sum(rewards[...])",
            "ori(Sum(accumulatedStakingPower[...])) <= Sum(rewards[...])",
            "ori(Sum(accumulatedStakingPower[...])) <= vUSD_REWARD_FRACTION_RATE",
            "ori(Sum(accumulatedStakingPower[...])) < vUSD_REWARD_FRACTION_RATE",
            "ori(Sum(accumulatedStakingPower[...])) != vUSD_REWARD_FRACTION_RATE",
            "ori(Sum(accumulatedStakingPower[...])) == totalAccumulatedReward",
            "ori(Sum(accumulatedStakingPower[...])) >= totalAccumulatedReward",
            "ori(Sum(accumulatedStakingPower[...])) <= totalAccumulatedReward",
            "ori(yfv) != vETH",
            "ori(starttime) <= vETH_REWARD_FRACTION_RATE",
            "ori(starttime) < vETH_REWARD_FRACTION_RATE",
            "ori(starttime) != vETH_REWARD_FRACTION_RATE",
            "ori(starttime) <= currentEpochReward",
            "ori(starttime) < currentEpochReward",
            "ori(starttime) != currentEpochReward",
            "ori(starttime) >= Sum(userRewardPerTokenPaid[...])",
            "ori(starttime) > Sum(userRewardPerTokenPaid[...])",
            "ori(starttime) != Sum(userRewardPerTokenPaid[...])",
            "ori(starttime) >= Sum(lastStakeTimes[...])",
            "ori(starttime) > Sum(lastStakeTimes[...])",
            "ori(starttime) != Sum(lastStakeTimes[...])",
            "ori(starttime) >= Sum(rewards[...])",
            "ori(starttime) > Sum(rewards[...])",
            "ori(starttime) != Sum(rewards[...])",
            "ori(starttime) <= vUSD_REWARD_FRACTION_RATE",
            "ori(starttime) < vUSD_REWARD_FRACTION_RATE",
            "ori(starttime) != vUSD_REWARD_FRACTION_RATE",
            "ori(starttime) >= totalAccumulatedReward",
            "ori(starttime) > totalAccumulatedReward",
            "ori(starttime) != totalAccumulatedReward",
            "vETH_REWARD_FRACTION_RATE <= currentEpochReward",
            "vETH_REWARD_FRACTION_RATE < currentEpochReward",
            "vETH_REWARD_FRACTION_RATE != currentEpochReward",
            "vETH_REWARD_FRACTION_RATE >= Sum(userRewardPerTokenPaid[...])",
            "vETH_REWARD_FRACTION_RATE > Sum(userRewardPerTokenPaid[...])",
            "vETH_REWARD_FRACTION_RATE != Sum(userRewardPerTokenPaid[...])",
            "vETH_REWARD_FRACTION_RATE >= ori(Sum(rewards[...]))",
            "vETH_REWARD_FRACTION_RATE > ori(Sum(rewards[...]))",
            "vETH_REWARD_FRACTION_RATE != ori(Sum(rewards[...]))",
            "vETH_REWARD_FRACTION_RATE >= Sum(lastStakeTimes[...])",
            "vETH_REWARD_FRACTION_RATE > Sum(lastStakeTimes[...])",
            "vETH_REWARD_FRACTION_RATE != Sum(lastStakeTimes[...])",
            "vETH_REWARD_FRACTION_RATE >= msg.value",
            "vETH_REWARD_FRACTION_RATE > msg.value",
            "vETH_REWARD_FRACTION_RATE != msg.value",
            "vETH_REWARD_FRACTION_RATE >= Sum(rewards[...])",
            "vETH_REWARD_FRACTION_RATE > Sum(rewards[...])",
            "vETH_REWARD_FRACTION_RATE != Sum(rewards[...])",
            "vETH_REWARD_FRACTION_RATE >= ori(periodFinish)",
            "vETH_REWARD_FRACTION_RATE > ori(periodFinish)",
            "vETH_REWARD_FRACTION_RATE != ori(periodFinish)",
            "vETH_REWARD_FRACTION_RATE >= vUSD_REWARD_FRACTION_RATE",
            "vETH_REWARD_FRACTION_RATE > vUSD_REWARD_FRACTION_RATE",
            "vETH_REWARD_FRACTION_RATE != vUSD_REWARD_FRACTION_RATE",
            "vETH_REWARD_FRACTION_RATE >= ori(Sum(_balances[...]))",
            "vETH_REWARD_FRACTION_RATE > ori(Sum(_balances[...]))",
            "vETH_REWARD_FRACTION_RATE != ori(Sum(_balances[...]))",
            "vETH_REWARD_FRACTION_RATE >= ori(Sum(userRewardPerTokenPaid[...]))",
            "vETH_REWARD_FRACTION_RATE > ori(Sum(userRewardPerTokenPaid[...]))",
            "vETH_REWARD_FRACTION_RATE != ori(Sum(userRewardPerTokenPaid[...]))",
            "vETH_REWARD_FRACTION_RATE >= totalAccumulatedReward",
            "vETH_REWARD_FRACTION_RATE > totalAccumulatedReward",
            "vETH_REWARD_FRACTION_RATE != totalAccumulatedReward",
            "currentEpochReward >= Sum(userRewardPerTokenPaid[...])",
            "currentEpochReward > Sum(userRewardPerTokenPaid[...])",
            "currentEpochReward != Sum(userRewardPerTokenPaid[...])",
            "currentEpochReward >= ori(Sum(rewards[...]))",
            "currentEpochReward > ori(Sum(rewards[...]))",
            "currentEpochReward != ori(Sum(rewards[...]))",
            "currentEpochReward >= Sum(lastStakeTimes[...])",
            "currentEpochReward > Sum(lastStakeTimes[...])",
            "currentEpochReward != Sum(lastStakeTimes[...])",
            "currentEpochReward >= msg.value",
            "currentEpochReward > msg.value",
            "currentEpochReward != msg.value",
            "currentEpochReward >= Sum(rewards[...])",
            "currentEpochReward > Sum(rewards[...])",
            "currentEpochReward != Sum(rewards[...])",
            "currentEpochReward >= ori(periodFinish)",
            "currentEpochReward > ori(periodFinish)",
            "currentEpochReward != ori(periodFinish)",
            "currentEpochReward >= vUSD_REWARD_FRACTION_RATE",
            "currentEpochReward > vUSD_REWARD_FRACTION_RATE",
            "currentEpochReward != vUSD_REWARD_FRACTION_RATE",
            "currentEpochReward >= ori(Sum(_balances[...]))",
            "currentEpochReward > ori(Sum(_balances[...]))",
            "currentEpochReward != ori(Sum(_balances[...]))",
            "currentEpochReward >= ori(Sum(userRewardPerTokenPaid[...]))",
            "currentEpochReward > ori(Sum(userRewardPerTokenPaid[...]))",
            "currentEpochReward != ori(Sum(userRewardPerTokenPaid[...]))",
            "currentEpochReward >= totalAccumulatedReward",
            "currentEpochReward > totalAccumulatedReward",
            "currentEpochReward != totalAccumulatedReward",
            "Sum(userRewardPerTokenPaid[...]) == ori(Sum(rewards[...]))",
            "Sum(userRewardPerTokenPaid[...]) >= ori(Sum(rewards[...]))",
            "Sum(userRewardPerTokenPaid[...]) <= ori(Sum(rewards[...]))",
            "Sum(userRewardPerTokenPaid[...]) == Sum(lastStakeTimes[...])",
            "Sum(userRewardPerTokenPaid[...]) >= Sum(lastStakeTimes[...])",
            "Sum(userRewardPerTokenPaid[...]) <= Sum(lastStakeTimes[...])",
            "Sum(userRewardPerTokenPaid[...]) == msg.value",
            "Sum(userRewardPerTokenPaid[...]) >= msg.value",
            "Sum(userRewardPerTokenPaid[...]) <= msg.value",
            "Sum(userRewardPerTokenPaid[...]) == Sum(rewards[...])",
            "Sum(userRewardPerTokenPaid[...]) >= Sum(rewards[...])",
            "Sum(userRewardPerTokenPaid[...]) <= Sum(rewards[...])",
            "Sum(userRewardPerTokenPaid[...]) == ori(periodFinish)",
            "Sum(userRewardPerTokenPaid[...]) >= ori(periodFinish)",
            "Sum(userRewardPerTokenPaid[...]) <= ori(periodFinish)",
            "Sum(userRewardPerTokenPaid[...]) <= vUSD_REWARD_FRACTION_RATE",
            "Sum(userRewardPerTokenPaid[...]) < vUSD_REWARD_FRACTION_RATE",
            "Sum(userRewardPerTokenPaid[...]) != vUSD_REWARD_FRACTION_RATE",
            "Sum(userRewardPerTokenPaid[...]) == ori(Sum(_balances[...]))",
            "Sum(userRewardPerTokenPaid[...]) >= ori(Sum(_balances[...]))",
            "Sum(userRewardPerTokenPaid[...]) <= ori(Sum(_balances[...]))",
            "Sum(userRewardPerTokenPaid[...]) == ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(userRewardPerTokenPaid[...]) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(userRewardPerTokenPaid[...]) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(userRewardPerTokenPaid[...]) == totalAccumulatedReward",
            "Sum(userRewardPerTokenPaid[...]) >= totalAccumulatedReward",
            "Sum(userRewardPerTokenPaid[...]) <= totalAccumulatedReward",
            "_rewardReferral != vETH",
            "ori(Sum(rewards[...])) == Sum(lastStakeTimes[...])",
            "ori(Sum(rewards[...])) >= Sum(lastStakeTimes[...])",
            "ori(Sum(rewards[...])) <= Sum(lastStakeTimes[...])",
            "ori(Sum(rewards[...])) == Sum(rewards[...])",
            "ori(Sum(rewards[...])) >= Sum(rewards[...])",
            "ori(Sum(rewards[...])) <= Sum(rewards[...])",
            "ori(Sum(rewards[...])) <= vUSD_REWARD_FRACTION_RATE",
            "ori(Sum(rewards[...])) < vUSD_REWARD_FRACTION_RATE",
            "ori(Sum(rewards[...])) != vUSD_REWARD_FRACTION_RATE",
            "ori(Sum(rewards[...])) == totalAccumulatedReward",
            "ori(Sum(rewards[...])) >= totalAccumulatedReward",
            "ori(Sum(rewards[...])) <= totalAccumulatedReward",
            "ori(rewardReferral) != vETH",
            "ori(vUSD) != vETH",
            "Sum(lastStakeTimes[...]) == msg.value",
            "Sum(lastStakeTimes[...]) >= msg.value",
            "Sum(lastStakeTimes[...]) <= msg.value",
            "Sum(lastStakeTimes[...]) == Sum(rewards[...])",
            "Sum(lastStakeTimes[...]) >= Sum(rewards[...])",
            "Sum(lastStakeTimes[...]) <= Sum(rewards[...])",
            "Sum(lastStakeTimes[...]) == ori(periodFinish)",
            "Sum(lastStakeTimes[...]) >= ori(periodFinish)",
            "Sum(lastStakeTimes[...]) <= ori(periodFinish)",
            "Sum(lastStakeTimes[...]) <= vUSD_REWARD_FRACTION_RATE",
            "Sum(lastStakeTimes[...]) < vUSD_REWARD_FRACTION_RATE",
            "Sum(lastStakeTimes[...]) != vUSD_REWARD_FRACTION_RATE",
            "Sum(lastStakeTimes[...]) == ori(Sum(_balances[...]))",
            "Sum(lastStakeTimes[...]) >= ori(Sum(_balances[...]))",
            "Sum(lastStakeTimes[...]) <= ori(Sum(_balances[...]))",
            "Sum(lastStakeTimes[...]) == ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(lastStakeTimes[...]) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(lastStakeTimes[...]) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(lastStakeTimes[...]) == totalAccumulatedReward",
            "Sum(lastStakeTimes[...]) >= totalAccumulatedReward",
            "Sum(lastStakeTimes[...]) <= totalAccumulatedReward",
            "msg.value == Sum(rewards[...])",
            "msg.value >= Sum(rewards[...])",
            "msg.value <= Sum(rewards[...])",
            "msg.value <= vUSD_REWARD_FRACTION_RATE",
            "msg.value < vUSD_REWARD_FRACTION_RATE",
            "msg.value != vUSD_REWARD_FRACTION_RATE",
            "msg.value == totalAccumulatedReward",
            "msg.value >= totalAccumulatedReward",
            "msg.value <= totalAccumulatedReward",
            "vETH == ori(vETH)",
            "Sum(rewards[...]) == ori(periodFinish)",
            "Sum(rewards[...]) >= ori(periodFinish)",
            "Sum(rewards[...]) <= ori(periodFinish)",
            "Sum(rewards[...]) <= vUSD_REWARD_FRACTION_RATE",
            "Sum(rewards[...]) < vUSD_REWARD_FRACTION_RATE",
            "Sum(rewards[...]) != vUSD_REWARD_FRACTION_RATE",
            "Sum(rewards[...]) == ori(Sum(_balances[...]))",
            "Sum(rewards[...]) >= ori(Sum(_balances[...]))",
            "Sum(rewards[...]) <= ori(Sum(_balances[...]))",
            "Sum(rewards[...]) == ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(rewards[...]) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(rewards[...]) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(rewards[...]) == totalAccumulatedReward",
            "Sum(rewards[...]) >= totalAccumulatedReward",
            "Sum(rewards[...]) <= totalAccumulatedReward",
            "ori(periodFinish) <= vUSD_REWARD_FRACTION_RATE",
            "ori(periodFinish) < vUSD_REWARD_FRACTION_RATE",
            "ori(periodFinish) != vUSD_REWARD_FRACTION_RATE",
            "ori(periodFinish) == totalAccumulatedReward",
            "ori(periodFinish) >= totalAccumulatedReward",
            "ori(periodFinish) <= totalAccumulatedReward",
            "vUSD_REWARD_FRACTION_RATE >= ori(Sum(_balances[...]))",
            "vUSD_REWARD_FRACTION_RATE > ori(Sum(_balances[...]))",
            "vUSD_REWARD_FRACTION_RATE != ori(Sum(_balances[...]))",
            "vUSD_REWARD_FRACTION_RATE >= ori(Sum(userRewardPerTokenPaid[...]))",
            "vUSD_REWARD_FRACTION_RATE > ori(Sum(userRewardPerTokenPaid[...]))",
            "vUSD_REWARD_FRACTION_RATE != ori(Sum(userRewardPerTokenPaid[...]))",
            "vUSD_REWARD_FRACTION_RATE >= totalAccumulatedReward",
            "vUSD_REWARD_FRACTION_RATE > totalAccumulatedReward",
            "vUSD_REWARD_FRACTION_RATE != totalAccumulatedReward",
            "ori(Sum(_balances[...])) == totalAccumulatedReward",
            "ori(Sum(_balances[...])) >= totalAccumulatedReward",
            "ori(Sum(_balances[...])) <= totalAccumulatedReward",
            "ori(Sum(userRewardPerTokenPaid[...])) == totalAccumulatedReward",
            "ori(Sum(userRewardPerTokenPaid[...])) >= totalAccumulatedReward",
            "ori(Sum(userRewardPerTokenPaid[...])) <= totalAccumulatedReward"
        ],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "setRewardReferral(_rewardReferral)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "setRewardVote(_rewardVote)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [
            "ori(currentEpochReward) > 0",
            "ori(currentEpochReward) == 63000000000000000000000",
            "ori(currentEpochReward) one of [63000000000000000000000]",
            "_rewardVote != 0",
            "msg.sender != 0",
            "ori(_owner) != 0",
            "ori(vETH_REWARD_FRACTION_RATE) > 0",
            "ori(vETH_REWARD_FRACTION_RATE) == 21000000000000",
            "ori(vETH_REWARD_FRACTION_RATE) one of [21000000000000]",
            "ori(rewardVote) == 0",
            "ori(_totalSupply) == 0",
            "ori(_totalSupply) one of [0]",
            "ori(lastUpdateTime) == 0",
            "ori(lastUpdateTime) one of [0]",
            "ori(totalAccumulatedReward) == 0",
            "ori(totalAccumulatedReward) one of [0]",
            "ori(currentEpoch) == 0",
            "ori(currentEpoch) one of [0]",
            "ori(rewardRate) == 0",
            "ori(rewardRate) one of [0]",
            "ori(vUSD_REWARD_FRACTION_RATE) > 0",
            "ori(vUSD_REWARD_FRACTION_RATE) == 21000000000",
            "ori(vUSD_REWARD_FRACTION_RATE) one of [21000000000]",
            "ori(rewardPerTokenStored) == 0",
            "ori(rewardPerTokenStored) one of [0]",
            "ori(Sum(lastStakeTimes[...])) == 0",
            "ori(Sum(lastStakeTimes[...])) one of [0]",
            "ori(Sum(accumulatedStakingPower[...])) == 0",
            "ori(Sum(accumulatedStakingPower[...])) one of [0]",
            "ori(yfv) != 0",
            "ori(starttime) > 0",
            "ori(starttime) == 1598018400",
            "ori(starttime) one of [1598018400]",
            "ori(Sum(rewards[...])) == 0",
            "ori(Sum(rewards[...])) one of [0]",
            "ori(rewardReferral) != 0",
            "ori(vUSD) != 0",
            "msg.value == 0",
            "msg.value one of [0]",
            "ori(periodFinish) == 0",
            "ori(periodFinish) one of [0]",
            "ori(vETH) != 0",
            "ori(Sum(_balances[...])) == 0",
            "ori(Sum(_balances[...])) one of [0]",
            "ori(Sum(userRewardPerTokenPaid[...])) == 0",
            "ori(Sum(userRewardPerTokenPaid[...])) one of [0]",
            "ori(currentEpochReward) >= ori(vETH_REWARD_FRACTION_RATE)",
            "ori(currentEpochReward) > ori(vETH_REWARD_FRACTION_RATE)",
            "ori(currentEpochReward) != ori(vETH_REWARD_FRACTION_RATE)",
            "ori(currentEpochReward) >= ori(_totalSupply)",
            "ori(currentEpochReward) > ori(_totalSupply)",
            "ori(currentEpochReward) != ori(_totalSupply)",
            "ori(currentEpochReward) >= ori(lastUpdateTime)",
            "ori(currentEpochReward) > ori(lastUpdateTime)",
            "ori(currentEpochReward) != ori(lastUpdateTime)",
            "ori(currentEpochReward) >= ori(totalAccumulatedReward)",
            "ori(currentEpochReward) > ori(totalAccumulatedReward)",
            "ori(currentEpochReward) != ori(totalAccumulatedReward)",
            "ori(currentEpochReward) >= ori(currentEpoch)",
            "ori(currentEpochReward) > ori(currentEpoch)",
            "ori(currentEpochReward) != ori(currentEpoch)",
            "ori(currentEpochReward) >= ori(rewardRate)",
            "ori(currentEpochReward) > ori(rewardRate)",
            "ori(currentEpochReward) != ori(rewardRate)",
            "ori(currentEpochReward) >= ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(currentEpochReward) > ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(currentEpochReward) != ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(currentEpochReward) >= ori(rewardPerTokenStored)",
            "ori(currentEpochReward) > ori(rewardPerTokenStored)",
            "ori(currentEpochReward) != ori(rewardPerTokenStored)",
            "ori(currentEpochReward) >= ori(Sum(lastStakeTimes[...]))",
            "ori(currentEpochReward) > ori(Sum(lastStakeTimes[...]))",
            "ori(currentEpochReward) != ori(Sum(lastStakeTimes[...]))",
            "ori(currentEpochReward) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(currentEpochReward) > ori(Sum(accumulatedStakingPower[...]))",
            "ori(currentEpochReward) != ori(Sum(accumulatedStakingPower[...]))",
            "ori(currentEpochReward) >= ori(starttime)",
            "ori(currentEpochReward) > ori(starttime)",
            "ori(currentEpochReward) != ori(starttime)",
            "ori(currentEpochReward) >= ori(Sum(rewards[...]))",
            "ori(currentEpochReward) > ori(Sum(rewards[...]))",
            "ori(currentEpochReward) != ori(Sum(rewards[...]))",
            "ori(currentEpochReward) >= msg.value",
            "ori(currentEpochReward) > msg.value",
            "ori(currentEpochReward) != msg.value",
            "ori(currentEpochReward) >= ori(periodFinish)",
            "ori(currentEpochReward) > ori(periodFinish)",
            "ori(currentEpochReward) != ori(periodFinish)",
            "ori(currentEpochReward) >= ori(Sum(_balances[...]))",
            "ori(currentEpochReward) > ori(Sum(_balances[...]))",
            "ori(currentEpochReward) != ori(Sum(_balances[...]))",
            "ori(currentEpochReward) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(currentEpochReward) > ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(currentEpochReward) != ori(Sum(userRewardPerTokenPaid[...]))",
            "_rewardVote != msg.sender",
            "_rewardVote != ori(_owner)",
            "_rewardVote != ori(rewardVote)",
            "_rewardVote != ori(yfv)",
            "_rewardVote != ori(rewardReferral)",
            "_rewardVote != ori(vUSD)",
            "_rewardVote != ori(vETH)",
            "msg.sender == ori(_owner)",
            "msg.sender != ori(rewardVote)",
            "msg.sender != ori(yfv)",
            "msg.sender != ori(rewardReferral)",
            "msg.sender != ori(vUSD)",
            "msg.sender != ori(vETH)",
            "ori(_owner) != ori(rewardVote)",
            "ori(_owner) != ori(yfv)",
            "ori(_owner) != ori(rewardReferral)",
            "ori(_owner) != ori(vUSD)",
            "ori(_owner) != ori(vETH)",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(_totalSupply)",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(_totalSupply)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(_totalSupply)",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(lastUpdateTime)",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(lastUpdateTime)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(lastUpdateTime)",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(totalAccumulatedReward)",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(totalAccumulatedReward)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(totalAccumulatedReward)",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(currentEpoch)",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(currentEpoch)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(currentEpoch)",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(rewardRate)",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(rewardRate)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(rewardRate)",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(rewardPerTokenStored)",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(rewardPerTokenStored)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(rewardPerTokenStored)",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(Sum(lastStakeTimes[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(Sum(lastStakeTimes[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(Sum(lastStakeTimes[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(Sum(accumulatedStakingPower[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(Sum(accumulatedStakingPower[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(starttime)",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(starttime)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(starttime)",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(Sum(rewards[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(Sum(rewards[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(Sum(rewards[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) >= msg.value",
            "ori(vETH_REWARD_FRACTION_RATE) > msg.value",
            "ori(vETH_REWARD_FRACTION_RATE) != msg.value",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(periodFinish)",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(periodFinish)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(periodFinish)",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(Sum(_balances[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(Sum(_balances[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(Sum(_balances[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(rewardVote) != ori(yfv)",
            "ori(rewardVote) != ori(rewardReferral)",
            "ori(rewardVote) != ori(vUSD)",
            "ori(rewardVote) != ori(vETH)",
            "ori(_totalSupply) == ori(lastUpdateTime)",
            "ori(_totalSupply) >= ori(lastUpdateTime)",
            "ori(_totalSupply) <= ori(lastUpdateTime)",
            "ori(_totalSupply) == ori(totalAccumulatedReward)",
            "ori(_totalSupply) >= ori(totalAccumulatedReward)",
            "ori(_totalSupply) <= ori(totalAccumulatedReward)",
            "ori(_totalSupply) == ori(currentEpoch)",
            "ori(_totalSupply) >= ori(currentEpoch)",
            "ori(_totalSupply) <= ori(currentEpoch)",
            "ori(_totalSupply) == ori(rewardRate)",
            "ori(_totalSupply) >= ori(rewardRate)",
            "ori(_totalSupply) <= ori(rewardRate)",
            "ori(_totalSupply) <= ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(_totalSupply) < ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(_totalSupply) != ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(_totalSupply) == ori(rewardPerTokenStored)",
            "ori(_totalSupply) >= ori(rewardPerTokenStored)",
            "ori(_totalSupply) <= ori(rewardPerTokenStored)",
            "ori(_totalSupply) == ori(Sum(lastStakeTimes[...]))",
            "ori(_totalSupply) >= ori(Sum(lastStakeTimes[...]))",
            "ori(_totalSupply) <= ori(Sum(lastStakeTimes[...]))",
            "ori(_totalSupply) == ori(Sum(accumulatedStakingPower[...]))",
            "ori(_totalSupply) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(_totalSupply) <= ori(Sum(accumulatedStakingPower[...]))",
            "ori(_totalSupply) <= ori(starttime)",
            "ori(_totalSupply) < ori(starttime)",
            "ori(_totalSupply) != ori(starttime)",
            "ori(_totalSupply) == ori(Sum(rewards[...]))",
            "ori(_totalSupply) >= ori(Sum(rewards[...]))",
            "ori(_totalSupply) <= ori(Sum(rewards[...]))",
            "ori(_totalSupply) == msg.value",
            "ori(_totalSupply) >= msg.value",
            "ori(_totalSupply) <= msg.value",
            "ori(_totalSupply) == ori(periodFinish)",
            "ori(_totalSupply) >= ori(periodFinish)",
            "ori(_totalSupply) <= ori(periodFinish)",
            "ori(_totalSupply) == ori(Sum(_balances[...]))",
            "ori(_totalSupply) >= ori(Sum(_balances[...]))",
            "ori(_totalSupply) <= ori(Sum(_balances[...]))",
            "ori(_totalSupply) == ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(_totalSupply) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(_totalSupply) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(lastUpdateTime) == ori(totalAccumulatedReward)",
            "ori(lastUpdateTime) >= ori(totalAccumulatedReward)",
            "ori(lastUpdateTime) <= ori(totalAccumulatedReward)",
            "ori(lastUpdateTime) == ori(currentEpoch)",
            "ori(lastUpdateTime) >= ori(currentEpoch)",
            "ori(lastUpdateTime) <= ori(currentEpoch)",
            "ori(lastUpdateTime) == ori(rewardRate)",
            "ori(lastUpdateTime) >= ori(rewardRate)",
            "ori(lastUpdateTime) <= ori(rewardRate)",
            "ori(lastUpdateTime) <= ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(lastUpdateTime) < ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(lastUpdateTime) != ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(lastUpdateTime) == ori(rewardPerTokenStored)",
            "ori(lastUpdateTime) >= ori(rewardPerTokenStored)",
            "ori(lastUpdateTime) <= ori(rewardPerTokenStored)",
            "ori(lastUpdateTime) == ori(Sum(lastStakeTimes[...]))",
            "ori(lastUpdateTime) >= ori(Sum(lastStakeTimes[...]))",
            "ori(lastUpdateTime) <= ori(Sum(lastStakeTimes[...]))",
            "ori(lastUpdateTime) == ori(Sum(accumulatedStakingPower[...]))",
            "ori(lastUpdateTime) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(lastUpdateTime) <= ori(Sum(accumulatedStakingPower[...]))",
            "ori(lastUpdateTime) <= ori(starttime)",
            "ori(lastUpdateTime) < ori(starttime)",
            "ori(lastUpdateTime) != ori(starttime)",
            "ori(lastUpdateTime) == ori(Sum(rewards[...]))",
            "ori(lastUpdateTime) >= ori(Sum(rewards[...]))",
            "ori(lastUpdateTime) <= ori(Sum(rewards[...]))",
            "ori(lastUpdateTime) == msg.value",
            "ori(lastUpdateTime) >= msg.value",
            "ori(lastUpdateTime) <= msg.value",
            "ori(lastUpdateTime) == ori(periodFinish)",
            "ori(lastUpdateTime) >= ori(periodFinish)",
            "ori(lastUpdateTime) <= ori(periodFinish)",
            "ori(lastUpdateTime) == ori(Sum(_balances[...]))",
            "ori(lastUpdateTime) >= ori(Sum(_balances[...]))",
            "ori(lastUpdateTime) <= ori(Sum(_balances[...]))",
            "ori(lastUpdateTime) == ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(lastUpdateTime) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(lastUpdateTime) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(totalAccumulatedReward) == ori(currentEpoch)",
            "ori(totalAccumulatedReward) >= ori(currentEpoch)",
            "ori(totalAccumulatedReward) <= ori(currentEpoch)",
            "ori(totalAccumulatedReward) == ori(rewardRate)",
            "ori(totalAccumulatedReward) >= ori(rewardRate)",
            "ori(totalAccumulatedReward) <= ori(rewardRate)",
            "ori(totalAccumulatedReward) <= ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(totalAccumulatedReward) < ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(totalAccumulatedReward) != ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(totalAccumulatedReward) == ori(rewardPerTokenStored)",
            "ori(totalAccumulatedReward) >= ori(rewardPerTokenStored)",
            "ori(totalAccumulatedReward) <= ori(rewardPerTokenStored)",
            "ori(totalAccumulatedReward) == ori(Sum(lastStakeTimes[...]))",
            "ori(totalAccumulatedReward) >= ori(Sum(lastStakeTimes[...]))",
            "ori(totalAccumulatedReward) <= ori(Sum(lastStakeTimes[...]))",
            "ori(totalAccumulatedReward) == ori(Sum(accumulatedStakingPower[...]))",
            "ori(totalAccumulatedReward) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(totalAccumulatedReward) <= ori(Sum(accumulatedStakingPower[...]))",
            "ori(totalAccumulatedReward) <= ori(starttime)",
            "ori(totalAccumulatedReward) < ori(starttime)",
            "ori(totalAccumulatedReward) != ori(starttime)",
            "ori(totalAccumulatedReward) == ori(Sum(rewards[...]))",
            "ori(totalAccumulatedReward) >= ori(Sum(rewards[...]))",
            "ori(totalAccumulatedReward) <= ori(Sum(rewards[...]))",
            "ori(totalAccumulatedReward) == msg.value",
            "ori(totalAccumulatedReward) >= msg.value",
            "ori(totalAccumulatedReward) <= msg.value",
            "ori(totalAccumulatedReward) == ori(periodFinish)",
            "ori(totalAccumulatedReward) >= ori(periodFinish)",
            "ori(totalAccumulatedReward) <= ori(periodFinish)",
            "ori(totalAccumulatedReward) == ori(Sum(_balances[...]))",
            "ori(totalAccumulatedReward) >= ori(Sum(_balances[...]))",
            "ori(totalAccumulatedReward) <= ori(Sum(_balances[...]))",
            "ori(totalAccumulatedReward) == ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(totalAccumulatedReward) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(totalAccumulatedReward) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(currentEpoch) == ori(rewardRate)",
            "ori(currentEpoch) >= ori(rewardRate)",
            "ori(currentEpoch) <= ori(rewardRate)",
            "ori(currentEpoch) <= ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(currentEpoch) < ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(currentEpoch) != ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(currentEpoch) == ori(rewardPerTokenStored)",
            "ori(currentEpoch) >= ori(rewardPerTokenStored)",
            "ori(currentEpoch) <= ori(rewardPerTokenStored)",
            "ori(currentEpoch) == ori(Sum(lastStakeTimes[...]))",
            "ori(currentEpoch) >= ori(Sum(lastStakeTimes[...]))",
            "ori(currentEpoch) <= ori(Sum(lastStakeTimes[...]))",
            "ori(currentEpoch) == ori(Sum(accumulatedStakingPower[...]))",
            "ori(currentEpoch) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(currentEpoch) <= ori(Sum(accumulatedStakingPower[...]))",
            "ori(currentEpoch) <= ori(starttime)",
            "ori(currentEpoch) < ori(starttime)",
            "ori(currentEpoch) != ori(starttime)",
            "ori(currentEpoch) == ori(Sum(rewards[...]))",
            "ori(currentEpoch) >= ori(Sum(rewards[...]))",
            "ori(currentEpoch) <= ori(Sum(rewards[...]))",
            "ori(currentEpoch) == msg.value",
            "ori(currentEpoch) >= msg.value",
            "ori(currentEpoch) <= msg.value",
            "ori(currentEpoch) == ori(periodFinish)",
            "ori(currentEpoch) >= ori(periodFinish)",
            "ori(currentEpoch) <= ori(periodFinish)",
            "ori(currentEpoch) == ori(Sum(_balances[...]))",
            "ori(currentEpoch) >= ori(Sum(_balances[...]))",
            "ori(currentEpoch) <= ori(Sum(_balances[...]))",
            "ori(currentEpoch) == ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(currentEpoch) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(currentEpoch) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(rewardRate) <= ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(rewardRate) < ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(rewardRate) != ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(rewardRate) == ori(rewardPerTokenStored)",
            "ori(rewardRate) >= ori(rewardPerTokenStored)",
            "ori(rewardRate) <= ori(rewardPerTokenStored)",
            "ori(rewardRate) == ori(Sum(lastStakeTimes[...]))",
            "ori(rewardRate) >= ori(Sum(lastStakeTimes[...]))",
            "ori(rewardRate) <= ori(Sum(lastStakeTimes[...]))",
            "ori(rewardRate) == ori(Sum(accumulatedStakingPower[...]))",
            "ori(rewardRate) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(rewardRate) <= ori(Sum(accumulatedStakingPower[...]))",
            "ori(rewardRate) <= ori(starttime)",
            "ori(rewardRate) < ori(starttime)",
            "ori(rewardRate) != ori(starttime)",
            "ori(rewardRate) == ori(Sum(rewards[...]))",
            "ori(rewardRate) >= ori(Sum(rewards[...]))",
            "ori(rewardRate) <= ori(Sum(rewards[...]))",
            "ori(rewardRate) == msg.value",
            "ori(rewardRate) >= msg.value",
            "ori(rewardRate) <= msg.value",
            "ori(rewardRate) == ori(periodFinish)",
            "ori(rewardRate) >= ori(periodFinish)",
            "ori(rewardRate) <= ori(periodFinish)",
            "ori(rewardRate) == ori(Sum(_balances[...]))",
            "ori(rewardRate) >= ori(Sum(_balances[...]))",
            "ori(rewardRate) <= ori(Sum(_balances[...]))",
            "ori(rewardRate) == ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(rewardRate) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(rewardRate) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) >= ori(rewardPerTokenStored)",
            "ori(vUSD_REWARD_FRACTION_RATE) > ori(rewardPerTokenStored)",
            "ori(vUSD_REWARD_FRACTION_RATE) != ori(rewardPerTokenStored)",
            "ori(vUSD_REWARD_FRACTION_RATE) >= ori(Sum(lastStakeTimes[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) > ori(Sum(lastStakeTimes[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) != ori(Sum(lastStakeTimes[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) > ori(Sum(accumulatedStakingPower[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) != ori(Sum(accumulatedStakingPower[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) >= ori(starttime)",
            "ori(vUSD_REWARD_FRACTION_RATE) > ori(starttime)",
            "ori(vUSD_REWARD_FRACTION_RATE) != ori(starttime)",
            "ori(vUSD_REWARD_FRACTION_RATE) >= ori(Sum(rewards[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) > ori(Sum(rewards[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) != ori(Sum(rewards[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) >= msg.value",
            "ori(vUSD_REWARD_FRACTION_RATE) > msg.value",
            "ori(vUSD_REWARD_FRACTION_RATE) != msg.value",
            "ori(vUSD_REWARD_FRACTION_RATE) >= ori(periodFinish)",
            "ori(vUSD_REWARD_FRACTION_RATE) > ori(periodFinish)",
            "ori(vUSD_REWARD_FRACTION_RATE) != ori(periodFinish)",
            "ori(vUSD_REWARD_FRACTION_RATE) >= ori(Sum(_balances[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) > ori(Sum(_balances[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) != ori(Sum(_balances[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) > ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) != ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(rewardPerTokenStored) == ori(Sum(lastStakeTimes[...]))",
            "ori(rewardPerTokenStored) >= ori(Sum(lastStakeTimes[...]))",
            "ori(rewardPerTokenStored) <= ori(Sum(lastStakeTimes[...]))",
            "ori(rewardPerTokenStored) == ori(Sum(accumulatedStakingPower[...]))",
            "ori(rewardPerTokenStored) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(rewardPerTokenStored) <= ori(Sum(accumulatedStakingPower[...]))",
            "ori(rewardPerTokenStored) <= ori(starttime)",
            "ori(rewardPerTokenStored) < ori(starttime)",
            "ori(rewardPerTokenStored) != ori(starttime)",
            "ori(rewardPerTokenStored) == ori(Sum(rewards[...]))",
            "ori(rewardPerTokenStored) >= ori(Sum(rewards[...]))",
            "ori(rewardPerTokenStored) <= ori(Sum(rewards[...]))",
            "ori(rewardPerTokenStored) == msg.value",
            "ori(rewardPerTokenStored) >= msg.value",
            "ori(rewardPerTokenStored) <= msg.value",
            "ori(rewardPerTokenStored) == ori(periodFinish)",
            "ori(rewardPerTokenStored) >= ori(periodFinish)",
            "ori(rewardPerTokenStored) <= ori(periodFinish)",
            "ori(rewardPerTokenStored) == ori(Sum(_balances[...]))",
            "ori(rewardPerTokenStored) >= ori(Sum(_balances[...]))",
            "ori(rewardPerTokenStored) <= ori(Sum(_balances[...]))",
            "ori(rewardPerTokenStored) == ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(rewardPerTokenStored) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(rewardPerTokenStored) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(lastStakeTimes[...])) == ori(Sum(accumulatedStakingPower[...]))",
            "ori(Sum(lastStakeTimes[...])) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(Sum(lastStakeTimes[...])) <= ori(Sum(accumulatedStakingPower[...]))",
            "ori(Sum(lastStakeTimes[...])) <= ori(starttime)",
            "ori(Sum(lastStakeTimes[...])) < ori(starttime)",
            "ori(Sum(lastStakeTimes[...])) != ori(starttime)",
            "ori(Sum(lastStakeTimes[...])) == ori(Sum(rewards[...]))",
            "ori(Sum(lastStakeTimes[...])) >= ori(Sum(rewards[...]))",
            "ori(Sum(lastStakeTimes[...])) <= ori(Sum(rewards[...]))",
            "ori(Sum(lastStakeTimes[...])) == msg.value",
            "ori(Sum(lastStakeTimes[...])) >= msg.value",
            "ori(Sum(lastStakeTimes[...])) <= msg.value",
            "ori(Sum(lastStakeTimes[...])) == ori(periodFinish)",
            "ori(Sum(lastStakeTimes[...])) >= ori(periodFinish)",
            "ori(Sum(lastStakeTimes[...])) <= ori(periodFinish)",
            "ori(Sum(lastStakeTimes[...])) == ori(Sum(_balances[...]))",
            "ori(Sum(lastStakeTimes[...])) >= ori(Sum(_balances[...]))",
            "ori(Sum(lastStakeTimes[...])) <= ori(Sum(_balances[...]))",
            "ori(Sum(lastStakeTimes[...])) == ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(lastStakeTimes[...])) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(lastStakeTimes[...])) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(accumulatedStakingPower[...])) <= ori(starttime)",
            "ori(Sum(accumulatedStakingPower[...])) < ori(starttime)",
            "ori(Sum(accumulatedStakingPower[...])) != ori(starttime)",
            "ori(Sum(accumulatedStakingPower[...])) == ori(Sum(rewards[...]))",
            "ori(Sum(accumulatedStakingPower[...])) >= ori(Sum(rewards[...]))",
            "ori(Sum(accumulatedStakingPower[...])) <= ori(Sum(rewards[...]))",
            "ori(Sum(accumulatedStakingPower[...])) == msg.value",
            "ori(Sum(accumulatedStakingPower[...])) >= msg.value",
            "ori(Sum(accumulatedStakingPower[...])) <= msg.value",
            "ori(Sum(accumulatedStakingPower[...])) == ori(periodFinish)",
            "ori(Sum(accumulatedStakingPower[...])) >= ori(periodFinish)",
            "ori(Sum(accumulatedStakingPower[...])) <= ori(periodFinish)",
            "ori(Sum(accumulatedStakingPower[...])) == ori(Sum(_balances[...]))",
            "ori(Sum(accumulatedStakingPower[...])) >= ori(Sum(_balances[...]))",
            "ori(Sum(accumulatedStakingPower[...])) <= ori(Sum(_balances[...]))",
            "ori(Sum(accumulatedStakingPower[...])) == ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(accumulatedStakingPower[...])) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(accumulatedStakingPower[...])) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(yfv) != ori(rewardReferral)",
            "ori(yfv) != ori(vUSD)",
            "ori(yfv) != ori(vETH)",
            "ori(starttime) >= ori(Sum(rewards[...]))",
            "ori(starttime) > ori(Sum(rewards[...]))",
            "ori(starttime) != ori(Sum(rewards[...]))",
            "ori(starttime) >= msg.value",
            "ori(starttime) > msg.value",
            "ori(starttime) != msg.value",
            "ori(starttime) >= ori(periodFinish)",
            "ori(starttime) > ori(periodFinish)",
            "ori(starttime) != ori(periodFinish)",
            "ori(starttime) >= ori(Sum(_balances[...]))",
            "ori(starttime) > ori(Sum(_balances[...]))",
            "ori(starttime) != ori(Sum(_balances[...]))",
            "ori(starttime) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(starttime) > ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(starttime) != ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(rewards[...])) == msg.value",
            "ori(Sum(rewards[...])) >= msg.value",
            "ori(Sum(rewards[...])) <= msg.value",
            "ori(Sum(rewards[...])) == ori(periodFinish)",
            "ori(Sum(rewards[...])) >= ori(periodFinish)",
            "ori(Sum(rewards[...])) <= ori(periodFinish)",
            "ori(Sum(rewards[...])) == ori(Sum(_balances[...]))",
            "ori(Sum(rewards[...])) >= ori(Sum(_balances[...]))",
            "ori(Sum(rewards[...])) <= ori(Sum(_balances[...]))",
            "ori(Sum(rewards[...])) == ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(rewards[...])) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(rewards[...])) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(rewardReferral) != ori(vUSD)",
            "ori(rewardReferral) != ori(vETH)",
            "ori(vUSD) != ori(vETH)",
            "msg.value == ori(periodFinish)",
            "msg.value >= ori(periodFinish)",
            "msg.value <= ori(periodFinish)",
            "msg.value == ori(Sum(_balances[...]))",
            "msg.value >= ori(Sum(_balances[...]))",
            "msg.value <= ori(Sum(_balances[...]))",
            "msg.value == ori(Sum(userRewardPerTokenPaid[...]))",
            "msg.value >= ori(Sum(userRewardPerTokenPaid[...]))",
            "msg.value <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(periodFinish) == ori(Sum(_balances[...]))",
            "ori(periodFinish) >= ori(Sum(_balances[...]))",
            "ori(periodFinish) <= ori(Sum(_balances[...]))",
            "ori(periodFinish) == ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(periodFinish) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(periodFinish) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(_balances[...])) == ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(_balances[...])) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(_balances[...])) <= ori(Sum(userRewardPerTokenPaid[...]))"
        ],
        "postconditions": [
            "Sum(accumulatedStakingPower[...]) == 0",
            "Sum(accumulatedStakingPower[...]) one of [0]",
            "_totalSupply == 0",
            "_totalSupply one of [0]",
            "vUSD != 0",
            "lastUpdateTime == 0",
            "lastUpdateTime one of [0]",
            "rewardVote != 0",
            "currentEpoch == 0",
            "currentEpoch one of [0]",
            "_owner != 0",
            "elem of accumulatedStakingPower[...] is one of [0]",
            "elem of accumulatedStakingPower[...] is one of []",
            "yfv != 0",
            "periodFinish == 0",
            "periodFinish one of [0]",
            "rewardRate == 0",
            "rewardRate one of [0]",
            "elem of lastStakeTimes[...] is one of [0]",
            "elem of lastStakeTimes[...] is one of []",
            "rewardPerTokenStored == 0",
            "rewardPerTokenStored one of [0]",
            "elem of userRewardPerTokenPaid[...] is one of [0]",
            "elem of userRewardPerTokenPaid[...] is one of []",
            "Sum(_balances[...]) == 0",
            "Sum(_balances[...]) one of [0]",
            "elem of _balances[...] is one of [0]",
            "elem of _balances[...] is one of []",
            "rewardReferral != 0",
            "starttime > 0",
            "starttime == 1598018400",
            "starttime one of [1598018400]",
            "vETH_REWARD_FRACTION_RATE > 0",
            "vETH_REWARD_FRACTION_RATE == 21000000000000",
            "vETH_REWARD_FRACTION_RATE one of [21000000000000]",
            "currentEpochReward > 0",
            "currentEpochReward == 63000000000000000000000",
            "currentEpochReward one of [63000000000000000000000]",
            "Sum(userRewardPerTokenPaid[...]) == 0",
            "Sum(userRewardPerTokenPaid[...]) one of [0]",
            "Sum(lastStakeTimes[...]) == 0",
            "Sum(lastStakeTimes[...]) one of [0]",
            "vETH != 0",
            "Sum(rewards[...]) == 0",
            "Sum(rewards[...]) one of [0]",
            "vUSD_REWARD_FRACTION_RATE > 0",
            "vUSD_REWARD_FRACTION_RATE == 21000000000",
            "vUSD_REWARD_FRACTION_RATE one of [21000000000]",
            "elem of rewards[...] is one of [0]",
            "elem of rewards[...] is one of []",
            "totalAccumulatedReward == 0",
            "totalAccumulatedReward one of [0]",
            "Sum(accumulatedStakingPower[...]) == _totalSupply",
            "Sum(accumulatedStakingPower[...]) >= _totalSupply",
            "Sum(accumulatedStakingPower[...]) <= _totalSupply",
            "Sum(accumulatedStakingPower[...]) == lastUpdateTime",
            "Sum(accumulatedStakingPower[...]) >= lastUpdateTime",
            "Sum(accumulatedStakingPower[...]) <= lastUpdateTime",
            "Sum(accumulatedStakingPower[...]) <= ori(currentEpochReward)",
            "Sum(accumulatedStakingPower[...]) < ori(currentEpochReward)",
            "Sum(accumulatedStakingPower[...]) != ori(currentEpochReward)",
            "Sum(accumulatedStakingPower[...]) == currentEpoch",
            "Sum(accumulatedStakingPower[...]) >= currentEpoch",
            "Sum(accumulatedStakingPower[...]) <= currentEpoch",
            "Sum(accumulatedStakingPower[...]) <= ori(vETH_REWARD_FRACTION_RATE)",
            "Sum(accumulatedStakingPower[...]) < ori(vETH_REWARD_FRACTION_RATE)",
            "Sum(accumulatedStakingPower[...]) != ori(vETH_REWARD_FRACTION_RATE)",
            "Sum(accumulatedStakingPower[...]) == periodFinish",
            "Sum(accumulatedStakingPower[...]) >= periodFinish",
            "Sum(accumulatedStakingPower[...]) <= periodFinish",
            "Sum(accumulatedStakingPower[...]) == rewardRate",
            "Sum(accumulatedStakingPower[...]) >= rewardRate",
            "Sum(accumulatedStakingPower[...]) <= rewardRate",
            "Sum(accumulatedStakingPower[...]) == ori(_totalSupply)",
            "Sum(accumulatedStakingPower[...]) >= ori(_totalSupply)",
            "Sum(accumulatedStakingPower[...]) <= ori(_totalSupply)",
            "Sum(accumulatedStakingPower[...]) == ori(lastUpdateTime)",
            "Sum(accumulatedStakingPower[...]) >= ori(lastUpdateTime)",
            "Sum(accumulatedStakingPower[...]) <= ori(lastUpdateTime)",
            "Sum(accumulatedStakingPower[...]) == rewardPerTokenStored",
            "Sum(accumulatedStakingPower[...]) >= rewardPerTokenStored",
            "Sum(accumulatedStakingPower[...]) <= rewardPerTokenStored",
            "Sum(accumulatedStakingPower[...]) == Sum(_balances[...])",
            "Sum(accumulatedStakingPower[...]) >= Sum(_balances[...])",
            "Sum(accumulatedStakingPower[...]) <= Sum(_balances[...])",
            "Sum(accumulatedStakingPower[...]) == ori(totalAccumulatedReward)",
            "Sum(accumulatedStakingPower[...]) >= ori(totalAccumulatedReward)",
            "Sum(accumulatedStakingPower[...]) <= ori(totalAccumulatedReward)",
            "Sum(accumulatedStakingPower[...]) == ori(currentEpoch)",
            "Sum(accumulatedStakingPower[...]) >= ori(currentEpoch)",
            "Sum(accumulatedStakingPower[...]) <= ori(currentEpoch)",
            "Sum(accumulatedStakingPower[...]) == ori(rewardRate)",
            "Sum(accumulatedStakingPower[...]) >= ori(rewardRate)",
            "Sum(accumulatedStakingPower[...]) <= ori(rewardRate)",
            "Sum(accumulatedStakingPower[...]) <= ori(vUSD_REWARD_FRACTION_RATE)",
            "Sum(accumulatedStakingPower[...]) < ori(vUSD_REWARD_FRACTION_RATE)",
            "Sum(accumulatedStakingPower[...]) != ori(vUSD_REWARD_FRACTION_RATE)",
            "Sum(accumulatedStakingPower[...]) == ori(rewardPerTokenStored)",
            "Sum(accumulatedStakingPower[...]) >= ori(rewardPerTokenStored)",
            "Sum(accumulatedStakingPower[...]) <= ori(rewardPerTokenStored)",
            "Sum(accumulatedStakingPower[...]) <= starttime",
            "Sum(accumulatedStakingPower[...]) < starttime",
            "Sum(accumulatedStakingPower[...]) != starttime",
            "Sum(accumulatedStakingPower[...]) == ori(Sum(lastStakeTimes[...]))",
            "Sum(accumulatedStakingPower[...]) >= ori(Sum(lastStakeTimes[...]))",
            "Sum(accumulatedStakingPower[...]) <= ori(Sum(lastStakeTimes[...]))",
            "Sum(accumulatedStakingPower[...]) == ori(Sum(accumulatedStakingPower[...]))",
            "Sum(accumulatedStakingPower[...]) >= ori(Sum(accumulatedStakingPower[...]))",
            "Sum(accumulatedStakingPower[...]) <= ori(Sum(accumulatedStakingPower[...]))",
            "Sum(accumulatedStakingPower[...]) <= ori(starttime)",
            "Sum(accumulatedStakingPower[...]) < ori(starttime)",
            "Sum(accumulatedStakingPower[...]) != ori(starttime)",
            "Sum(accumulatedStakingPower[...]) <= vETH_REWARD_FRACTION_RATE",
            "Sum(accumulatedStakingPower[...]) < vETH_REWARD_FRACTION_RATE",
            "Sum(accumulatedStakingPower[...]) != vETH_REWARD_FRACTION_RATE",
            "Sum(accumulatedStakingPower[...]) <= currentEpochReward",
            "Sum(accumulatedStakingPower[...]) < currentEpochReward",
            "Sum(accumulatedStakingPower[...]) != currentEpochReward",
            "Sum(accumulatedStakingPower[...]) == Sum(userRewardPerTokenPaid[...])",
            "Sum(accumulatedStakingPower[...]) >= Sum(userRewardPerTokenPaid[...])",
            "Sum(accumulatedStakingPower[...]) <= Sum(userRewardPerTokenPaid[...])",
            "Sum(accumulatedStakingPower[...]) == ori(Sum(rewards[...]))",
            "Sum(accumulatedStakingPower[...]) >= ori(Sum(rewards[...]))",
            "Sum(accumulatedStakingPower[...]) <= ori(Sum(rewards[...]))",
            "Sum(accumulatedStakingPower[...]) == Sum(lastStakeTimes[...])",
            "Sum(accumulatedStakingPower[...]) >= Sum(lastStakeTimes[...])",
            "Sum(accumulatedStakingPower[...]) <= Sum(lastStakeTimes[...])",
            "Sum(accumulatedStakingPower[...]) == msg.value",
            "Sum(accumulatedStakingPower[...]) >= msg.value",
            "Sum(accumulatedStakingPower[...]) <= msg.value",
            "Sum(accumulatedStakingPower[...]) == Sum(rewards[...])",
            "Sum(accumulatedStakingPower[...]) >= Sum(rewards[...])",
            "Sum(accumulatedStakingPower[...]) <= Sum(rewards[...])",
            "Sum(accumulatedStakingPower[...]) == ori(periodFinish)",
            "Sum(accumulatedStakingPower[...]) >= ori(periodFinish)",
            "Sum(accumulatedStakingPower[...]) <= ori(periodFinish)",
            "Sum(accumulatedStakingPower[...]) <= vUSD_REWARD_FRACTION_RATE",
            "Sum(accumulatedStakingPower[...]) < vUSD_REWARD_FRACTION_RATE",
            "Sum(accumulatedStakingPower[...]) != vUSD_REWARD_FRACTION_RATE",
            "Sum(accumulatedStakingPower[...]) == ori(Sum(_balances[...]))",
            "Sum(accumulatedStakingPower[...]) >= ori(Sum(_balances[...]))",
            "Sum(accumulatedStakingPower[...]) <= ori(Sum(_balances[...]))",
            "Sum(accumulatedStakingPower[...]) == ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(accumulatedStakingPower[...]) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(accumulatedStakingPower[...]) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(accumulatedStakingPower[...]) == totalAccumulatedReward",
            "Sum(accumulatedStakingPower[...]) >= totalAccumulatedReward",
            "Sum(accumulatedStakingPower[...]) <= totalAccumulatedReward",
            "_totalSupply == lastUpdateTime",
            "_totalSupply >= lastUpdateTime",
            "_totalSupply <= lastUpdateTime",
            "_totalSupply <= ori(currentEpochReward)",
            "_totalSupply < ori(currentEpochReward)",
            "_totalSupply != ori(currentEpochReward)",
            "_totalSupply == currentEpoch",
            "_totalSupply >= currentEpoch",
            "_totalSupply <= currentEpoch",
            "_totalSupply <= ori(vETH_REWARD_FRACTION_RATE)",
            "_totalSupply < ori(vETH_REWARD_FRACTION_RATE)",
            "_totalSupply != ori(vETH_REWARD_FRACTION_RATE)",
            "_totalSupply == periodFinish",
            "_totalSupply >= periodFinish",
            "_totalSupply <= periodFinish",
            "_totalSupply == rewardRate",
            "_totalSupply >= rewardRate",
            "_totalSupply <= rewardRate",
            "_totalSupply == ori(_totalSupply)",
            "_totalSupply >= ori(_totalSupply)",
            "_totalSupply <= ori(_totalSupply)",
            "_totalSupply == ori(lastUpdateTime)",
            "_totalSupply >= ori(lastUpdateTime)",
            "_totalSupply <= ori(lastUpdateTime)",
            "_totalSupply == rewardPerTokenStored",
            "_totalSupply >= rewardPerTokenStored",
            "_totalSupply <= rewardPerTokenStored",
            "_totalSupply == Sum(_balances[...])",
            "_totalSupply >= Sum(_balances[...])",
            "_totalSupply <= Sum(_balances[...])",
            "_totalSupply == ori(totalAccumulatedReward)",
            "_totalSupply >= ori(totalAccumulatedReward)",
            "_totalSupply <= ori(totalAccumulatedReward)",
            "_totalSupply == ori(currentEpoch)",
            "_totalSupply >= ori(currentEpoch)",
            "_totalSupply <= ori(currentEpoch)",
            "_totalSupply == ori(rewardRate)",
            "_totalSupply >= ori(rewardRate)",
            "_totalSupply <= ori(rewardRate)",
            "_totalSupply <= ori(vUSD_REWARD_FRACTION_RATE)",
            "_totalSupply < ori(vUSD_REWARD_FRACTION_RATE)",
            "_totalSupply != ori(vUSD_REWARD_FRACTION_RATE)",
            "_totalSupply == ori(rewardPerTokenStored)",
            "_totalSupply >= ori(rewardPerTokenStored)",
            "_totalSupply <= ori(rewardPerTokenStored)",
            "_totalSupply <= starttime",
            "_totalSupply < starttime",
            "_totalSupply != starttime",
            "_totalSupply == ori(Sum(lastStakeTimes[...]))",
            "_totalSupply >= ori(Sum(lastStakeTimes[...]))",
            "_totalSupply <= ori(Sum(lastStakeTimes[...]))",
            "_totalSupply == ori(Sum(accumulatedStakingPower[...]))",
            "_totalSupply >= ori(Sum(accumulatedStakingPower[...]))",
            "_totalSupply <= ori(Sum(accumulatedStakingPower[...]))",
            "_totalSupply <= ori(starttime)",
            "_totalSupply < ori(starttime)",
            "_totalSupply != ori(starttime)",
            "_totalSupply <= vETH_REWARD_FRACTION_RATE",
            "_totalSupply < vETH_REWARD_FRACTION_RATE",
            "_totalSupply != vETH_REWARD_FRACTION_RATE",
            "_totalSupply <= currentEpochReward",
            "_totalSupply < currentEpochReward",
            "_totalSupply != currentEpochReward",
            "_totalSupply == Sum(userRewardPerTokenPaid[...])",
            "_totalSupply >= Sum(userRewardPerTokenPaid[...])",
            "_totalSupply <= Sum(userRewardPerTokenPaid[...])",
            "_totalSupply == ori(Sum(rewards[...]))",
            "_totalSupply >= ori(Sum(rewards[...]))",
            "_totalSupply <= ori(Sum(rewards[...]))",
            "_totalSupply == Sum(lastStakeTimes[...])",
            "_totalSupply >= Sum(lastStakeTimes[...])",
            "_totalSupply <= Sum(lastStakeTimes[...])",
            "_totalSupply == msg.value",
            "_totalSupply >= msg.value",
            "_totalSupply <= msg.value",
            "_totalSupply == Sum(rewards[...])",
            "_totalSupply >= Sum(rewards[...])",
            "_totalSupply <= Sum(rewards[...])",
            "_totalSupply == ori(periodFinish)",
            "_totalSupply >= ori(periodFinish)",
            "_totalSupply <= ori(periodFinish)",
            "_totalSupply <= vUSD_REWARD_FRACTION_RATE",
            "_totalSupply < vUSD_REWARD_FRACTION_RATE",
            "_totalSupply != vUSD_REWARD_FRACTION_RATE",
            "_totalSupply == ori(Sum(_balances[...]))",
            "_totalSupply >= ori(Sum(_balances[...]))",
            "_totalSupply <= ori(Sum(_balances[...]))",
            "_totalSupply == ori(Sum(userRewardPerTokenPaid[...]))",
            "_totalSupply >= ori(Sum(userRewardPerTokenPaid[...]))",
            "_totalSupply <= ori(Sum(userRewardPerTokenPaid[...]))",
            "_totalSupply == totalAccumulatedReward",
            "_totalSupply >= totalAccumulatedReward",
            "_totalSupply <= totalAccumulatedReward",
            "vUSD != rewardVote",
            "vUSD != _rewardVote",
            "vUSD != msg.sender",
            "vUSD != _owner",
            "vUSD != ori(_owner)",
            "vUSD != yfv",
            "vUSD != ori(rewardVote)",
            "vUSD != rewardReferral",
            "vUSD != ori(yfv)",
            "vUSD != ori(rewardReferral)",
            "vUSD == ori(vUSD)",
            "vUSD != vETH",
            "vUSD != ori(vETH)",
            "lastUpdateTime <= ori(currentEpochReward)",
            "lastUpdateTime < ori(currentEpochReward)",
            "lastUpdateTime != ori(currentEpochReward)",
            "lastUpdateTime == currentEpoch",
            "lastUpdateTime >= currentEpoch",
            "lastUpdateTime <= currentEpoch",
            "lastUpdateTime <= ori(vETH_REWARD_FRACTION_RATE)",
            "lastUpdateTime < ori(vETH_REWARD_FRACTION_RATE)",
            "lastUpdateTime != ori(vETH_REWARD_FRACTION_RATE)",
            "lastUpdateTime == periodFinish",
            "lastUpdateTime >= periodFinish",
            "lastUpdateTime <= periodFinish",
            "lastUpdateTime == rewardRate",
            "lastUpdateTime >= rewardRate",
            "lastUpdateTime <= rewardRate",
            "lastUpdateTime == ori(_totalSupply)",
            "lastUpdateTime >= ori(_totalSupply)",
            "lastUpdateTime <= ori(_totalSupply)",
            "lastUpdateTime == ori(lastUpdateTime)",
            "lastUpdateTime >= ori(lastUpdateTime)",
            "lastUpdateTime <= ori(lastUpdateTime)",
            "lastUpdateTime == rewardPerTokenStored",
            "lastUpdateTime >= rewardPerTokenStored",
            "lastUpdateTime <= rewardPerTokenStored",
            "lastUpdateTime == Sum(_balances[...])",
            "lastUpdateTime >= Sum(_balances[...])",
            "lastUpdateTime <= Sum(_balances[...])",
            "lastUpdateTime == ori(totalAccumulatedReward)",
            "lastUpdateTime >= ori(totalAccumulatedReward)",
            "lastUpdateTime <= ori(totalAccumulatedReward)",
            "lastUpdateTime == ori(currentEpoch)",
            "lastUpdateTime >= ori(currentEpoch)",
            "lastUpdateTime <= ori(currentEpoch)",
            "lastUpdateTime == ori(rewardRate)",
            "lastUpdateTime >= ori(rewardRate)",
            "lastUpdateTime <= ori(rewardRate)",
            "lastUpdateTime <= ori(vUSD_REWARD_FRACTION_RATE)",
            "lastUpdateTime < ori(vUSD_REWARD_FRACTION_RATE)",
            "lastUpdateTime != ori(vUSD_REWARD_FRACTION_RATE)",
            "lastUpdateTime == ori(rewardPerTokenStored)",
            "lastUpdateTime >= ori(rewardPerTokenStored)",
            "lastUpdateTime <= ori(rewardPerTokenStored)",
            "lastUpdateTime <= starttime",
            "lastUpdateTime < starttime",
            "lastUpdateTime != starttime",
            "lastUpdateTime == ori(Sum(lastStakeTimes[...]))",
            "lastUpdateTime >= ori(Sum(lastStakeTimes[...]))",
            "lastUpdateTime <= ori(Sum(lastStakeTimes[...]))",
            "lastUpdateTime == ori(Sum(accumulatedStakingPower[...]))",
            "lastUpdateTime >= ori(Sum(accumulatedStakingPower[...]))",
            "lastUpdateTime <= ori(Sum(accumulatedStakingPower[...]))",
            "lastUpdateTime <= ori(starttime)",
            "lastUpdateTime < ori(starttime)",
            "lastUpdateTime != ori(starttime)",
            "lastUpdateTime <= vETH_REWARD_FRACTION_RATE",
            "lastUpdateTime < vETH_REWARD_FRACTION_RATE",
            "lastUpdateTime != vETH_REWARD_FRACTION_RATE",
            "lastUpdateTime <= currentEpochReward",
            "lastUpdateTime < currentEpochReward",
            "lastUpdateTime != currentEpochReward",
            "lastUpdateTime == Sum(userRewardPerTokenPaid[...])",
            "lastUpdateTime >= Sum(userRewardPerTokenPaid[...])",
            "lastUpdateTime <= Sum(userRewardPerTokenPaid[...])",
            "lastUpdateTime == ori(Sum(rewards[...]))",
            "lastUpdateTime >= ori(Sum(rewards[...]))",
            "lastUpdateTime <= ori(Sum(rewards[...]))",
            "lastUpdateTime == Sum(lastStakeTimes[...])",
            "lastUpdateTime >= Sum(lastStakeTimes[...])",
            "lastUpdateTime <= Sum(lastStakeTimes[...])",
            "lastUpdateTime == msg.value",
            "lastUpdateTime >= msg.value",
            "lastUpdateTime <= msg.value",
            "lastUpdateTime == Sum(rewards[...])",
            "lastUpdateTime >= Sum(rewards[...])",
            "lastUpdateTime <= Sum(rewards[...])",
            "lastUpdateTime == ori(periodFinish)",
            "lastUpdateTime >= ori(periodFinish)",
            "lastUpdateTime <= ori(periodFinish)",
            "lastUpdateTime <= vUSD_REWARD_FRACTION_RATE",
            "lastUpdateTime < vUSD_REWARD_FRACTION_RATE",
            "lastUpdateTime != vUSD_REWARD_FRACTION_RATE",
            "lastUpdateTime == ori(Sum(_balances[...]))",
            "lastUpdateTime >= ori(Sum(_balances[...]))",
            "lastUpdateTime <= ori(Sum(_balances[...]))",
            "lastUpdateTime == ori(Sum(userRewardPerTokenPaid[...]))",
            "lastUpdateTime >= ori(Sum(userRewardPerTokenPaid[...]))",
            "lastUpdateTime <= ori(Sum(userRewardPerTokenPaid[...]))",
            "lastUpdateTime == totalAccumulatedReward",
            "lastUpdateTime >= totalAccumulatedReward",
            "lastUpdateTime <= totalAccumulatedReward",
            "ori(currentEpochReward) >= currentEpoch",
            "ori(currentEpochReward) > currentEpoch",
            "ori(currentEpochReward) != currentEpoch",
            "ori(currentEpochReward) >= periodFinish",
            "ori(currentEpochReward) > periodFinish",
            "ori(currentEpochReward) != periodFinish",
            "ori(currentEpochReward) >= rewardRate",
            "ori(currentEpochReward) > rewardRate",
            "ori(currentEpochReward) != rewardRate",
            "ori(currentEpochReward) >= rewardPerTokenStored",
            "ori(currentEpochReward) > rewardPerTokenStored",
            "ori(currentEpochReward) != rewardPerTokenStored",
            "ori(currentEpochReward) >= Sum(_balances[...])",
            "ori(currentEpochReward) > Sum(_balances[...])",
            "ori(currentEpochReward) != Sum(_balances[...])",
            "ori(currentEpochReward) >= starttime",
            "ori(currentEpochReward) > starttime",
            "ori(currentEpochReward) != starttime",
            "ori(currentEpochReward) >= vETH_REWARD_FRACTION_RATE",
            "ori(currentEpochReward) > vETH_REWARD_FRACTION_RATE",
            "ori(currentEpochReward) != vETH_REWARD_FRACTION_RATE",
            "ori(currentEpochReward) == currentEpochReward",
            "ori(currentEpochReward) >= currentEpochReward",
            "ori(currentEpochReward) <= currentEpochReward",
            "ori(currentEpochReward) >= Sum(userRewardPerTokenPaid[...])",
            "ori(currentEpochReward) > Sum(userRewardPerTokenPaid[...])",
            "ori(currentEpochReward) != Sum(userRewardPerTokenPaid[...])",
            "ori(currentEpochReward) >= Sum(lastStakeTimes[...])",
            "ori(currentEpochReward) > Sum(lastStakeTimes[...])",
            "ori(currentEpochReward) != Sum(lastStakeTimes[...])",
            "ori(currentEpochReward) >= Sum(rewards[...])",
            "ori(currentEpochReward) > Sum(rewards[...])",
            "ori(currentEpochReward) != Sum(rewards[...])",
            "ori(currentEpochReward) >= vUSD_REWARD_FRACTION_RATE",
            "ori(currentEpochReward) > vUSD_REWARD_FRACTION_RATE",
            "ori(currentEpochReward) != vUSD_REWARD_FRACTION_RATE",
            "ori(currentEpochReward) >= totalAccumulatedReward",
            "ori(currentEpochReward) > totalAccumulatedReward",
            "ori(currentEpochReward) != totalAccumulatedReward",
            "rewardVote == _rewardVote",
            "rewardVote != msg.sender",
            "rewardVote != _owner",
            "rewardVote != ori(_owner)",
            "rewardVote != yfv",
            "rewardVote != ori(rewardVote)",
            "rewardVote != rewardReferral",
            "rewardVote != ori(yfv)",
            "rewardVote != ori(rewardReferral)",
            "rewardVote != ori(vUSD)",
            "rewardVote != vETH",
            "rewardVote != ori(vETH)",
            "_rewardVote != _owner",
            "_rewardVote != yfv",
            "_rewardVote != rewardReferral",
            "_rewardVote != vETH",
            "msg.sender == _owner",
            "msg.sender != yfv",
            "msg.sender != rewardReferral",
            "msg.sender != vETH",
            "currentEpoch <= ori(vETH_REWARD_FRACTION_RATE)",
            "currentEpoch < ori(vETH_REWARD_FRACTION_RATE)",
            "currentEpoch != ori(vETH_REWARD_FRACTION_RATE)",
            "currentEpoch == periodFinish",
            "currentEpoch >= periodFinish",
            "currentEpoch <= periodFinish",
            "currentEpoch == rewardRate",
            "currentEpoch >= rewardRate",
            "currentEpoch <= rewardRate",
            "currentEpoch == ori(_totalSupply)",
            "currentEpoch >= ori(_totalSupply)",
            "currentEpoch <= ori(_totalSupply)",
            "currentEpoch == ori(lastUpdateTime)",
            "currentEpoch >= ori(lastUpdateTime)",
            "currentEpoch <= ori(lastUpdateTime)",
            "currentEpoch == rewardPerTokenStored",
            "currentEpoch >= rewardPerTokenStored",
            "currentEpoch <= rewardPerTokenStored",
            "currentEpoch == Sum(_balances[...])",
            "currentEpoch >= Sum(_balances[...])",
            "currentEpoch <= Sum(_balances[...])",
            "currentEpoch == ori(totalAccumulatedReward)",
            "currentEpoch >= ori(totalAccumulatedReward)",
            "currentEpoch <= ori(totalAccumulatedReward)",
            "currentEpoch == ori(currentEpoch)",
            "currentEpoch >= ori(currentEpoch)",
            "currentEpoch <= ori(currentEpoch)",
            "currentEpoch == ori(rewardRate)",
            "currentEpoch >= ori(rewardRate)",
            "currentEpoch <= ori(rewardRate)",
            "currentEpoch <= ori(vUSD_REWARD_FRACTION_RATE)",
            "currentEpoch < ori(vUSD_REWARD_FRACTION_RATE)",
            "currentEpoch != ori(vUSD_REWARD_FRACTION_RATE)",
            "currentEpoch == ori(rewardPerTokenStored)",
            "currentEpoch >= ori(rewardPerTokenStored)",
            "currentEpoch <= ori(rewardPerTokenStored)",
            "currentEpoch <= starttime",
            "currentEpoch < starttime",
            "currentEpoch != starttime",
            "currentEpoch == ori(Sum(lastStakeTimes[...]))",
            "currentEpoch >= ori(Sum(lastStakeTimes[...]))",
            "currentEpoch <= ori(Sum(lastStakeTimes[...]))",
            "currentEpoch == ori(Sum(accumulatedStakingPower[...]))",
            "currentEpoch >= ori(Sum(accumulatedStakingPower[...]))",
            "currentEpoch <= ori(Sum(accumulatedStakingPower[...]))",
            "currentEpoch <= ori(starttime)",
            "currentEpoch < ori(starttime)",
            "currentEpoch != ori(starttime)",
            "currentEpoch <= vETH_REWARD_FRACTION_RATE",
            "currentEpoch < vETH_REWARD_FRACTION_RATE",
            "currentEpoch != vETH_REWARD_FRACTION_RATE",
            "currentEpoch <= currentEpochReward",
            "currentEpoch < currentEpochReward",
            "currentEpoch != currentEpochReward",
            "currentEpoch == Sum(userRewardPerTokenPaid[...])",
            "currentEpoch >= Sum(userRewardPerTokenPaid[...])",
            "currentEpoch <= Sum(userRewardPerTokenPaid[...])",
            "currentEpoch == ori(Sum(rewards[...]))",
            "currentEpoch >= ori(Sum(rewards[...]))",
            "currentEpoch <= ori(Sum(rewards[...]))",
            "currentEpoch == Sum(lastStakeTimes[...])",
            "currentEpoch >= Sum(lastStakeTimes[...])",
            "currentEpoch <= Sum(lastStakeTimes[...])",
            "currentEpoch == msg.value",
            "currentEpoch >= msg.value",
            "currentEpoch <= msg.value",
            "currentEpoch == Sum(rewards[...])",
            "currentEpoch >= Sum(rewards[...])",
            "currentEpoch <= Sum(rewards[...])",
            "currentEpoch == ori(periodFinish)",
            "currentEpoch >= ori(periodFinish)",
            "currentEpoch <= ori(periodFinish)",
            "currentEpoch <= vUSD_REWARD_FRACTION_RATE",
            "currentEpoch < vUSD_REWARD_FRACTION_RATE",
            "currentEpoch != vUSD_REWARD_FRACTION_RATE",
            "currentEpoch == ori(Sum(_balances[...]))",
            "currentEpoch >= ori(Sum(_balances[...]))",
            "currentEpoch <= ori(Sum(_balances[...]))",
            "currentEpoch == ori(Sum(userRewardPerTokenPaid[...]))",
            "currentEpoch >= ori(Sum(userRewardPerTokenPaid[...]))",
            "currentEpoch <= ori(Sum(userRewardPerTokenPaid[...]))",
            "currentEpoch == totalAccumulatedReward",
            "currentEpoch >= totalAccumulatedReward",
            "currentEpoch <= totalAccumulatedReward",
            "_owner == ori(_owner)",
            "_owner != yfv",
            "_owner != ori(rewardVote)",
            "_owner != rewardReferral",
            "_owner != ori(yfv)",
            "_owner != ori(rewardReferral)",
            "_owner != ori(vUSD)",
            "_owner != vETH",
            "_owner != ori(vETH)",
            "ori(_owner) != yfv",
            "ori(_owner) != rewardReferral",
            "ori(_owner) != vETH",
            "ori(vETH_REWARD_FRACTION_RATE) >= periodFinish",
            "ori(vETH_REWARD_FRACTION_RATE) > periodFinish",
            "ori(vETH_REWARD_FRACTION_RATE) != periodFinish",
            "ori(vETH_REWARD_FRACTION_RATE) >= rewardRate",
            "ori(vETH_REWARD_FRACTION_RATE) > rewardRate",
            "ori(vETH_REWARD_FRACTION_RATE) != rewardRate",
            "ori(vETH_REWARD_FRACTION_RATE) >= rewardPerTokenStored",
            "ori(vETH_REWARD_FRACTION_RATE) > rewardPerTokenStored",
            "ori(vETH_REWARD_FRACTION_RATE) != rewardPerTokenStored",
            "ori(vETH_REWARD_FRACTION_RATE) >= Sum(_balances[...])",
            "ori(vETH_REWARD_FRACTION_RATE) > Sum(_balances[...])",
            "ori(vETH_REWARD_FRACTION_RATE) != Sum(_balances[...])",
            "ori(vETH_REWARD_FRACTION_RATE) >= starttime",
            "ori(vETH_REWARD_FRACTION_RATE) > starttime",
            "ori(vETH_REWARD_FRACTION_RATE) != starttime",
            "ori(vETH_REWARD_FRACTION_RATE) == vETH_REWARD_FRACTION_RATE",
            "ori(vETH_REWARD_FRACTION_RATE) >= vETH_REWARD_FRACTION_RATE",
            "ori(vETH_REWARD_FRACTION_RATE) <= vETH_REWARD_FRACTION_RATE",
            "ori(vETH_REWARD_FRACTION_RATE) <= currentEpochReward",
            "ori(vETH_REWARD_FRACTION_RATE) < currentEpochReward",
            "ori(vETH_REWARD_FRACTION_RATE) != currentEpochReward",
            "ori(vETH_REWARD_FRACTION_RATE) >= Sum(userRewardPerTokenPaid[...])",
            "ori(vETH_REWARD_FRACTION_RATE) > Sum(userRewardPerTokenPaid[...])",
            "ori(vETH_REWARD_FRACTION_RATE) != Sum(userRewardPerTokenPaid[...])",
            "ori(vETH_REWARD_FRACTION_RATE) >= Sum(lastStakeTimes[...])",
            "ori(vETH_REWARD_FRACTION_RATE) > Sum(lastStakeTimes[...])",
            "ori(vETH_REWARD_FRACTION_RATE) != Sum(lastStakeTimes[...])",
            "ori(vETH_REWARD_FRACTION_RATE) >= Sum(rewards[...])",
            "ori(vETH_REWARD_FRACTION_RATE) > Sum(rewards[...])",
            "ori(vETH_REWARD_FRACTION_RATE) != Sum(rewards[...])",
            "ori(vETH_REWARD_FRACTION_RATE) >= vUSD_REWARD_FRACTION_RATE",
            "ori(vETH_REWARD_FRACTION_RATE) > vUSD_REWARD_FRACTION_RATE",
            "ori(vETH_REWARD_FRACTION_RATE) != vUSD_REWARD_FRACTION_RATE",
            "ori(vETH_REWARD_FRACTION_RATE) >= totalAccumulatedReward",
            "ori(vETH_REWARD_FRACTION_RATE) > totalAccumulatedReward",
            "ori(vETH_REWARD_FRACTION_RATE) != totalAccumulatedReward",
            "yfv != ori(rewardVote)",
            "yfv != rewardReferral",
            "yfv == ori(yfv)",
            "yfv != ori(rewardReferral)",
            "yfv != ori(vUSD)",
            "yfv != vETH",
            "yfv != ori(vETH)",
            "periodFinish == rewardRate",
            "periodFinish >= rewardRate",
            "periodFinish <= rewardRate",
            "periodFinish == ori(_totalSupply)",
            "periodFinish >= ori(_totalSupply)",
            "periodFinish <= ori(_totalSupply)",
            "periodFinish == ori(lastUpdateTime)",
            "periodFinish >= ori(lastUpdateTime)",
            "periodFinish <= ori(lastUpdateTime)",
            "periodFinish == rewardPerTokenStored",
            "periodFinish >= rewardPerTokenStored",
            "periodFinish <= rewardPerTokenStored",
            "periodFinish == Sum(_balances[...])",
            "periodFinish >= Sum(_balances[...])",
            "periodFinish <= Sum(_balances[...])",
            "periodFinish == ori(totalAccumulatedReward)",
            "periodFinish >= ori(totalAccumulatedReward)",
            "periodFinish <= ori(totalAccumulatedReward)",
            "periodFinish == ori(currentEpoch)",
            "periodFinish >= ori(currentEpoch)",
            "periodFinish <= ori(currentEpoch)",
            "periodFinish == ori(rewardRate)",
            "periodFinish >= ori(rewardRate)",
            "periodFinish <= ori(rewardRate)",
            "periodFinish <= ori(vUSD_REWARD_FRACTION_RATE)",
            "periodFinish < ori(vUSD_REWARD_FRACTION_RATE)",
            "periodFinish != ori(vUSD_REWARD_FRACTION_RATE)",
            "periodFinish == ori(rewardPerTokenStored)",
            "periodFinish >= ori(rewardPerTokenStored)",
            "periodFinish <= ori(rewardPerTokenStored)",
            "periodFinish <= starttime",
            "periodFinish < starttime",
            "periodFinish != starttime",
            "periodFinish == ori(Sum(lastStakeTimes[...]))",
            "periodFinish >= ori(Sum(lastStakeTimes[...]))",
            "periodFinish <= ori(Sum(lastStakeTimes[...]))",
            "periodFinish == ori(Sum(accumulatedStakingPower[...]))",
            "periodFinish >= ori(Sum(accumulatedStakingPower[...]))",
            "periodFinish <= ori(Sum(accumulatedStakingPower[...]))",
            "periodFinish <= ori(starttime)",
            "periodFinish < ori(starttime)",
            "periodFinish != ori(starttime)",
            "periodFinish <= vETH_REWARD_FRACTION_RATE",
            "periodFinish < vETH_REWARD_FRACTION_RATE",
            "periodFinish != vETH_REWARD_FRACTION_RATE",
            "periodFinish <= currentEpochReward",
            "periodFinish < currentEpochReward",
            "periodFinish != currentEpochReward",
            "periodFinish == Sum(userRewardPerTokenPaid[...])",
            "periodFinish >= Sum(userRewardPerTokenPaid[...])",
            "periodFinish <= Sum(userRewardPerTokenPaid[...])",
            "periodFinish == ori(Sum(rewards[...]))",
            "periodFinish >= ori(Sum(rewards[...]))",
            "periodFinish <= ori(Sum(rewards[...]))",
            "periodFinish == Sum(lastStakeTimes[...])",
            "periodFinish >= Sum(lastStakeTimes[...])",
            "periodFinish <= Sum(lastStakeTimes[...])",
            "periodFinish == msg.value",
            "periodFinish >= msg.value",
            "periodFinish <= msg.value",
            "periodFinish == Sum(rewards[...])",
            "periodFinish >= Sum(rewards[...])",
            "periodFinish <= Sum(rewards[...])",
            "periodFinish == ori(periodFinish)",
            "periodFinish >= ori(periodFinish)",
            "periodFinish <= ori(periodFinish)",
            "periodFinish <= vUSD_REWARD_FRACTION_RATE",
            "periodFinish < vUSD_REWARD_FRACTION_RATE",
            "periodFinish != vUSD_REWARD_FRACTION_RATE",
            "periodFinish == ori(Sum(_balances[...]))",
            "periodFinish >= ori(Sum(_balances[...]))",
            "periodFinish <= ori(Sum(_balances[...]))",
            "periodFinish == ori(Sum(userRewardPerTokenPaid[...]))",
            "periodFinish >= ori(Sum(userRewardPerTokenPaid[...]))",
            "periodFinish <= ori(Sum(userRewardPerTokenPaid[...]))",
            "periodFinish == totalAccumulatedReward",
            "periodFinish >= totalAccumulatedReward",
            "periodFinish <= totalAccumulatedReward",
            "rewardRate == ori(_totalSupply)",
            "rewardRate >= ori(_totalSupply)",
            "rewardRate <= ori(_totalSupply)",
            "rewardRate == ori(lastUpdateTime)",
            "rewardRate >= ori(lastUpdateTime)",
            "rewardRate <= ori(lastUpdateTime)",
            "rewardRate == rewardPerTokenStored",
            "rewardRate >= rewardPerTokenStored",
            "rewardRate <= rewardPerTokenStored",
            "rewardRate == Sum(_balances[...])",
            "rewardRate >= Sum(_balances[...])",
            "rewardRate <= Sum(_balances[...])",
            "rewardRate == ori(totalAccumulatedReward)",
            "rewardRate >= ori(totalAccumulatedReward)",
            "rewardRate <= ori(totalAccumulatedReward)",
            "rewardRate == ori(currentEpoch)",
            "rewardRate >= ori(currentEpoch)",
            "rewardRate <= ori(currentEpoch)",
            "rewardRate == ori(rewardRate)",
            "rewardRate >= ori(rewardRate)",
            "rewardRate <= ori(rewardRate)",
            "rewardRate <= ori(vUSD_REWARD_FRACTION_RATE)",
            "rewardRate < ori(vUSD_REWARD_FRACTION_RATE)",
            "rewardRate != ori(vUSD_REWARD_FRACTION_RATE)",
            "rewardRate == ori(rewardPerTokenStored)",
            "rewardRate >= ori(rewardPerTokenStored)",
            "rewardRate <= ori(rewardPerTokenStored)",
            "rewardRate <= starttime",
            "rewardRate < starttime",
            "rewardRate != starttime",
            "rewardRate == ori(Sum(lastStakeTimes[...]))",
            "rewardRate >= ori(Sum(lastStakeTimes[...]))",
            "rewardRate <= ori(Sum(lastStakeTimes[...]))",
            "rewardRate == ori(Sum(accumulatedStakingPower[...]))",
            "rewardRate >= ori(Sum(accumulatedStakingPower[...]))",
            "rewardRate <= ori(Sum(accumulatedStakingPower[...]))",
            "rewardRate <= ori(starttime)",
            "rewardRate < ori(starttime)",
            "rewardRate != ori(starttime)",
            "rewardRate <= vETH_REWARD_FRACTION_RATE",
            "rewardRate < vETH_REWARD_FRACTION_RATE",
            "rewardRate != vETH_REWARD_FRACTION_RATE",
            "rewardRate <= currentEpochReward",
            "rewardRate < currentEpochReward",
            "rewardRate != currentEpochReward",
            "rewardRate == Sum(userRewardPerTokenPaid[...])",
            "rewardRate >= Sum(userRewardPerTokenPaid[...])",
            "rewardRate <= Sum(userRewardPerTokenPaid[...])",
            "rewardRate == ori(Sum(rewards[...]))",
            "rewardRate >= ori(Sum(rewards[...]))",
            "rewardRate <= ori(Sum(rewards[...]))",
            "rewardRate == Sum(lastStakeTimes[...])",
            "rewardRate >= Sum(lastStakeTimes[...])",
            "rewardRate <= Sum(lastStakeTimes[...])",
            "rewardRate == msg.value",
            "rewardRate >= msg.value",
            "rewardRate <= msg.value",
            "rewardRate == Sum(rewards[...])",
            "rewardRate >= Sum(rewards[...])",
            "rewardRate <= Sum(rewards[...])",
            "rewardRate == ori(periodFinish)",
            "rewardRate >= ori(periodFinish)",
            "rewardRate <= ori(periodFinish)",
            "rewardRate <= vUSD_REWARD_FRACTION_RATE",
            "rewardRate < vUSD_REWARD_FRACTION_RATE",
            "rewardRate != vUSD_REWARD_FRACTION_RATE",
            "rewardRate == ori(Sum(_balances[...]))",
            "rewardRate >= ori(Sum(_balances[...]))",
            "rewardRate <= ori(Sum(_balances[...]))",
            "rewardRate == ori(Sum(userRewardPerTokenPaid[...]))",
            "rewardRate >= ori(Sum(userRewardPerTokenPaid[...]))",
            "rewardRate <= ori(Sum(userRewardPerTokenPaid[...]))",
            "rewardRate == totalAccumulatedReward",
            "rewardRate >= totalAccumulatedReward",
            "rewardRate <= totalAccumulatedReward",
            "ori(rewardVote) != rewardReferral",
            "ori(rewardVote) != vETH",
            "ori(_totalSupply) == rewardPerTokenStored",
            "ori(_totalSupply) >= rewardPerTokenStored",
            "ori(_totalSupply) <= rewardPerTokenStored",
            "ori(_totalSupply) == Sum(_balances[...])",
            "ori(_totalSupply) >= Sum(_balances[...])",
            "ori(_totalSupply) <= Sum(_balances[...])",
            "ori(_totalSupply) <= starttime",
            "ori(_totalSupply) < starttime",
            "ori(_totalSupply) != starttime",
            "ori(_totalSupply) <= vETH_REWARD_FRACTION_RATE",
            "ori(_totalSupply) < vETH_REWARD_FRACTION_RATE",
            "ori(_totalSupply) != vETH_REWARD_FRACTION_RATE",
            "ori(_totalSupply) <= currentEpochReward",
            "ori(_totalSupply) < currentEpochReward",
            "ori(_totalSupply) != currentEpochReward",
            "ori(_totalSupply) == Sum(userRewardPerTokenPaid[...])",
            "ori(_totalSupply) >= Sum(userRewardPerTokenPaid[...])",
            "ori(_totalSupply) <= Sum(userRewardPerTokenPaid[...])",
            "ori(_totalSupply) == Sum(lastStakeTimes[...])",
            "ori(_totalSupply) >= Sum(lastStakeTimes[...])",
            "ori(_totalSupply) <= Sum(lastStakeTimes[...])",
            "ori(_totalSupply) == Sum(rewards[...])",
            "ori(_totalSupply) >= Sum(rewards[...])",
            "ori(_totalSupply) <= Sum(rewards[...])",
            "ori(_totalSupply) <= vUSD_REWARD_FRACTION_RATE",
            "ori(_totalSupply) < vUSD_REWARD_FRACTION_RATE",
            "ori(_totalSupply) != vUSD_REWARD_FRACTION_RATE",
            "ori(_totalSupply) == totalAccumulatedReward",
            "ori(_totalSupply) >= totalAccumulatedReward",
            "ori(_totalSupply) <= totalAccumulatedReward",
            "ori(lastUpdateTime) == rewardPerTokenStored",
            "ori(lastUpdateTime) >= rewardPerTokenStored",
            "ori(lastUpdateTime) <= rewardPerTokenStored",
            "ori(lastUpdateTime) == Sum(_balances[...])",
            "ori(lastUpdateTime) >= Sum(_balances[...])",
            "ori(lastUpdateTime) <= Sum(_balances[...])",
            "ori(lastUpdateTime) <= starttime",
            "ori(lastUpdateTime) < starttime",
            "ori(lastUpdateTime) != starttime",
            "ori(lastUpdateTime) <= vETH_REWARD_FRACTION_RATE",
            "ori(lastUpdateTime) < vETH_REWARD_FRACTION_RATE",
            "ori(lastUpdateTime) != vETH_REWARD_FRACTION_RATE",
            "ori(lastUpdateTime) <= currentEpochReward",
            "ori(lastUpdateTime) < currentEpochReward",
            "ori(lastUpdateTime) != currentEpochReward",
            "ori(lastUpdateTime) == Sum(userRewardPerTokenPaid[...])",
            "ori(lastUpdateTime) >= Sum(userRewardPerTokenPaid[...])",
            "ori(lastUpdateTime) <= Sum(userRewardPerTokenPaid[...])",
            "ori(lastUpdateTime) == Sum(lastStakeTimes[...])",
            "ori(lastUpdateTime) >= Sum(lastStakeTimes[...])",
            "ori(lastUpdateTime) <= Sum(lastStakeTimes[...])",
            "ori(lastUpdateTime) == Sum(rewards[...])",
            "ori(lastUpdateTime) >= Sum(rewards[...])",
            "ori(lastUpdateTime) <= Sum(rewards[...])",
            "ori(lastUpdateTime) <= vUSD_REWARD_FRACTION_RATE",
            "ori(lastUpdateTime) < vUSD_REWARD_FRACTION_RATE",
            "ori(lastUpdateTime) != vUSD_REWARD_FRACTION_RATE",
            "ori(lastUpdateTime) == totalAccumulatedReward",
            "ori(lastUpdateTime) >= totalAccumulatedReward",
            "ori(lastUpdateTime) <= totalAccumulatedReward",
            "rewardPerTokenStored == Sum(_balances[...])",
            "rewardPerTokenStored >= Sum(_balances[...])",
            "rewardPerTokenStored <= Sum(_balances[...])",
            "rewardPerTokenStored == ori(totalAccumulatedReward)",
            "rewardPerTokenStored >= ori(totalAccumulatedReward)",
            "rewardPerTokenStored <= ori(totalAccumulatedReward)",
            "rewardPerTokenStored == ori(currentEpoch)",
            "rewardPerTokenStored >= ori(currentEpoch)",
            "rewardPerTokenStored <= ori(currentEpoch)",
            "rewardPerTokenStored == ori(rewardRate)",
            "rewardPerTokenStored >= ori(rewardRate)",
            "rewardPerTokenStored <= ori(rewardRate)",
            "rewardPerTokenStored <= ori(vUSD_REWARD_FRACTION_RATE)",
            "rewardPerTokenStored < ori(vUSD_REWARD_FRACTION_RATE)",
            "rewardPerTokenStored != ori(vUSD_REWARD_FRACTION_RATE)",
            "rewardPerTokenStored == ori(rewardPerTokenStored)",
            "rewardPerTokenStored >= ori(rewardPerTokenStored)",
            "rewardPerTokenStored <= ori(rewardPerTokenStored)",
            "rewardPerTokenStored <= starttime",
            "rewardPerTokenStored < starttime",
            "rewardPerTokenStored != starttime",
            "rewardPerTokenStored == ori(Sum(lastStakeTimes[...]))",
            "rewardPerTokenStored >= ori(Sum(lastStakeTimes[...]))",
            "rewardPerTokenStored <= ori(Sum(lastStakeTimes[...]))",
            "rewardPerTokenStored == ori(Sum(accumulatedStakingPower[...]))",
            "rewardPerTokenStored >= ori(Sum(accumulatedStakingPower[...]))",
            "rewardPerTokenStored <= ori(Sum(accumulatedStakingPower[...]))",
            "rewardPerTokenStored <= ori(starttime)",
            "rewardPerTokenStored < ori(starttime)",
            "rewardPerTokenStored != ori(starttime)",
            "rewardPerTokenStored <= vETH_REWARD_FRACTION_RATE",
            "rewardPerTokenStored < vETH_REWARD_FRACTION_RATE",
            "rewardPerTokenStored != vETH_REWARD_FRACTION_RATE",
            "rewardPerTokenStored <= currentEpochReward",
            "rewardPerTokenStored < currentEpochReward",
            "rewardPerTokenStored != currentEpochReward",
            "rewardPerTokenStored == Sum(userRewardPerTokenPaid[...])",
            "rewardPerTokenStored >= Sum(userRewardPerTokenPaid[...])",
            "rewardPerTokenStored <= Sum(userRewardPerTokenPaid[...])",
            "rewardPerTokenStored == ori(Sum(rewards[...]))",
            "rewardPerTokenStored >= ori(Sum(rewards[...]))",
            "rewardPerTokenStored <= ori(Sum(rewards[...]))",
            "rewardPerTokenStored == Sum(lastStakeTimes[...])",
            "rewardPerTokenStored >= Sum(lastStakeTimes[...])",
            "rewardPerTokenStored <= Sum(lastStakeTimes[...])",
            "rewardPerTokenStored == msg.value",
            "rewardPerTokenStored >= msg.value",
            "rewardPerTokenStored <= msg.value",
            "rewardPerTokenStored == Sum(rewards[...])",
            "rewardPerTokenStored >= Sum(rewards[...])",
            "rewardPerTokenStored <= Sum(rewards[...])",
            "rewardPerTokenStored == ori(periodFinish)",
            "rewardPerTokenStored >= ori(periodFinish)",
            "rewardPerTokenStored <= ori(periodFinish)",
            "rewardPerTokenStored <= vUSD_REWARD_FRACTION_RATE",
            "rewardPerTokenStored < vUSD_REWARD_FRACTION_RATE",
            "rewardPerTokenStored != vUSD_REWARD_FRACTION_RATE",
            "rewardPerTokenStored == ori(Sum(_balances[...]))",
            "rewardPerTokenStored >= ori(Sum(_balances[...]))",
            "rewardPerTokenStored <= ori(Sum(_balances[...]))",
            "rewardPerTokenStored == ori(Sum(userRewardPerTokenPaid[...]))",
            "rewardPerTokenStored >= ori(Sum(userRewardPerTokenPaid[...]))",
            "rewardPerTokenStored <= ori(Sum(userRewardPerTokenPaid[...]))",
            "rewardPerTokenStored == totalAccumulatedReward",
            "rewardPerTokenStored >= totalAccumulatedReward",
            "rewardPerTokenStored <= totalAccumulatedReward",
            "Sum(_balances[...]) == ori(totalAccumulatedReward)",
            "Sum(_balances[...]) >= ori(totalAccumulatedReward)",
            "Sum(_balances[...]) <= ori(totalAccumulatedReward)",
            "Sum(_balances[...]) == ori(currentEpoch)",
            "Sum(_balances[...]) >= ori(currentEpoch)",
            "Sum(_balances[...]) <= ori(currentEpoch)",
            "Sum(_balances[...]) == ori(rewardRate)",
            "Sum(_balances[...]) >= ori(rewardRate)",
            "Sum(_balances[...]) <= ori(rewardRate)",
            "Sum(_balances[...]) <= ori(vUSD_REWARD_FRACTION_RATE)",
            "Sum(_balances[...]) < ori(vUSD_REWARD_FRACTION_RATE)",
            "Sum(_balances[...]) != ori(vUSD_REWARD_FRACTION_RATE)",
            "Sum(_balances[...]) == ori(rewardPerTokenStored)",
            "Sum(_balances[...]) >= ori(rewardPerTokenStored)",
            "Sum(_balances[...]) <= ori(rewardPerTokenStored)",
            "Sum(_balances[...]) <= starttime",
            "Sum(_balances[...]) < starttime",
            "Sum(_balances[...]) != starttime",
            "Sum(_balances[...]) == ori(Sum(lastStakeTimes[...]))",
            "Sum(_balances[...]) >= ori(Sum(lastStakeTimes[...]))",
            "Sum(_balances[...]) <= ori(Sum(lastStakeTimes[...]))",
            "Sum(_balances[...]) == ori(Sum(accumulatedStakingPower[...]))",
            "Sum(_balances[...]) >= ori(Sum(accumulatedStakingPower[...]))",
            "Sum(_balances[...]) <= ori(Sum(accumulatedStakingPower[...]))",
            "Sum(_balances[...]) <= ori(starttime)",
            "Sum(_balances[...]) < ori(starttime)",
            "Sum(_balances[...]) != ori(starttime)",
            "Sum(_balances[...]) <= vETH_REWARD_FRACTION_RATE",
            "Sum(_balances[...]) < vETH_REWARD_FRACTION_RATE",
            "Sum(_balances[...]) != vETH_REWARD_FRACTION_RATE",
            "Sum(_balances[...]) <= currentEpochReward",
            "Sum(_balances[...]) < currentEpochReward",
            "Sum(_balances[...]) != currentEpochReward",
            "Sum(_balances[...]) == Sum(userRewardPerTokenPaid[...])",
            "Sum(_balances[...]) >= Sum(userRewardPerTokenPaid[...])",
            "Sum(_balances[...]) <= Sum(userRewardPerTokenPaid[...])",
            "Sum(_balances[...]) == ori(Sum(rewards[...]))",
            "Sum(_balances[...]) >= ori(Sum(rewards[...]))",
            "Sum(_balances[...]) <= ori(Sum(rewards[...]))",
            "Sum(_balances[...]) == Sum(lastStakeTimes[...])",
            "Sum(_balances[...]) >= Sum(lastStakeTimes[...])",
            "Sum(_balances[...]) <= Sum(lastStakeTimes[...])",
            "Sum(_balances[...]) == msg.value",
            "Sum(_balances[...]) >= msg.value",
            "Sum(_balances[...]) <= msg.value",
            "Sum(_balances[...]) == Sum(rewards[...])",
            "Sum(_balances[...]) >= Sum(rewards[...])",
            "Sum(_balances[...]) <= Sum(rewards[...])",
            "Sum(_balances[...]) == ori(periodFinish)",
            "Sum(_balances[...]) >= ori(periodFinish)",
            "Sum(_balances[...]) <= ori(periodFinish)",
            "Sum(_balances[...]) <= vUSD_REWARD_FRACTION_RATE",
            "Sum(_balances[...]) < vUSD_REWARD_FRACTION_RATE",
            "Sum(_balances[...]) != vUSD_REWARD_FRACTION_RATE",
            "Sum(_balances[...]) == ori(Sum(_balances[...]))",
            "Sum(_balances[...]) >= ori(Sum(_balances[...]))",
            "Sum(_balances[...]) <= ori(Sum(_balances[...]))",
            "Sum(_balances[...]) == ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(_balances[...]) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(_balances[...]) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(_balances[...]) == totalAccumulatedReward",
            "Sum(_balances[...]) >= totalAccumulatedReward",
            "Sum(_balances[...]) <= totalAccumulatedReward",
            "ori(totalAccumulatedReward) <= starttime",
            "ori(totalAccumulatedReward) < starttime",
            "ori(totalAccumulatedReward) != starttime",
            "ori(totalAccumulatedReward) <= vETH_REWARD_FRACTION_RATE",
            "ori(totalAccumulatedReward) < vETH_REWARD_FRACTION_RATE",
            "ori(totalAccumulatedReward) != vETH_REWARD_FRACTION_RATE",
            "ori(totalAccumulatedReward) <= currentEpochReward",
            "ori(totalAccumulatedReward) < currentEpochReward",
            "ori(totalAccumulatedReward) != currentEpochReward",
            "ori(totalAccumulatedReward) == Sum(userRewardPerTokenPaid[...])",
            "ori(totalAccumulatedReward) >= Sum(userRewardPerTokenPaid[...])",
            "ori(totalAccumulatedReward) <= Sum(userRewardPerTokenPaid[...])",
            "ori(totalAccumulatedReward) == Sum(lastStakeTimes[...])",
            "ori(totalAccumulatedReward) >= Sum(lastStakeTimes[...])",
            "ori(totalAccumulatedReward) <= Sum(lastStakeTimes[...])",
            "ori(totalAccumulatedReward) == Sum(rewards[...])",
            "ori(totalAccumulatedReward) >= Sum(rewards[...])",
            "ori(totalAccumulatedReward) <= Sum(rewards[...])",
            "ori(totalAccumulatedReward) <= vUSD_REWARD_FRACTION_RATE",
            "ori(totalAccumulatedReward) < vUSD_REWARD_FRACTION_RATE",
            "ori(totalAccumulatedReward) != vUSD_REWARD_FRACTION_RATE",
            "ori(totalAccumulatedReward) == totalAccumulatedReward",
            "ori(totalAccumulatedReward) >= totalAccumulatedReward",
            "ori(totalAccumulatedReward) <= totalAccumulatedReward",
            "ori(currentEpoch) <= starttime",
            "ori(currentEpoch) < starttime",
            "ori(currentEpoch) != starttime",
            "ori(currentEpoch) <= vETH_REWARD_FRACTION_RATE",
            "ori(currentEpoch) < vETH_REWARD_FRACTION_RATE",
            "ori(currentEpoch) != vETH_REWARD_FRACTION_RATE",
            "ori(currentEpoch) <= currentEpochReward",
            "ori(currentEpoch) < currentEpochReward",
            "ori(currentEpoch) != currentEpochReward",
            "ori(currentEpoch) == Sum(userRewardPerTokenPaid[...])",
            "ori(currentEpoch) >= Sum(userRewardPerTokenPaid[...])",
            "ori(currentEpoch) <= Sum(userRewardPerTokenPaid[...])",
            "ori(currentEpoch) == Sum(lastStakeTimes[...])",
            "ori(currentEpoch) >= Sum(lastStakeTimes[...])",
            "ori(currentEpoch) <= Sum(lastStakeTimes[...])",
            "ori(currentEpoch) == Sum(rewards[...])",
            "ori(currentEpoch) >= Sum(rewards[...])",
            "ori(currentEpoch) <= Sum(rewards[...])",
            "ori(currentEpoch) <= vUSD_REWARD_FRACTION_RATE",
            "ori(currentEpoch) < vUSD_REWARD_FRACTION_RATE",
            "ori(currentEpoch) != vUSD_REWARD_FRACTION_RATE",
            "ori(currentEpoch) == totalAccumulatedReward",
            "ori(currentEpoch) >= totalAccumulatedReward",
            "ori(currentEpoch) <= totalAccumulatedReward",
            "ori(rewardRate) <= starttime",
            "ori(rewardRate) < starttime",
            "ori(rewardRate) != starttime",
            "ori(rewardRate) <= vETH_REWARD_FRACTION_RATE",
            "ori(rewardRate) < vETH_REWARD_FRACTION_RATE",
            "ori(rewardRate) != vETH_REWARD_FRACTION_RATE",
            "ori(rewardRate) <= currentEpochReward",
            "ori(rewardRate) < currentEpochReward",
            "ori(rewardRate) != currentEpochReward",
            "ori(rewardRate) == Sum(userRewardPerTokenPaid[...])",
            "ori(rewardRate) >= Sum(userRewardPerTokenPaid[...])",
            "ori(rewardRate) <= Sum(userRewardPerTokenPaid[...])",
            "ori(rewardRate) == Sum(lastStakeTimes[...])",
            "ori(rewardRate) >= Sum(lastStakeTimes[...])",
            "ori(rewardRate) <= Sum(lastStakeTimes[...])",
            "ori(rewardRate) == Sum(rewards[...])",
            "ori(rewardRate) >= Sum(rewards[...])",
            "ori(rewardRate) <= Sum(rewards[...])",
            "ori(rewardRate) <= vUSD_REWARD_FRACTION_RATE",
            "ori(rewardRate) < vUSD_REWARD_FRACTION_RATE",
            "ori(rewardRate) != vUSD_REWARD_FRACTION_RATE",
            "ori(rewardRate) == totalAccumulatedReward",
            "ori(rewardRate) >= totalAccumulatedReward",
            "ori(rewardRate) <= totalAccumulatedReward",
            "rewardReferral != ori(yfv)",
            "rewardReferral == ori(rewardReferral)",
            "rewardReferral != ori(vUSD)",
            "rewardReferral != vETH",
            "rewardReferral != ori(vETH)",
            "ori(vUSD_REWARD_FRACTION_RATE) >= starttime",
            "ori(vUSD_REWARD_FRACTION_RATE) > starttime",
            "ori(vUSD_REWARD_FRACTION_RATE) != starttime",
            "ori(vUSD_REWARD_FRACTION_RATE) <= vETH_REWARD_FRACTION_RATE",
            "ori(vUSD_REWARD_FRACTION_RATE) < vETH_REWARD_FRACTION_RATE",
            "ori(vUSD_REWARD_FRACTION_RATE) != vETH_REWARD_FRACTION_RATE",
            "ori(vUSD_REWARD_FRACTION_RATE) <= currentEpochReward",
            "ori(vUSD_REWARD_FRACTION_RATE) < currentEpochReward",
            "ori(vUSD_REWARD_FRACTION_RATE) != currentEpochReward",
            "ori(vUSD_REWARD_FRACTION_RATE) >= Sum(userRewardPerTokenPaid[...])",
            "ori(vUSD_REWARD_FRACTION_RATE) > Sum(userRewardPerTokenPaid[...])",
            "ori(vUSD_REWARD_FRACTION_RATE) != Sum(userRewardPerTokenPaid[...])",
            "ori(vUSD_REWARD_FRACTION_RATE) >= Sum(lastStakeTimes[...])",
            "ori(vUSD_REWARD_FRACTION_RATE) > Sum(lastStakeTimes[...])",
            "ori(vUSD_REWARD_FRACTION_RATE) != Sum(lastStakeTimes[...])",
            "ori(vUSD_REWARD_FRACTION_RATE) >= Sum(rewards[...])",
            "ori(vUSD_REWARD_FRACTION_RATE) > Sum(rewards[...])",
            "ori(vUSD_REWARD_FRACTION_RATE) != Sum(rewards[...])",
            "ori(vUSD_REWARD_FRACTION_RATE) == vUSD_REWARD_FRACTION_RATE",
            "ori(vUSD_REWARD_FRACTION_RATE) >= vUSD_REWARD_FRACTION_RATE",
            "ori(vUSD_REWARD_FRACTION_RATE) <= vUSD_REWARD_FRACTION_RATE",
            "ori(vUSD_REWARD_FRACTION_RATE) >= totalAccumulatedReward",
            "ori(vUSD_REWARD_FRACTION_RATE) > totalAccumulatedReward",
            "ori(vUSD_REWARD_FRACTION_RATE) != totalAccumulatedReward",
            "ori(rewardPerTokenStored) <= starttime",
            "ori(rewardPerTokenStored) < starttime",
            "ori(rewardPerTokenStored) != starttime",
            "ori(rewardPerTokenStored) <= vETH_REWARD_FRACTION_RATE",
            "ori(rewardPerTokenStored) < vETH_REWARD_FRACTION_RATE",
            "ori(rewardPerTokenStored) != vETH_REWARD_FRACTION_RATE",
            "ori(rewardPerTokenStored) <= currentEpochReward",
            "ori(rewardPerTokenStored) < currentEpochReward",
            "ori(rewardPerTokenStored) != currentEpochReward",
            "ori(rewardPerTokenStored) == Sum(userRewardPerTokenPaid[...])",
            "ori(rewardPerTokenStored) >= Sum(userRewardPerTokenPaid[...])",
            "ori(rewardPerTokenStored) <= Sum(userRewardPerTokenPaid[...])",
            "ori(rewardPerTokenStored) == Sum(lastStakeTimes[...])",
            "ori(rewardPerTokenStored) >= Sum(lastStakeTimes[...])",
            "ori(rewardPerTokenStored) <= Sum(lastStakeTimes[...])",
            "ori(rewardPerTokenStored) == Sum(rewards[...])",
            "ori(rewardPerTokenStored) >= Sum(rewards[...])",
            "ori(rewardPerTokenStored) <= Sum(rewards[...])",
            "ori(rewardPerTokenStored) <= vUSD_REWARD_FRACTION_RATE",
            "ori(rewardPerTokenStored) < vUSD_REWARD_FRACTION_RATE",
            "ori(rewardPerTokenStored) != vUSD_REWARD_FRACTION_RATE",
            "ori(rewardPerTokenStored) == totalAccumulatedReward",
            "ori(rewardPerTokenStored) >= totalAccumulatedReward",
            "ori(rewardPerTokenStored) <= totalAccumulatedReward",
            "starttime >= ori(Sum(lastStakeTimes[...]))",
            "starttime > ori(Sum(lastStakeTimes[...]))",
            "starttime != ori(Sum(lastStakeTimes[...]))",
            "starttime >= ori(Sum(accumulatedStakingPower[...]))",
            "starttime > ori(Sum(accumulatedStakingPower[...]))",
            "starttime != ori(Sum(accumulatedStakingPower[...]))",
            "starttime == ori(starttime)",
            "starttime >= ori(starttime)",
            "starttime <= ori(starttime)",
            "starttime <= vETH_REWARD_FRACTION_RATE",
            "starttime < vETH_REWARD_FRACTION_RATE",
            "starttime != vETH_REWARD_FRACTION_RATE",
            "starttime <= currentEpochReward",
            "starttime < currentEpochReward",
            "starttime != currentEpochReward",
            "starttime >= Sum(userRewardPerTokenPaid[...])",
            "starttime > Sum(userRewardPerTokenPaid[...])",
            "starttime != Sum(userRewardPerTokenPaid[...])",
            "starttime >= ori(Sum(rewards[...]))",
            "starttime > ori(Sum(rewards[...]))",
            "starttime != ori(Sum(rewards[...]))",
            "starttime >= Sum(lastStakeTimes[...])",
            "starttime > Sum(lastStakeTimes[...])",
            "starttime != Sum(lastStakeTimes[...])",
            "starttime >= msg.value",
            "starttime > msg.value",
            "starttime != msg.value",
            "starttime >= Sum(rewards[...])",
            "starttime > Sum(rewards[...])",
            "starttime != Sum(rewards[...])",
            "starttime >= ori(periodFinish)",
            "starttime > ori(periodFinish)",
            "starttime != ori(periodFinish)",
            "starttime <= vUSD_REWARD_FRACTION_RATE",
            "starttime < vUSD_REWARD_FRACTION_RATE",
            "starttime != vUSD_REWARD_FRACTION_RATE",
            "starttime >= ori(Sum(_balances[...]))",
            "starttime > ori(Sum(_balances[...]))",
            "starttime != ori(Sum(_balances[...]))",
            "starttime >= ori(Sum(userRewardPerTokenPaid[...]))",
            "starttime > ori(Sum(userRewardPerTokenPaid[...]))",
            "starttime != ori(Sum(userRewardPerTokenPaid[...]))",
            "starttime >= totalAccumulatedReward",
            "starttime > totalAccumulatedReward",
            "starttime != totalAccumulatedReward",
            "ori(Sum(lastStakeTimes[...])) <= vETH_REWARD_FRACTION_RATE",
            "ori(Sum(lastStakeTimes[...])) < vETH_REWARD_FRACTION_RATE",
            "ori(Sum(lastStakeTimes[...])) != vETH_REWARD_FRACTION_RATE",
            "ori(Sum(lastStakeTimes[...])) <= currentEpochReward",
            "ori(Sum(lastStakeTimes[...])) < currentEpochReward",
            "ori(Sum(lastStakeTimes[...])) != currentEpochReward",
            "ori(Sum(lastStakeTimes[...])) == Sum(userRewardPerTokenPaid[...])",
            "ori(Sum(lastStakeTimes[...])) >= Sum(userRewardPerTokenPaid[...])",
            "ori(Sum(lastStakeTimes[...])) <= Sum(userRewardPerTokenPaid[...])",
            "ori(Sum(lastStakeTimes[...])) == Sum(lastStakeTimes[...])",
            "ori(Sum(lastStakeTimes[...])) >= Sum(lastStakeTimes[...])",
            "ori(Sum(lastStakeTimes[...])) <= Sum(lastStakeTimes[...])",
            "ori(Sum(lastStakeTimes[...])) == Sum(rewards[...])",
            "ori(Sum(lastStakeTimes[...])) >= Sum(rewards[...])",
            "ori(Sum(lastStakeTimes[...])) <= Sum(rewards[...])",
            "ori(Sum(lastStakeTimes[...])) <= vUSD_REWARD_FRACTION_RATE",
            "ori(Sum(lastStakeTimes[...])) < vUSD_REWARD_FRACTION_RATE",
            "ori(Sum(lastStakeTimes[...])) != vUSD_REWARD_FRACTION_RATE",
            "ori(Sum(lastStakeTimes[...])) == totalAccumulatedReward",
            "ori(Sum(lastStakeTimes[...])) >= totalAccumulatedReward",
            "ori(Sum(lastStakeTimes[...])) <= totalAccumulatedReward",
            "ori(Sum(accumulatedStakingPower[...])) <= vETH_REWARD_FRACTION_RATE",
            "ori(Sum(accumulatedStakingPower[...])) < vETH_REWARD_FRACTION_RATE",
            "ori(Sum(accumulatedStakingPower[...])) != vETH_REWARD_FRACTION_RATE",
            "ori(Sum(accumulatedStakingPower[...])) <= currentEpochReward",
            "ori(Sum(accumulatedStakingPower[...])) < currentEpochReward",
            "ori(Sum(accumulatedStakingPower[...])) != currentEpochReward",
            "ori(Sum(accumulatedStakingPower[...])) == Sum(userRewardPerTokenPaid[...])",
            "ori(Sum(accumulatedStakingPower[...])) >= Sum(userRewardPerTokenPaid[...])",
            "ori(Sum(accumulatedStakingPower[...])) <= Sum(userRewardPerTokenPaid[...])",
            "ori(Sum(accumulatedStakingPower[...])) == Sum(lastStakeTimes[...])",
            "ori(Sum(accumulatedStakingPower[...])) >= Sum(lastStakeTimes[...])",
            "ori(Sum(accumulatedStakingPower[...])) <= Sum(lastStakeTimes[...])",
            "ori(Sum(accumulatedStakingPower[...])) == Sum(rewards[...])",
            "ori(Sum(accumulatedStakingPower[...])) >= Sum(rewards[...])",
            "ori(Sum(accumulatedStakingPower[...])) <= Sum(rewards[...])",
            "ori(Sum(accumulatedStakingPower[...])) <= vUSD_REWARD_FRACTION_RATE",
            "ori(Sum(accumulatedStakingPower[...])) < vUSD_REWARD_FRACTION_RATE",
            "ori(Sum(accumulatedStakingPower[...])) != vUSD_REWARD_FRACTION_RATE",
            "ori(Sum(accumulatedStakingPower[...])) == totalAccumulatedReward",
            "ori(Sum(accumulatedStakingPower[...])) >= totalAccumulatedReward",
            "ori(Sum(accumulatedStakingPower[...])) <= totalAccumulatedReward",
            "ori(yfv) != vETH",
            "ori(starttime) <= vETH_REWARD_FRACTION_RATE",
            "ori(starttime) < vETH_REWARD_FRACTION_RATE",
            "ori(starttime) != vETH_REWARD_FRACTION_RATE",
            "ori(starttime) <= currentEpochReward",
            "ori(starttime) < currentEpochReward",
            "ori(starttime) != currentEpochReward",
            "ori(starttime) >= Sum(userRewardPerTokenPaid[...])",
            "ori(starttime) > Sum(userRewardPerTokenPaid[...])",
            "ori(starttime) != Sum(userRewardPerTokenPaid[...])",
            "ori(starttime) >= Sum(lastStakeTimes[...])",
            "ori(starttime) > Sum(lastStakeTimes[...])",
            "ori(starttime) != Sum(lastStakeTimes[...])",
            "ori(starttime) >= Sum(rewards[...])",
            "ori(starttime) > Sum(rewards[...])",
            "ori(starttime) != Sum(rewards[...])",
            "ori(starttime) <= vUSD_REWARD_FRACTION_RATE",
            "ori(starttime) < vUSD_REWARD_FRACTION_RATE",
            "ori(starttime) != vUSD_REWARD_FRACTION_RATE",
            "ori(starttime) >= totalAccumulatedReward",
            "ori(starttime) > totalAccumulatedReward",
            "ori(starttime) != totalAccumulatedReward",
            "vETH_REWARD_FRACTION_RATE <= currentEpochReward",
            "vETH_REWARD_FRACTION_RATE < currentEpochReward",
            "vETH_REWARD_FRACTION_RATE != currentEpochReward",
            "vETH_REWARD_FRACTION_RATE >= Sum(userRewardPerTokenPaid[...])",
            "vETH_REWARD_FRACTION_RATE > Sum(userRewardPerTokenPaid[...])",
            "vETH_REWARD_FRACTION_RATE != Sum(userRewardPerTokenPaid[...])",
            "vETH_REWARD_FRACTION_RATE >= ori(Sum(rewards[...]))",
            "vETH_REWARD_FRACTION_RATE > ori(Sum(rewards[...]))",
            "vETH_REWARD_FRACTION_RATE != ori(Sum(rewards[...]))",
            "vETH_REWARD_FRACTION_RATE >= Sum(lastStakeTimes[...])",
            "vETH_REWARD_FRACTION_RATE > Sum(lastStakeTimes[...])",
            "vETH_REWARD_FRACTION_RATE != Sum(lastStakeTimes[...])",
            "vETH_REWARD_FRACTION_RATE >= msg.value",
            "vETH_REWARD_FRACTION_RATE > msg.value",
            "vETH_REWARD_FRACTION_RATE != msg.value",
            "vETH_REWARD_FRACTION_RATE >= Sum(rewards[...])",
            "vETH_REWARD_FRACTION_RATE > Sum(rewards[...])",
            "vETH_REWARD_FRACTION_RATE != Sum(rewards[...])",
            "vETH_REWARD_FRACTION_RATE >= ori(periodFinish)",
            "vETH_REWARD_FRACTION_RATE > ori(periodFinish)",
            "vETH_REWARD_FRACTION_RATE != ori(periodFinish)",
            "vETH_REWARD_FRACTION_RATE >= vUSD_REWARD_FRACTION_RATE",
            "vETH_REWARD_FRACTION_RATE > vUSD_REWARD_FRACTION_RATE",
            "vETH_REWARD_FRACTION_RATE != vUSD_REWARD_FRACTION_RATE",
            "vETH_REWARD_FRACTION_RATE >= ori(Sum(_balances[...]))",
            "vETH_REWARD_FRACTION_RATE > ori(Sum(_balances[...]))",
            "vETH_REWARD_FRACTION_RATE != ori(Sum(_balances[...]))",
            "vETH_REWARD_FRACTION_RATE >= ori(Sum(userRewardPerTokenPaid[...]))",
            "vETH_REWARD_FRACTION_RATE > ori(Sum(userRewardPerTokenPaid[...]))",
            "vETH_REWARD_FRACTION_RATE != ori(Sum(userRewardPerTokenPaid[...]))",
            "vETH_REWARD_FRACTION_RATE >= totalAccumulatedReward",
            "vETH_REWARD_FRACTION_RATE > totalAccumulatedReward",
            "vETH_REWARD_FRACTION_RATE != totalAccumulatedReward",
            "currentEpochReward >= Sum(userRewardPerTokenPaid[...])",
            "currentEpochReward > Sum(userRewardPerTokenPaid[...])",
            "currentEpochReward != Sum(userRewardPerTokenPaid[...])",
            "currentEpochReward >= ori(Sum(rewards[...]))",
            "currentEpochReward > ori(Sum(rewards[...]))",
            "currentEpochReward != ori(Sum(rewards[...]))",
            "currentEpochReward >= Sum(lastStakeTimes[...])",
            "currentEpochReward > Sum(lastStakeTimes[...])",
            "currentEpochReward != Sum(lastStakeTimes[...])",
            "currentEpochReward >= msg.value",
            "currentEpochReward > msg.value",
            "currentEpochReward != msg.value",
            "currentEpochReward >= Sum(rewards[...])",
            "currentEpochReward > Sum(rewards[...])",
            "currentEpochReward != Sum(rewards[...])",
            "currentEpochReward >= ori(periodFinish)",
            "currentEpochReward > ori(periodFinish)",
            "currentEpochReward != ori(periodFinish)",
            "currentEpochReward >= vUSD_REWARD_FRACTION_RATE",
            "currentEpochReward > vUSD_REWARD_FRACTION_RATE",
            "currentEpochReward != vUSD_REWARD_FRACTION_RATE",
            "currentEpochReward >= ori(Sum(_balances[...]))",
            "currentEpochReward > ori(Sum(_balances[...]))",
            "currentEpochReward != ori(Sum(_balances[...]))",
            "currentEpochReward >= ori(Sum(userRewardPerTokenPaid[...]))",
            "currentEpochReward > ori(Sum(userRewardPerTokenPaid[...]))",
            "currentEpochReward != ori(Sum(userRewardPerTokenPaid[...]))",
            "currentEpochReward >= totalAccumulatedReward",
            "currentEpochReward > totalAccumulatedReward",
            "currentEpochReward != totalAccumulatedReward",
            "Sum(userRewardPerTokenPaid[...]) == ori(Sum(rewards[...]))",
            "Sum(userRewardPerTokenPaid[...]) >= ori(Sum(rewards[...]))",
            "Sum(userRewardPerTokenPaid[...]) <= ori(Sum(rewards[...]))",
            "Sum(userRewardPerTokenPaid[...]) == Sum(lastStakeTimes[...])",
            "Sum(userRewardPerTokenPaid[...]) >= Sum(lastStakeTimes[...])",
            "Sum(userRewardPerTokenPaid[...]) <= Sum(lastStakeTimes[...])",
            "Sum(userRewardPerTokenPaid[...]) == msg.value",
            "Sum(userRewardPerTokenPaid[...]) >= msg.value",
            "Sum(userRewardPerTokenPaid[...]) <= msg.value",
            "Sum(userRewardPerTokenPaid[...]) == Sum(rewards[...])",
            "Sum(userRewardPerTokenPaid[...]) >= Sum(rewards[...])",
            "Sum(userRewardPerTokenPaid[...]) <= Sum(rewards[...])",
            "Sum(userRewardPerTokenPaid[...]) == ori(periodFinish)",
            "Sum(userRewardPerTokenPaid[...]) >= ori(periodFinish)",
            "Sum(userRewardPerTokenPaid[...]) <= ori(periodFinish)",
            "Sum(userRewardPerTokenPaid[...]) <= vUSD_REWARD_FRACTION_RATE",
            "Sum(userRewardPerTokenPaid[...]) < vUSD_REWARD_FRACTION_RATE",
            "Sum(userRewardPerTokenPaid[...]) != vUSD_REWARD_FRACTION_RATE",
            "Sum(userRewardPerTokenPaid[...]) == ori(Sum(_balances[...]))",
            "Sum(userRewardPerTokenPaid[...]) >= ori(Sum(_balances[...]))",
            "Sum(userRewardPerTokenPaid[...]) <= ori(Sum(_balances[...]))",
            "Sum(userRewardPerTokenPaid[...]) == ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(userRewardPerTokenPaid[...]) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(userRewardPerTokenPaid[...]) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(userRewardPerTokenPaid[...]) == totalAccumulatedReward",
            "Sum(userRewardPerTokenPaid[...]) >= totalAccumulatedReward",
            "Sum(userRewardPerTokenPaid[...]) <= totalAccumulatedReward",
            "ori(Sum(rewards[...])) == Sum(lastStakeTimes[...])",
            "ori(Sum(rewards[...])) >= Sum(lastStakeTimes[...])",
            "ori(Sum(rewards[...])) <= Sum(lastStakeTimes[...])",
            "ori(Sum(rewards[...])) == Sum(rewards[...])",
            "ori(Sum(rewards[...])) >= Sum(rewards[...])",
            "ori(Sum(rewards[...])) <= Sum(rewards[...])",
            "ori(Sum(rewards[...])) <= vUSD_REWARD_FRACTION_RATE",
            "ori(Sum(rewards[...])) < vUSD_REWARD_FRACTION_RATE",
            "ori(Sum(rewards[...])) != vUSD_REWARD_FRACTION_RATE",
            "ori(Sum(rewards[...])) == totalAccumulatedReward",
            "ori(Sum(rewards[...])) >= totalAccumulatedReward",
            "ori(Sum(rewards[...])) <= totalAccumulatedReward",
            "ori(rewardReferral) != vETH",
            "ori(vUSD) != vETH",
            "Sum(lastStakeTimes[...]) == msg.value",
            "Sum(lastStakeTimes[...]) >= msg.value",
            "Sum(lastStakeTimes[...]) <= msg.value",
            "Sum(lastStakeTimes[...]) == Sum(rewards[...])",
            "Sum(lastStakeTimes[...]) >= Sum(rewards[...])",
            "Sum(lastStakeTimes[...]) <= Sum(rewards[...])",
            "Sum(lastStakeTimes[...]) == ori(periodFinish)",
            "Sum(lastStakeTimes[...]) >= ori(periodFinish)",
            "Sum(lastStakeTimes[...]) <= ori(periodFinish)",
            "Sum(lastStakeTimes[...]) <= vUSD_REWARD_FRACTION_RATE",
            "Sum(lastStakeTimes[...]) < vUSD_REWARD_FRACTION_RATE",
            "Sum(lastStakeTimes[...]) != vUSD_REWARD_FRACTION_RATE",
            "Sum(lastStakeTimes[...]) == ori(Sum(_balances[...]))",
            "Sum(lastStakeTimes[...]) >= ori(Sum(_balances[...]))",
            "Sum(lastStakeTimes[...]) <= ori(Sum(_balances[...]))",
            "Sum(lastStakeTimes[...]) == ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(lastStakeTimes[...]) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(lastStakeTimes[...]) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(lastStakeTimes[...]) == totalAccumulatedReward",
            "Sum(lastStakeTimes[...]) >= totalAccumulatedReward",
            "Sum(lastStakeTimes[...]) <= totalAccumulatedReward",
            "msg.value == Sum(rewards[...])",
            "msg.value >= Sum(rewards[...])",
            "msg.value <= Sum(rewards[...])",
            "msg.value <= vUSD_REWARD_FRACTION_RATE",
            "msg.value < vUSD_REWARD_FRACTION_RATE",
            "msg.value != vUSD_REWARD_FRACTION_RATE",
            "msg.value == totalAccumulatedReward",
            "msg.value >= totalAccumulatedReward",
            "msg.value <= totalAccumulatedReward",
            "vETH == ori(vETH)",
            "Sum(rewards[...]) == ori(periodFinish)",
            "Sum(rewards[...]) >= ori(periodFinish)",
            "Sum(rewards[...]) <= ori(periodFinish)",
            "Sum(rewards[...]) <= vUSD_REWARD_FRACTION_RATE",
            "Sum(rewards[...]) < vUSD_REWARD_FRACTION_RATE",
            "Sum(rewards[...]) != vUSD_REWARD_FRACTION_RATE",
            "Sum(rewards[...]) == ori(Sum(_balances[...]))",
            "Sum(rewards[...]) >= ori(Sum(_balances[...]))",
            "Sum(rewards[...]) <= ori(Sum(_balances[...]))",
            "Sum(rewards[...]) == ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(rewards[...]) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(rewards[...]) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(rewards[...]) == totalAccumulatedReward",
            "Sum(rewards[...]) >= totalAccumulatedReward",
            "Sum(rewards[...]) <= totalAccumulatedReward",
            "ori(periodFinish) <= vUSD_REWARD_FRACTION_RATE",
            "ori(periodFinish) < vUSD_REWARD_FRACTION_RATE",
            "ori(periodFinish) != vUSD_REWARD_FRACTION_RATE",
            "ori(periodFinish) == totalAccumulatedReward",
            "ori(periodFinish) >= totalAccumulatedReward",
            "ori(periodFinish) <= totalAccumulatedReward",
            "vUSD_REWARD_FRACTION_RATE >= ori(Sum(_balances[...]))",
            "vUSD_REWARD_FRACTION_RATE > ori(Sum(_balances[...]))",
            "vUSD_REWARD_FRACTION_RATE != ori(Sum(_balances[...]))",
            "vUSD_REWARD_FRACTION_RATE >= ori(Sum(userRewardPerTokenPaid[...]))",
            "vUSD_REWARD_FRACTION_RATE > ori(Sum(userRewardPerTokenPaid[...]))",
            "vUSD_REWARD_FRACTION_RATE != ori(Sum(userRewardPerTokenPaid[...]))",
            "vUSD_REWARD_FRACTION_RATE >= totalAccumulatedReward",
            "vUSD_REWARD_FRACTION_RATE > totalAccumulatedReward",
            "vUSD_REWARD_FRACTION_RATE != totalAccumulatedReward",
            "ori(Sum(_balances[...])) == totalAccumulatedReward",
            "ori(Sum(_balances[...])) >= totalAccumulatedReward",
            "ori(Sum(_balances[...])) <= totalAccumulatedReward",
            "ori(Sum(userRewardPerTokenPaid[...])) == totalAccumulatedReward",
            "ori(Sum(userRewardPerTokenPaid[...])) >= totalAccumulatedReward",
            "ori(Sum(userRewardPerTokenPaid[...])) <= totalAccumulatedReward"
        ],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "setRewardVote(_rewardVote)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "stake(amount,referrer)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [
            "ori(currentEpochReward) > 0",
            "ori(currentEpochReward) one of [888888888888888888,63000000000000000000000]",
            "msg.sender != 0",
            "ori(_owner) != 0",
            "ori(vETH_REWARD_FRACTION_RATE) > 0",
            "ori(vETH_REWARD_FRACTION_RATE) == 21000000000000",
            "ori(vETH_REWARD_FRACTION_RATE) one of [21000000000000]",
            "ori(rewardVote) != 0",
            "ori(lastUpdateTime) > 0",
            "ori(totalAccumulatedReward) > 0",
            "ori(totalAccumulatedReward) one of [888888888888888888,63000888888888888888888]",
            "ori(currentEpoch) one of [0,1]",
            "ori(rewardRate) > 0",
            "ori(rewardRate) one of [107353730542136,104166666666666666]",
            "ori(vUSD_REWARD_FRACTION_RATE) > 0",
            "ori(vUSD_REWARD_FRACTION_RATE) == 21000000000",
            "ori(vUSD_REWARD_FRACTION_RATE) one of [21000000000]",
            "ori(yfv) != 0",
            "ori(starttime) > 0",
            "ori(starttime) == 1598018400",
            "ori(starttime) one of [1598018400]",
            "amount > 0",
            "ori(rewardReferral) != 0",
            "ori(vUSD) != 0",
            "msg.value == 0",
            "msg.value one of [0]",
            "ori(periodFinish) > 0",
            "ori(periodFinish) one of [1598018400,1598623238]",
            "ori(vETH) != 0",
            "ori(_balances[msg.sender]) <= ori(currentEpochReward)",
            "ori(_balances[msg.sender]) < ori(currentEpochReward)",
            "ori(_balances[msg.sender]) != ori(currentEpochReward)",
            "ori(_balances[msg.sender]) != ori(vETH_REWARD_FRACTION_RATE)",
            "ori(_balances[msg.sender]) <= ori(_totalSupply)",
            "ori(_balances[msg.sender]) != ori(lastUpdateTime)",
            "ori(_balances[msg.sender]) <= ori(totalAccumulatedReward)",
            "ori(_balances[msg.sender]) < ori(totalAccumulatedReward)",
            "ori(_balances[msg.sender]) != ori(totalAccumulatedReward)",
            "ori(_balances[msg.sender]) != ori(rewardRate)",
            "ori(_balances[msg.sender]) != ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(_balances[msg.sender]) >= ori(rewards[msg.sender])",
            "ori(_balances[msg.sender]) >= ori(lastStakeTimes[msg.sender])",
            "ori(_balances[msg.sender]) != ori(starttime)",
            "ori(_balances[msg.sender]) >= msg.value",
            "ori(_balances[msg.sender]) != ori(periodFinish)",
            "ori(_balances[msg.sender]) <= ori(Sum(_balances[...]))",
            "ori(currentEpochReward) >= ori(vETH_REWARD_FRACTION_RATE)",
            "ori(currentEpochReward) > ori(vETH_REWARD_FRACTION_RATE)",
            "ori(currentEpochReward) != ori(vETH_REWARD_FRACTION_RATE)",
            "ori(currentEpochReward) != ori(_totalSupply)",
            "ori(currentEpochReward) >= ori(lastUpdateTime)",
            "ori(currentEpochReward) > ori(lastUpdateTime)",
            "ori(currentEpochReward) != ori(lastUpdateTime)",
            "ori(currentEpochReward) <= ori(totalAccumulatedReward)",
            "ori(currentEpochReward) >= ori(currentEpoch)",
            "ori(currentEpochReward) > ori(currentEpoch)",
            "ori(currentEpochReward) != ori(currentEpoch)",
            "ori(currentEpochReward) >= ori(rewardRate)",
            "ori(currentEpochReward) > ori(rewardRate)",
            "ori(currentEpochReward) != ori(rewardRate)",
            "ori(currentEpochReward) >= ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(currentEpochReward) > ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(currentEpochReward) != ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(currentEpochReward) >= ori(rewardPerTokenStored)",
            "ori(currentEpochReward) > ori(rewardPerTokenStored)",
            "ori(currentEpochReward) != ori(rewardPerTokenStored)",
            "ori(currentEpochReward) >= ori(Sum(lastStakeTimes[...]))",
            "ori(currentEpochReward) > ori(Sum(lastStakeTimes[...]))",
            "ori(currentEpochReward) != ori(Sum(lastStakeTimes[...]))",
            "ori(currentEpochReward) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(currentEpochReward) > ori(Sum(accumulatedStakingPower[...]))",
            "ori(currentEpochReward) != ori(Sum(accumulatedStakingPower[...]))",
            "ori(currentEpochReward) >= ori(rewards[msg.sender])",
            "ori(currentEpochReward) > ori(rewards[msg.sender])",
            "ori(currentEpochReward) != ori(rewards[msg.sender])",
            "ori(currentEpochReward) >= ori(lastStakeTimes[msg.sender])",
            "ori(currentEpochReward) > ori(lastStakeTimes[msg.sender])",
            "ori(currentEpochReward) != ori(lastStakeTimes[msg.sender])",
            "ori(currentEpochReward) >= ori(starttime)",
            "ori(currentEpochReward) > ori(starttime)",
            "ori(currentEpochReward) != ori(starttime)",
            "ori(currentEpochReward) != amount",
            "ori(currentEpochReward) >= ori(Sum(rewards[...]))",
            "ori(currentEpochReward) > ori(Sum(rewards[...]))",
            "ori(currentEpochReward) != ori(Sum(rewards[...]))",
            "ori(currentEpochReward) >= msg.value",
            "ori(currentEpochReward) > msg.value",
            "ori(currentEpochReward) != msg.value",
            "ori(currentEpochReward) >= ori(periodFinish)",
            "ori(currentEpochReward) > ori(periodFinish)",
            "ori(currentEpochReward) != ori(periodFinish)",
            "ori(currentEpochReward) != ori(Sum(_balances[...]))",
            "ori(currentEpochReward) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(currentEpochReward) > ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(currentEpochReward) != ori(Sum(userRewardPerTokenPaid[...]))",
            "referrer != msg.sender",
            "referrer != ori(_owner)",
            "referrer != ori(rewardVote)",
            "referrer != ori(yfv)",
            "referrer != ori(rewardReferral)",
            "referrer != ori(vUSD)",
            "referrer != ori(vETH)",
            "msg.sender != ori(rewardVote)",
            "msg.sender != ori(yfv)",
            "msg.sender != ori(rewardReferral)",
            "msg.sender != ori(vUSD)",
            "msg.sender != ori(vETH)",
            "ori(_owner) != ori(rewardVote)",
            "ori(_owner) != ori(yfv)",
            "ori(_owner) != ori(rewardReferral)",
            "ori(_owner) != ori(vUSD)",
            "ori(_owner) != ori(vETH)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(_totalSupply)",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(lastUpdateTime)",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(lastUpdateTime)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(lastUpdateTime)",
            "ori(vETH_REWARD_FRACTION_RATE) <= ori(totalAccumulatedReward)",
            "ori(vETH_REWARD_FRACTION_RATE) < ori(totalAccumulatedReward)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(totalAccumulatedReward)",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(currentEpoch)",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(currentEpoch)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(currentEpoch)",
            "ori(vETH_REWARD_FRACTION_RATE) <= ori(rewardRate)",
            "ori(vETH_REWARD_FRACTION_RATE) < ori(rewardRate)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(rewardRate)",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(rewardPerTokenStored)",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(Sum(lastStakeTimes[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(Sum(lastStakeTimes[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(Sum(lastStakeTimes[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(Sum(accumulatedStakingPower[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(rewards[msg.sender])",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(lastStakeTimes[msg.sender])",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(lastStakeTimes[msg.sender])",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(lastStakeTimes[msg.sender])",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(starttime)",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(starttime)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(starttime)",
            "ori(vETH_REWARD_FRACTION_RATE) <= amount",
            "ori(vETH_REWARD_FRACTION_RATE) < amount",
            "ori(vETH_REWARD_FRACTION_RATE) != amount",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(Sum(rewards[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) >= msg.value",
            "ori(vETH_REWARD_FRACTION_RATE) > msg.value",
            "ori(vETH_REWARD_FRACTION_RATE) != msg.value",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(periodFinish)",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(periodFinish)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(periodFinish)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(Sum(_balances[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(rewardVote) != ori(yfv)",
            "ori(rewardVote) != ori(rewardReferral)",
            "ori(rewardVote) != ori(vUSD)",
            "ori(rewardVote) != ori(vETH)",
            "ori(_totalSupply) != ori(lastUpdateTime)",
            "ori(_totalSupply) != ori(totalAccumulatedReward)",
            "ori(_totalSupply) >= ori(currentEpoch)",
            "ori(_totalSupply) != ori(rewardRate)",
            "ori(_totalSupply) != ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(_totalSupply) >= ori(rewardPerTokenStored)",
            "ori(_totalSupply) >= ori(Sum(lastStakeTimes[...]))",
            "ori(_totalSupply) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(_totalSupply) >= ori(rewards[msg.sender])",
            "ori(_totalSupply) >= ori(lastStakeTimes[msg.sender])",
            "ori(_totalSupply) != ori(starttime)",
            "ori(_totalSupply) != amount",
            "ori(_totalSupply) >= ori(Sum(rewards[...]))",
            "ori(_totalSupply) >= msg.value",
            "ori(_totalSupply) != ori(periodFinish)",
            "ori(_totalSupply) == ori(Sum(_balances[...]))",
            "ori(_totalSupply) >= ori(Sum(_balances[...]))",
            "ori(_totalSupply) <= ori(Sum(_balances[...]))",
            "ori(_totalSupply) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(lastUpdateTime) <= ori(totalAccumulatedReward)",
            "ori(lastUpdateTime) < ori(totalAccumulatedReward)",
            "ori(lastUpdateTime) != ori(totalAccumulatedReward)",
            "ori(lastUpdateTime) >= ori(currentEpoch)",
            "ori(lastUpdateTime) > ori(currentEpoch)",
            "ori(lastUpdateTime) != ori(currentEpoch)",
            "ori(lastUpdateTime) <= ori(rewardRate)",
            "ori(lastUpdateTime) < ori(rewardRate)",
            "ori(lastUpdateTime) != ori(rewardRate)",
            "ori(lastUpdateTime) <= ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(lastUpdateTime) < ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(lastUpdateTime) != ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(lastUpdateTime) != ori(rewardPerTokenStored)",
            "ori(lastUpdateTime) != ori(Sum(accumulatedStakingPower[...]))",
            "ori(lastUpdateTime) != ori(rewards[msg.sender])",
            "ori(lastUpdateTime) >= ori(lastStakeTimes[msg.sender])",
            "ori(lastUpdateTime) != ori(starttime)",
            "ori(lastUpdateTime) <= amount",
            "ori(lastUpdateTime) < amount",
            "ori(lastUpdateTime) != amount",
            "ori(lastUpdateTime) != ori(Sum(rewards[...]))",
            "ori(lastUpdateTime) >= msg.value",
            "ori(lastUpdateTime) > msg.value",
            "ori(lastUpdateTime) != msg.value",
            "ori(lastUpdateTime) <= ori(periodFinish)",
            "ori(lastUpdateTime) < ori(periodFinish)",
            "ori(lastUpdateTime) != ori(periodFinish)",
            "ori(lastUpdateTime) != ori(Sum(_balances[...]))",
            "ori(lastUpdateTime) != ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(totalAccumulatedReward) >= ori(currentEpoch)",
            "ori(totalAccumulatedReward) > ori(currentEpoch)",
            "ori(totalAccumulatedReward) != ori(currentEpoch)",
            "ori(totalAccumulatedReward) >= ori(rewardRate)",
            "ori(totalAccumulatedReward) > ori(rewardRate)",
            "ori(totalAccumulatedReward) != ori(rewardRate)",
            "ori(totalAccumulatedReward) >= ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(totalAccumulatedReward) > ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(totalAccumulatedReward) != ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(totalAccumulatedReward) >= ori(rewardPerTokenStored)",
            "ori(totalAccumulatedReward) > ori(rewardPerTokenStored)",
            "ori(totalAccumulatedReward) != ori(rewardPerTokenStored)",
            "ori(totalAccumulatedReward) >= ori(Sum(lastStakeTimes[...]))",
            "ori(totalAccumulatedReward) > ori(Sum(lastStakeTimes[...]))",
            "ori(totalAccumulatedReward) != ori(Sum(lastStakeTimes[...]))",
            "ori(totalAccumulatedReward) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(totalAccumulatedReward) > ori(Sum(accumulatedStakingPower[...]))",
            "ori(totalAccumulatedReward) != ori(Sum(accumulatedStakingPower[...]))",
            "ori(totalAccumulatedReward) >= ori(rewards[msg.sender])",
            "ori(totalAccumulatedReward) > ori(rewards[msg.sender])",
            "ori(totalAccumulatedReward) != ori(rewards[msg.sender])",
            "ori(totalAccumulatedReward) >= ori(lastStakeTimes[msg.sender])",
            "ori(totalAccumulatedReward) > ori(lastStakeTimes[msg.sender])",
            "ori(totalAccumulatedReward) != ori(lastStakeTimes[msg.sender])",
            "ori(totalAccumulatedReward) >= ori(starttime)",
            "ori(totalAccumulatedReward) > ori(starttime)",
            "ori(totalAccumulatedReward) != ori(starttime)",
            "ori(totalAccumulatedReward) != amount",
            "ori(totalAccumulatedReward) >= ori(Sum(rewards[...]))",
            "ori(totalAccumulatedReward) > ori(Sum(rewards[...]))",
            "ori(totalAccumulatedReward) != ori(Sum(rewards[...]))",
            "ori(totalAccumulatedReward) >= msg.value",
            "ori(totalAccumulatedReward) > msg.value",
            "ori(totalAccumulatedReward) != msg.value",
            "ori(totalAccumulatedReward) >= ori(periodFinish)",
            "ori(totalAccumulatedReward) > ori(periodFinish)",
            "ori(totalAccumulatedReward) != ori(periodFinish)",
            "ori(totalAccumulatedReward) != ori(Sum(_balances[...]))",
            "ori(totalAccumulatedReward) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(totalAccumulatedReward) > ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(totalAccumulatedReward) != ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(currentEpoch) <= ori(rewardRate)",
            "ori(currentEpoch) < ori(rewardRate)",
            "ori(currentEpoch) != ori(rewardRate)",
            "ori(currentEpoch) <= ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(currentEpoch) < ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(currentEpoch) != ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(currentEpoch) <= ori(rewardPerTokenStored)",
            "ori(currentEpoch) <= ori(Sum(lastStakeTimes[...]))",
            "ori(currentEpoch) <= ori(starttime)",
            "ori(currentEpoch) < ori(starttime)",
            "ori(currentEpoch) != ori(starttime)",
            "ori(currentEpoch) <= amount",
            "ori(currentEpoch) < amount",
            "ori(currentEpoch) != amount",
            "ori(currentEpoch) >= msg.value",
            "ori(currentEpoch) <= ori(periodFinish)",
            "ori(currentEpoch) < ori(periodFinish)",
            "ori(currentEpoch) != ori(periodFinish)",
            "ori(currentEpoch) <= ori(Sum(_balances[...]))",
            "ori(currentEpoch) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(rewardRate) >= ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(rewardRate) > ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(rewardRate) != ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(rewardRate) != ori(rewardPerTokenStored)",
            "ori(rewardRate) >= ori(Sum(lastStakeTimes[...]))",
            "ori(rewardRate) > ori(Sum(lastStakeTimes[...]))",
            "ori(rewardRate) != ori(Sum(lastStakeTimes[...]))",
            "ori(rewardRate) != ori(Sum(accumulatedStakingPower[...]))",
            "ori(rewardRate) != ori(rewards[msg.sender])",
            "ori(rewardRate) >= ori(lastStakeTimes[msg.sender])",
            "ori(rewardRate) > ori(lastStakeTimes[msg.sender])",
            "ori(rewardRate) != ori(lastStakeTimes[msg.sender])",
            "ori(rewardRate) >= ori(starttime)",
            "ori(rewardRate) > ori(starttime)",
            "ori(rewardRate) != ori(starttime)",
            "ori(rewardRate) <= amount",
            "ori(rewardRate) < amount",
            "ori(rewardRate) != amount",
            "ori(rewardRate) != ori(Sum(rewards[...]))",
            "ori(rewardRate) >= msg.value",
            "ori(rewardRate) > msg.value",
            "ori(rewardRate) != msg.value",
            "ori(rewardRate) >= ori(periodFinish)",
            "ori(rewardRate) > ori(periodFinish)",
            "ori(rewardRate) != ori(periodFinish)",
            "ori(rewardRate) != ori(Sum(_balances[...]))",
            "ori(rewardRate) != ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) != ori(rewardPerTokenStored)",
            "ori(vUSD_REWARD_FRACTION_RATE) != ori(Sum(lastStakeTimes[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) != ori(Sum(accumulatedStakingPower[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) != ori(rewards[msg.sender])",
            "ori(vUSD_REWARD_FRACTION_RATE) >= ori(lastStakeTimes[msg.sender])",
            "ori(vUSD_REWARD_FRACTION_RATE) > ori(lastStakeTimes[msg.sender])",
            "ori(vUSD_REWARD_FRACTION_RATE) != ori(lastStakeTimes[msg.sender])",
            "ori(vUSD_REWARD_FRACTION_RATE) >= ori(starttime)",
            "ori(vUSD_REWARD_FRACTION_RATE) > ori(starttime)",
            "ori(vUSD_REWARD_FRACTION_RATE) != ori(starttime)",
            "ori(vUSD_REWARD_FRACTION_RATE) <= amount",
            "ori(vUSD_REWARD_FRACTION_RATE) < amount",
            "ori(vUSD_REWARD_FRACTION_RATE) != amount",
            "ori(vUSD_REWARD_FRACTION_RATE) != ori(Sum(rewards[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) >= msg.value",
            "ori(vUSD_REWARD_FRACTION_RATE) > msg.value",
            "ori(vUSD_REWARD_FRACTION_RATE) != msg.value",
            "ori(vUSD_REWARD_FRACTION_RATE) >= ori(periodFinish)",
            "ori(vUSD_REWARD_FRACTION_RATE) > ori(periodFinish)",
            "ori(vUSD_REWARD_FRACTION_RATE) != ori(periodFinish)",
            "ori(vUSD_REWARD_FRACTION_RATE) != ori(Sum(_balances[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) != ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(rewardPerTokenStored) >= ori(lastStakeTimes[msg.sender])",
            "ori(rewardPerTokenStored) != ori(starttime)",
            "ori(rewardPerTokenStored) <= amount",
            "ori(rewardPerTokenStored) < amount",
            "ori(rewardPerTokenStored) != amount",
            "ori(rewardPerTokenStored) >= msg.value",
            "ori(rewardPerTokenStored) != ori(periodFinish)",
            "ori(rewardPerTokenStored) <= ori(Sum(_balances[...]))",
            "ori(rewardPerTokenStored) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(lastStakeTimes[...])) >= ori(lastStakeTimes[msg.sender])",
            "ori(Sum(lastStakeTimes[...])) != ori(starttime)",
            "ori(Sum(lastStakeTimes[...])) <= amount",
            "ori(Sum(lastStakeTimes[...])) < amount",
            "ori(Sum(lastStakeTimes[...])) != amount",
            "ori(Sum(lastStakeTimes[...])) >= msg.value",
            "ori(Sum(lastStakeTimes[...])) != ori(periodFinish)",
            "ori(Sum(lastStakeTimes[...])) <= ori(Sum(_balances[...]))",
            "ori(Sum(accumulatedStakingPower[...])) != ori(starttime)",
            "ori(Sum(accumulatedStakingPower[...])) != amount",
            "ori(Sum(accumulatedStakingPower[...])) >= msg.value",
            "ori(Sum(accumulatedStakingPower[...])) != ori(periodFinish)",
            "ori(Sum(accumulatedStakingPower[...])) <= ori(Sum(_balances[...]))",
            "ori(rewards[msg.sender]) != ori(starttime)",
            "ori(rewards[msg.sender]) <= amount",
            "ori(rewards[msg.sender]) < amount",
            "ori(rewards[msg.sender]) != amount",
            "ori(rewards[msg.sender]) <= ori(Sum(rewards[...]))",
            "ori(rewards[msg.sender]) >= msg.value",
            "ori(rewards[msg.sender]) != ori(periodFinish)",
            "ori(rewards[msg.sender]) <= ori(Sum(_balances[...]))",
            "ori(lastStakeTimes[msg.sender]) != ori(starttime)",
            "ori(lastStakeTimes[msg.sender]) <= amount",
            "ori(lastStakeTimes[msg.sender]) < amount",
            "ori(lastStakeTimes[msg.sender]) != amount",
            "ori(lastStakeTimes[msg.sender]) >= msg.value",
            "ori(lastStakeTimes[msg.sender]) <= ori(periodFinish)",
            "ori(lastStakeTimes[msg.sender]) < ori(periodFinish)",
            "ori(lastStakeTimes[msg.sender]) != ori(periodFinish)",
            "ori(lastStakeTimes[msg.sender]) <= ori(Sum(_balances[...]))",
            "ori(lastStakeTimes[msg.sender]) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(yfv) != ori(rewardReferral)",
            "ori(yfv) != ori(vUSD)",
            "ori(yfv) != ori(vETH)",
            "ori(starttime) <= amount",
            "ori(starttime) < amount",
            "ori(starttime) != amount",
            "ori(starttime) != ori(Sum(rewards[...]))",
            "ori(starttime) >= msg.value",
            "ori(starttime) > msg.value",
            "ori(starttime) != msg.value",
            "ori(starttime) <= ori(periodFinish)",
            "ori(starttime) != ori(Sum(_balances[...]))",
            "ori(starttime) != ori(Sum(userRewardPerTokenPaid[...]))",
            "amount != ori(Sum(rewards[...]))",
            "amount >= msg.value",
            "amount > msg.value",
            "amount != msg.value",
            "amount >= ori(periodFinish)",
            "amount > ori(periodFinish)",
            "amount != ori(periodFinish)",
            "amount != ori(Sum(_balances[...]))",
            "amount != ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(rewards[...])) >= msg.value",
            "ori(Sum(rewards[...])) != ori(periodFinish)",
            "ori(Sum(rewards[...])) <= ori(Sum(_balances[...]))",
            "ori(rewardReferral) != ori(vUSD)",
            "ori(rewardReferral) != ori(vETH)",
            "ori(vUSD) != ori(vETH)",
            "msg.value <= ori(periodFinish)",
            "msg.value < ori(periodFinish)",
            "msg.value != ori(periodFinish)",
            "msg.value <= ori(Sum(_balances[...]))",
            "msg.value <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(periodFinish) != ori(Sum(_balances[...]))",
            "ori(periodFinish) != ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(_balances[...])) >= ori(Sum(userRewardPerTokenPaid[...]))"
        ],
        "postconditions": [
            "_totalSupply > 0",
            "vUSD != 0",
            "lastUpdateTime > 0",
            "_balances[msg.sender] > 0",
            "rewardVote != 0",
            "currentEpoch one of [0,1]",
            "_owner != 0",
            "elem of accumulatedStakingPower[...] is one of [0]",
            "yfv != 0",
            "periodFinish > 0",
            "periodFinish one of [1598018400,1598623238]",
            "rewardRate > 0",
            "rewardRate one of [107353730542136,104166666666666666]",
            "elem of lastStakeTimes[...] is one of [284451098626]",
            "lastStakeTimes[msg.sender] > 0",
            "elem of userRewardPerTokenPaid[...] is one of [0]",
            "Sum(_balances[...]) > 0",
            "elem of _balances[...] is one of [81292484641250684839503]",
            "rewardReferral != 0",
            "starttime > 0",
            "starttime == 1598018400",
            "starttime one of [1598018400]",
            "vETH_REWARD_FRACTION_RATE > 0",
            "vETH_REWARD_FRACTION_RATE == 21000000000000",
            "vETH_REWARD_FRACTION_RATE one of [21000000000000]",
            "currentEpochReward > 0",
            "currentEpochReward one of [888888888888888888,63000000000000000000000]",
            "Sum(lastStakeTimes[...]) > 0",
            "vETH != 0",
            "vUSD_REWARD_FRACTION_RATE > 0",
            "vUSD_REWARD_FRACTION_RATE == 21000000000",
            "vUSD_REWARD_FRACTION_RATE one of [21000000000]",
            "elem of rewards[...] is one of [0]",
            "totalAccumulatedReward > 0",
            "totalAccumulatedReward one of [888888888888888888,63000888888888888888888]",
            "Sum(accumulatedStakingPower[...]) <= _totalSupply",
            "Sum(accumulatedStakingPower[...]) < _totalSupply",
            "Sum(accumulatedStakingPower[...]) != _totalSupply",
            "Sum(accumulatedStakingPower[...]) != lastUpdateTime",
            "Sum(accumulatedStakingPower[...]) != _balances[msg.sender]",
            "Sum(accumulatedStakingPower[...]) <= ori(currentEpochReward)",
            "Sum(accumulatedStakingPower[...]) < ori(currentEpochReward)",
            "Sum(accumulatedStakingPower[...]) != ori(currentEpochReward)",
            "Sum(accumulatedStakingPower[...]) != ori(vETH_REWARD_FRACTION_RATE)",
            "Sum(accumulatedStakingPower[...]) != periodFinish",
            "Sum(accumulatedStakingPower[...]) != rewardRate",
            "Sum(accumulatedStakingPower[...]) != lastStakeTimes[msg.sender]",
            "Sum(accumulatedStakingPower[...]) <= ori(_totalSupply)",
            "Sum(accumulatedStakingPower[...]) != ori(lastUpdateTime)",
            "Sum(accumulatedStakingPower[...]) <= Sum(_balances[...])",
            "Sum(accumulatedStakingPower[...]) < Sum(_balances[...])",
            "Sum(accumulatedStakingPower[...]) != Sum(_balances[...])",
            "Sum(accumulatedStakingPower[...]) <= ori(totalAccumulatedReward)",
            "Sum(accumulatedStakingPower[...]) < ori(totalAccumulatedReward)",
            "Sum(accumulatedStakingPower[...]) != ori(totalAccumulatedReward)",
            "Sum(accumulatedStakingPower[...]) != ori(rewardRate)",
            "Sum(accumulatedStakingPower[...]) != ori(vUSD_REWARD_FRACTION_RATE)",
            "Sum(accumulatedStakingPower[...]) != starttime",
            "Sum(accumulatedStakingPower[...]) == ori(Sum(accumulatedStakingPower[...]))",
            "Sum(accumulatedStakingPower[...]) >= ori(Sum(accumulatedStakingPower[...]))",
            "Sum(accumulatedStakingPower[...]) <= ori(Sum(accumulatedStakingPower[...]))",
            "Sum(accumulatedStakingPower[...]) != ori(starttime)",
            "Sum(accumulatedStakingPower[...]) != vETH_REWARD_FRACTION_RATE",
            "Sum(accumulatedStakingPower[...]) <= currentEpochReward",
            "Sum(accumulatedStakingPower[...]) < currentEpochReward",
            "Sum(accumulatedStakingPower[...]) != currentEpochReward",
            "Sum(accumulatedStakingPower[...]) != amount",
            "Sum(accumulatedStakingPower[...]) != Sum(lastStakeTimes[...])",
            "Sum(accumulatedStakingPower[...]) >= msg.value",
            "Sum(accumulatedStakingPower[...]) != ori(periodFinish)",
            "Sum(accumulatedStakingPower[...]) != vUSD_REWARD_FRACTION_RATE",
            "Sum(accumulatedStakingPower[...]) <= ori(Sum(_balances[...]))",
            "Sum(accumulatedStakingPower[...]) <= totalAccumulatedReward",
            "Sum(accumulatedStakingPower[...]) < totalAccumulatedReward",
            "Sum(accumulatedStakingPower[...]) != totalAccumulatedReward",
            "ori(_balances[msg.sender]) <= _totalSupply",
            "ori(_balances[msg.sender]) < _totalSupply",
            "ori(_balances[msg.sender]) != _totalSupply",
            "ori(_balances[msg.sender]) != lastUpdateTime",
            "ori(_balances[msg.sender]) <= _balances[msg.sender]",
            "ori(_balances[msg.sender]) < _balances[msg.sender]",
            "ori(_balances[msg.sender]) != _balances[msg.sender]",
            "ori(_balances[msg.sender]) != periodFinish",
            "ori(_balances[msg.sender]) != rewardRate",
            "ori(_balances[msg.sender]) != lastStakeTimes[msg.sender]",
            "ori(_balances[msg.sender]) >= rewards[msg.sender]",
            "ori(_balances[msg.sender]) <= Sum(_balances[...])",
            "ori(_balances[msg.sender]) < Sum(_balances[...])",
            "ori(_balances[msg.sender]) != Sum(_balances[...])",
            "ori(_balances[msg.sender]) != starttime",
            "ori(_balances[msg.sender]) != vETH_REWARD_FRACTION_RATE",
            "ori(_balances[msg.sender]) <= currentEpochReward",
            "ori(_balances[msg.sender]) < currentEpochReward",
            "ori(_balances[msg.sender]) != currentEpochReward",
            "ori(_balances[msg.sender]) != Sum(lastStakeTimes[...])",
            "ori(_balances[msg.sender]) != vUSD_REWARD_FRACTION_RATE",
            "ori(_balances[msg.sender]) <= totalAccumulatedReward",
            "ori(_balances[msg.sender]) < totalAccumulatedReward",
            "ori(_balances[msg.sender]) != totalAccumulatedReward",
            "_totalSupply >= lastUpdateTime",
            "_totalSupply > lastUpdateTime",
            "_totalSupply != lastUpdateTime",
            "_totalSupply >= _balances[msg.sender]",
            "_totalSupply != ori(currentEpochReward)",
            "_totalSupply >= currentEpoch",
            "_totalSupply > currentEpoch",
            "_totalSupply != currentEpoch",
            "_totalSupply >= ori(vETH_REWARD_FRACTION_RATE)",
            "_totalSupply > ori(vETH_REWARD_FRACTION_RATE)",
            "_totalSupply != ori(vETH_REWARD_FRACTION_RATE)",
            "_totalSupply >= periodFinish",
            "_totalSupply > periodFinish",
            "_totalSupply != periodFinish",
            "_totalSupply >= rewardRate",
            "_totalSupply > rewardRate",
            "_totalSupply != rewardRate",
            "_totalSupply >= lastStakeTimes[msg.sender]",
            "_totalSupply > lastStakeTimes[msg.sender]",
            "_totalSupply != lastStakeTimes[msg.sender]",
            "_totalSupply >= rewards[msg.sender]",
            "_totalSupply > rewards[msg.sender]",
            "_totalSupply != rewards[msg.sender]",
            "_totalSupply >= ori(_totalSupply)",
            "_totalSupply > ori(_totalSupply)",
            "_totalSupply != ori(_totalSupply)",
            "_totalSupply >= ori(lastUpdateTime)",
            "_totalSupply > ori(lastUpdateTime)",
            "_totalSupply != ori(lastUpdateTime)",
            "_totalSupply >= rewardPerTokenStored",
            "_totalSupply > rewardPerTokenStored",
            "_totalSupply != rewardPerTokenStored",
            "_totalSupply == Sum(_balances[...])",
            "_totalSupply >= Sum(_balances[...])",
            "_totalSupply <= Sum(_balances[...])",
            "_totalSupply != ori(totalAccumulatedReward)",
            "_totalSupply >= ori(currentEpoch)",
            "_totalSupply > ori(currentEpoch)",
            "_totalSupply != ori(currentEpoch)",
            "_totalSupply >= ori(rewardRate)",
            "_totalSupply > ori(rewardRate)",
            "_totalSupply != ori(rewardRate)",
            "_totalSupply >= ori(vUSD_REWARD_FRACTION_RATE)",
            "_totalSupply > ori(vUSD_REWARD_FRACTION_RATE)",
            "_totalSupply != ori(vUSD_REWARD_FRACTION_RATE)",
            "_totalSupply >= ori(rewardPerTokenStored)",
            "_totalSupply > ori(rewardPerTokenStored)",
            "_totalSupply != ori(rewardPerTokenStored)",
            "_totalSupply >= starttime",
            "_totalSupply > starttime",
            "_totalSupply != starttime",
            "_totalSupply >= ori(Sum(lastStakeTimes[...]))",
            "_totalSupply > ori(Sum(lastStakeTimes[...]))",
            "_totalSupply != ori(Sum(lastStakeTimes[...]))",
            "_totalSupply >= ori(Sum(accumulatedStakingPower[...]))",
            "_totalSupply > ori(Sum(accumulatedStakingPower[...]))",
            "_totalSupply != ori(Sum(accumulatedStakingPower[...]))",
            "_totalSupply >= ori(rewards[msg.sender])",
            "_totalSupply > ori(rewards[msg.sender])",
            "_totalSupply != ori(rewards[msg.sender])",
            "_totalSupply >= ori(lastStakeTimes[msg.sender])",
            "_totalSupply > ori(lastStakeTimes[msg.sender])",
            "_totalSupply != ori(lastStakeTimes[msg.sender])",
            "_totalSupply >= ori(starttime)",
            "_totalSupply > ori(starttime)",
            "_totalSupply != ori(starttime)",
            "_totalSupply >= vETH_REWARD_FRACTION_RATE",
            "_totalSupply > vETH_REWARD_FRACTION_RATE",
            "_totalSupply != vETH_REWARD_FRACTION_RATE",
            "_totalSupply != currentEpochReward",
            "_totalSupply >= amount",
            "_totalSupply >= Sum(userRewardPerTokenPaid[...])",
            "_totalSupply > Sum(userRewardPerTokenPaid[...])",
            "_totalSupply != Sum(userRewardPerTokenPaid[...])",
            "_totalSupply >= ori(Sum(rewards[...]))",
            "_totalSupply > ori(Sum(rewards[...]))",
            "_totalSupply != ori(Sum(rewards[...]))",
            "_totalSupply >= Sum(lastStakeTimes[...])",
            "_totalSupply > Sum(lastStakeTimes[...])",
            "_totalSupply != Sum(lastStakeTimes[...])",
            "_totalSupply >= msg.value",
            "_totalSupply > msg.value",
            "_totalSupply != msg.value",
            "_totalSupply >= Sum(rewards[...])",
            "_totalSupply > Sum(rewards[...])",
            "_totalSupply != Sum(rewards[...])",
            "_totalSupply >= ori(periodFinish)",
            "_totalSupply > ori(periodFinish)",
            "_totalSupply != ori(periodFinish)",
            "_totalSupply >= vUSD_REWARD_FRACTION_RATE",
            "_totalSupply > vUSD_REWARD_FRACTION_RATE",
            "_totalSupply != vUSD_REWARD_FRACTION_RATE",
            "_totalSupply >= ori(Sum(_balances[...]))",
            "_totalSupply > ori(Sum(_balances[...]))",
            "_totalSupply != ori(Sum(_balances[...]))",
            "_totalSupply >= ori(Sum(userRewardPerTokenPaid[...]))",
            "_totalSupply > ori(Sum(userRewardPerTokenPaid[...]))",
            "_totalSupply != ori(Sum(userRewardPerTokenPaid[...]))",
            "_totalSupply != totalAccumulatedReward",
            "vUSD != rewardVote",
            "vUSD != referrer",
            "vUSD != msg.sender",
            "vUSD != _owner",
            "vUSD != ori(_owner)",
            "vUSD != yfv",
            "vUSD != ori(rewardVote)",
            "vUSD != rewardReferral",
            "vUSD != ori(yfv)",
            "vUSD != ori(rewardReferral)",
            "vUSD == ori(vUSD)",
            "vUSD != vETH",
            "vUSD != ori(vETH)",
            "lastUpdateTime <= _balances[msg.sender]",
            "lastUpdateTime < _balances[msg.sender]",
            "lastUpdateTime != _balances[msg.sender]",
            "lastUpdateTime <= ori(currentEpochReward)",
            "lastUpdateTime < ori(currentEpochReward)",
            "lastUpdateTime != ori(currentEpochReward)",
            "lastUpdateTime >= currentEpoch",
            "lastUpdateTime > currentEpoch",
            "lastUpdateTime != currentEpoch",
            "lastUpdateTime <= ori(vETH_REWARD_FRACTION_RATE)",
            "lastUpdateTime < ori(vETH_REWARD_FRACTION_RATE)",
            "lastUpdateTime != ori(vETH_REWARD_FRACTION_RATE)",
            "lastUpdateTime <= periodFinish",
            "lastUpdateTime < periodFinish",
            "lastUpdateTime != periodFinish",
            "lastUpdateTime <= rewardRate",
            "lastUpdateTime < rewardRate",
            "lastUpdateTime != rewardRate",
            "lastUpdateTime == lastStakeTimes[msg.sender]",
            "lastUpdateTime >= lastStakeTimes[msg.sender]",
            "lastUpdateTime <= lastStakeTimes[msg.sender]",
            "lastUpdateTime != rewards[msg.sender]",
            "lastUpdateTime != ori(_totalSupply)",
            "lastUpdateTime >= ori(lastUpdateTime)",
            "lastUpdateTime != rewardPerTokenStored",
            "lastUpdateTime <= Sum(_balances[...])",
            "lastUpdateTime < Sum(_balances[...])",
            "lastUpdateTime != Sum(_balances[...])",
            "lastUpdateTime <= ori(totalAccumulatedReward)",
            "lastUpdateTime < ori(totalAccumulatedReward)",
            "lastUpdateTime != ori(totalAccumulatedReward)",
            "lastUpdateTime >= ori(currentEpoch)",
            "lastUpdateTime > ori(currentEpoch)",
            "lastUpdateTime != ori(currentEpoch)",
            "lastUpdateTime <= ori(rewardRate)",
            "lastUpdateTime < ori(rewardRate)",
            "lastUpdateTime != ori(rewardRate)",
            "lastUpdateTime <= ori(vUSD_REWARD_FRACTION_RATE)",
            "lastUpdateTime < ori(vUSD_REWARD_FRACTION_RATE)",
            "lastUpdateTime != ori(vUSD_REWARD_FRACTION_RATE)",
            "lastUpdateTime != ori(rewardPerTokenStored)",
            "lastUpdateTime != starttime",
            "lastUpdateTime != ori(Sum(lastStakeTimes[...]))",
            "lastUpdateTime != ori(Sum(accumulatedStakingPower[...]))",
            "lastUpdateTime != ori(rewards[msg.sender])",
            "lastUpdateTime >= ori(lastStakeTimes[msg.sender])",
            "lastUpdateTime != ori(starttime)",
            "lastUpdateTime <= vETH_REWARD_FRACTION_RATE",
            "lastUpdateTime < vETH_REWARD_FRACTION_RATE",
            "lastUpdateTime != vETH_REWARD_FRACTION_RATE",
            "lastUpdateTime <= currentEpochReward",
            "lastUpdateTime < currentEpochReward",
            "lastUpdateTime != currentEpochReward",
            "lastUpdateTime <= amount",
            "lastUpdateTime < amount",
            "lastUpdateTime != amount",
            "lastUpdateTime != Sum(userRewardPerTokenPaid[...])",
            "lastUpdateTime != ori(Sum(rewards[...]))",
            "lastUpdateTime <= Sum(lastStakeTimes[...])",
            "lastUpdateTime >= msg.value",
            "lastUpdateTime > msg.value",
            "lastUpdateTime != msg.value",
            "lastUpdateTime != Sum(rewards[...])",
            "lastUpdateTime != ori(periodFinish)",
            "lastUpdateTime <= vUSD_REWARD_FRACTION_RATE",
            "lastUpdateTime < vUSD_REWARD_FRACTION_RATE",
            "lastUpdateTime != vUSD_REWARD_FRACTION_RATE",
            "lastUpdateTime != ori(Sum(_balances[...]))",
            "lastUpdateTime != ori(Sum(userRewardPerTokenPaid[...]))",
            "lastUpdateTime <= totalAccumulatedReward",
            "lastUpdateTime < totalAccumulatedReward",
            "lastUpdateTime != totalAccumulatedReward",
            "_balances[msg.sender] != ori(currentEpochReward)",
            "_balances[msg.sender] >= currentEpoch",
            "_balances[msg.sender] > currentEpoch",
            "_balances[msg.sender] != currentEpoch",
            "_balances[msg.sender] >= ori(vETH_REWARD_FRACTION_RATE)",
            "_balances[msg.sender] > ori(vETH_REWARD_FRACTION_RATE)",
            "_balances[msg.sender] != ori(vETH_REWARD_FRACTION_RATE)",
            "_balances[msg.sender] >= periodFinish",
            "_balances[msg.sender] > periodFinish",
            "_balances[msg.sender] != periodFinish",
            "_balances[msg.sender] >= rewardRate",
            "_balances[msg.sender] > rewardRate",
            "_balances[msg.sender] != rewardRate",
            "_balances[msg.sender] >= lastStakeTimes[msg.sender]",
            "_balances[msg.sender] > lastStakeTimes[msg.sender]",
            "_balances[msg.sender] != lastStakeTimes[msg.sender]",
            "_balances[msg.sender] >= rewards[msg.sender]",
            "_balances[msg.sender] > rewards[msg.sender]",
            "_balances[msg.sender] != rewards[msg.sender]",
            "_balances[msg.sender] != ori(_totalSupply)",
            "_balances[msg.sender] >= ori(lastUpdateTime)",
            "_balances[msg.sender] > ori(lastUpdateTime)",
            "_balances[msg.sender] != ori(lastUpdateTime)",
            "_balances[msg.sender] >= rewardPerTokenStored",
            "_balances[msg.sender] > rewardPerTokenStored",
            "_balances[msg.sender] != rewardPerTokenStored",
            "_balances[msg.sender] <= Sum(_balances[...])",
            "_balances[msg.sender] != ori(totalAccumulatedReward)",
            "_balances[msg.sender] >= ori(currentEpoch)",
            "_balances[msg.sender] > ori(currentEpoch)",
            "_balances[msg.sender] != ori(currentEpoch)",
            "_balances[msg.sender] >= ori(rewardRate)",
            "_balances[msg.sender] > ori(rewardRate)",
            "_balances[msg.sender] != ori(rewardRate)",
            "_balances[msg.sender] >= ori(vUSD_REWARD_FRACTION_RATE)",
            "_balances[msg.sender] > ori(vUSD_REWARD_FRACTION_RATE)",
            "_balances[msg.sender] != ori(vUSD_REWARD_FRACTION_RATE)",
            "_balances[msg.sender] >= ori(rewardPerTokenStored)",
            "_balances[msg.sender] > ori(rewardPerTokenStored)",
            "_balances[msg.sender] != ori(rewardPerTokenStored)",
            "_balances[msg.sender] >= starttime",
            "_balances[msg.sender] > starttime",
            "_balances[msg.sender] != starttime",
            "_balances[msg.sender] >= ori(Sum(lastStakeTimes[...]))",
            "_balances[msg.sender] > ori(Sum(lastStakeTimes[...]))",
            "_balances[msg.sender] != ori(Sum(lastStakeTimes[...]))",
            "_balances[msg.sender] != ori(Sum(accumulatedStakingPower[...]))",
            "_balances[msg.sender] >= ori(rewards[msg.sender])",
            "_balances[msg.sender] > ori(rewards[msg.sender])",
            "_balances[msg.sender] != ori(rewards[msg.sender])",
            "_balances[msg.sender] >= ori(lastStakeTimes[msg.sender])",
            "_balances[msg.sender] > ori(lastStakeTimes[msg.sender])",
            "_balances[msg.sender] != ori(lastStakeTimes[msg.sender])",
            "_balances[msg.sender] >= ori(starttime)",
            "_balances[msg.sender] > ori(starttime)",
            "_balances[msg.sender] != ori(starttime)",
            "_balances[msg.sender] >= vETH_REWARD_FRACTION_RATE",
            "_balances[msg.sender] > vETH_REWARD_FRACTION_RATE",
            "_balances[msg.sender] != vETH_REWARD_FRACTION_RATE",
            "_balances[msg.sender] != currentEpochReward",
            "_balances[msg.sender] >= amount",
            "_balances[msg.sender] >= Sum(userRewardPerTokenPaid[...])",
            "_balances[msg.sender] > Sum(userRewardPerTokenPaid[...])",
            "_balances[msg.sender] != Sum(userRewardPerTokenPaid[...])",
            "_balances[msg.sender] != ori(Sum(rewards[...]))",
            "_balances[msg.sender] >= Sum(lastStakeTimes[...])",
            "_balances[msg.sender] > Sum(lastStakeTimes[...])",
            "_balances[msg.sender] != Sum(lastStakeTimes[...])",
            "_balances[msg.sender] >= msg.value",
            "_balances[msg.sender] > msg.value",
            "_balances[msg.sender] != msg.value",
            "_balances[msg.sender] != Sum(rewards[...])",
            "_balances[msg.sender] >= ori(periodFinish)",
            "_balances[msg.sender] > ori(periodFinish)",
            "_balances[msg.sender] != ori(periodFinish)",
            "_balances[msg.sender] >= vUSD_REWARD_FRACTION_RATE",
            "_balances[msg.sender] > vUSD_REWARD_FRACTION_RATE",
            "_balances[msg.sender] != vUSD_REWARD_FRACTION_RATE",
            "_balances[msg.sender] != ori(Sum(_balances[...]))",
            "_balances[msg.sender] >= ori(Sum(userRewardPerTokenPaid[...]))",
            "_balances[msg.sender] > ori(Sum(userRewardPerTokenPaid[...]))",
            "_balances[msg.sender] != ori(Sum(userRewardPerTokenPaid[...]))",
            "_balances[msg.sender] != totalAccumulatedReward",
            "ori(currentEpochReward) >= currentEpoch",
            "ori(currentEpochReward) > currentEpoch",
            "ori(currentEpochReward) != currentEpoch",
            "ori(currentEpochReward) >= periodFinish",
            "ori(currentEpochReward) > periodFinish",
            "ori(currentEpochReward) != periodFinish",
            "ori(currentEpochReward) >= rewardRate",
            "ori(currentEpochReward) > rewardRate",
            "ori(currentEpochReward) != rewardRate",
            "ori(currentEpochReward) >= lastStakeTimes[msg.sender]",
            "ori(currentEpochReward) > lastStakeTimes[msg.sender]",
            "ori(currentEpochReward) != lastStakeTimes[msg.sender]",
            "ori(currentEpochReward) >= rewards[msg.sender]",
            "ori(currentEpochReward) > rewards[msg.sender]",
            "ori(currentEpochReward) != rewards[msg.sender]",
            "ori(currentEpochReward) >= rewardPerTokenStored",
            "ori(currentEpochReward) > rewardPerTokenStored",
            "ori(currentEpochReward) != rewardPerTokenStored",
            "ori(currentEpochReward) != Sum(_balances[...])",
            "ori(currentEpochReward) >= starttime",
            "ori(currentEpochReward) > starttime",
            "ori(currentEpochReward) != starttime",
            "ori(currentEpochReward) >= vETH_REWARD_FRACTION_RATE",
            "ori(currentEpochReward) > vETH_REWARD_FRACTION_RATE",
            "ori(currentEpochReward) != vETH_REWARD_FRACTION_RATE",
            "ori(currentEpochReward) <= currentEpochReward",
            "ori(currentEpochReward) >= Sum(userRewardPerTokenPaid[...])",
            "ori(currentEpochReward) > Sum(userRewardPerTokenPaid[...])",
            "ori(currentEpochReward) != Sum(userRewardPerTokenPaid[...])",
            "ori(currentEpochReward) >= Sum(lastStakeTimes[...])",
            "ori(currentEpochReward) > Sum(lastStakeTimes[...])",
            "ori(currentEpochReward) != Sum(lastStakeTimes[...])",
            "ori(currentEpochReward) >= Sum(rewards[...])",
            "ori(currentEpochReward) > Sum(rewards[...])",
            "ori(currentEpochReward) != Sum(rewards[...])",
            "ori(currentEpochReward) >= vUSD_REWARD_FRACTION_RATE",
            "ori(currentEpochReward) > vUSD_REWARD_FRACTION_RATE",
            "ori(currentEpochReward) != vUSD_REWARD_FRACTION_RATE",
            "ori(currentEpochReward) <= totalAccumulatedReward",
            "rewardVote != referrer",
            "rewardVote != msg.sender",
            "rewardVote != _owner",
            "rewardVote != ori(_owner)",
            "rewardVote != yfv",
            "rewardVote == ori(rewardVote)",
            "rewardVote != rewardReferral",
            "rewardVote != ori(yfv)",
            "rewardVote != ori(rewardReferral)",
            "rewardVote != ori(vUSD)",
            "rewardVote != vETH",
            "rewardVote != ori(vETH)",
            "referrer != _owner",
            "referrer != yfv",
            "referrer != rewardReferral",
            "referrer != vETH",
            "msg.sender != yfv",
            "msg.sender != rewardReferral",
            "msg.sender != vETH",
            "currentEpoch <= ori(vETH_REWARD_FRACTION_RATE)",
            "currentEpoch < ori(vETH_REWARD_FRACTION_RATE)",
            "currentEpoch != ori(vETH_REWARD_FRACTION_RATE)",
            "currentEpoch <= periodFinish",
            "currentEpoch < periodFinish",
            "currentEpoch != periodFinish",
            "currentEpoch <= rewardRate",
            "currentEpoch < rewardRate",
            "currentEpoch != rewardRate",
            "currentEpoch <= lastStakeTimes[msg.sender]",
            "currentEpoch < lastStakeTimes[msg.sender]",
            "currentEpoch != lastStakeTimes[msg.sender]",
            "currentEpoch <= ori(_totalSupply)",
            "currentEpoch <= ori(lastUpdateTime)",
            "currentEpoch < ori(lastUpdateTime)",
            "currentEpoch != ori(lastUpdateTime)",
            "currentEpoch <= rewardPerTokenStored",
            "currentEpoch <= Sum(_balances[...])",
            "currentEpoch < Sum(_balances[...])",
            "currentEpoch != Sum(_balances[...])",
            "currentEpoch <= ori(totalAccumulatedReward)",
            "currentEpoch < ori(totalAccumulatedReward)",
            "currentEpoch != ori(totalAccumulatedReward)",
            "currentEpoch >= ori(currentEpoch)",
            "currentEpoch <= ori(rewardRate)",
            "currentEpoch < ori(rewardRate)",
            "currentEpoch != ori(rewardRate)",
            "currentEpoch <= ori(vUSD_REWARD_FRACTION_RATE)",
            "currentEpoch < ori(vUSD_REWARD_FRACTION_RATE)",
            "currentEpoch != ori(vUSD_REWARD_FRACTION_RATE)",
            "currentEpoch <= ori(rewardPerTokenStored)",
            "currentEpoch <= starttime",
            "currentEpoch < starttime",
            "currentEpoch != starttime",
            "currentEpoch <= ori(Sum(lastStakeTimes[...]))",
            "currentEpoch <= ori(starttime)",
            "currentEpoch < ori(starttime)",
            "currentEpoch != ori(starttime)",
            "currentEpoch <= vETH_REWARD_FRACTION_RATE",
            "currentEpoch < vETH_REWARD_FRACTION_RATE",
            "currentEpoch != vETH_REWARD_FRACTION_RATE",
            "currentEpoch <= currentEpochReward",
            "currentEpoch < currentEpochReward",
            "currentEpoch != currentEpochReward",
            "currentEpoch <= amount",
            "currentEpoch < amount",
            "currentEpoch != amount",
            "currentEpoch <= Sum(userRewardPerTokenPaid[...])",
            "currentEpoch <= Sum(lastStakeTimes[...])",
            "currentEpoch < Sum(lastStakeTimes[...])",
            "currentEpoch != Sum(lastStakeTimes[...])",
            "currentEpoch >= msg.value",
            "currentEpoch <= ori(periodFinish)",
            "currentEpoch < ori(periodFinish)",
            "currentEpoch != ori(periodFinish)",
            "currentEpoch <= vUSD_REWARD_FRACTION_RATE",
            "currentEpoch < vUSD_REWARD_FRACTION_RATE",
            "currentEpoch != vUSD_REWARD_FRACTION_RATE",
            "currentEpoch <= ori(Sum(_balances[...]))",
            "currentEpoch <= ori(Sum(userRewardPerTokenPaid[...]))",
            "currentEpoch <= totalAccumulatedReward",
            "currentEpoch < totalAccumulatedReward",
            "currentEpoch != totalAccumulatedReward",
            "_owner == ori(_owner)",
            "_owner != yfv",
            "_owner != ori(rewardVote)",
            "_owner != rewardReferral",
            "_owner != ori(yfv)",
            "_owner != ori(rewardReferral)",
            "_owner != ori(vUSD)",
            "_owner != vETH",
            "_owner != ori(vETH)",
            "ori(_owner) != yfv",
            "ori(_owner) != rewardReferral",
            "ori(_owner) != vETH",
            "ori(vETH_REWARD_FRACTION_RATE) >= periodFinish",
            "ori(vETH_REWARD_FRACTION_RATE) > periodFinish",
            "ori(vETH_REWARD_FRACTION_RATE) != periodFinish",
            "ori(vETH_REWARD_FRACTION_RATE) <= rewardRate",
            "ori(vETH_REWARD_FRACTION_RATE) < rewardRate",
            "ori(vETH_REWARD_FRACTION_RATE) != rewardRate",
            "ori(vETH_REWARD_FRACTION_RATE) >= lastStakeTimes[msg.sender]",
            "ori(vETH_REWARD_FRACTION_RATE) > lastStakeTimes[msg.sender]",
            "ori(vETH_REWARD_FRACTION_RATE) != lastStakeTimes[msg.sender]",
            "ori(vETH_REWARD_FRACTION_RATE) != rewards[msg.sender]",
            "ori(vETH_REWARD_FRACTION_RATE) != rewardPerTokenStored",
            "ori(vETH_REWARD_FRACTION_RATE) <= Sum(_balances[...])",
            "ori(vETH_REWARD_FRACTION_RATE) < Sum(_balances[...])",
            "ori(vETH_REWARD_FRACTION_RATE) != Sum(_balances[...])",
            "ori(vETH_REWARD_FRACTION_RATE) >= starttime",
            "ori(vETH_REWARD_FRACTION_RATE) > starttime",
            "ori(vETH_REWARD_FRACTION_RATE) != starttime",
            "ori(vETH_REWARD_FRACTION_RATE) == vETH_REWARD_FRACTION_RATE",
            "ori(vETH_REWARD_FRACTION_RATE) >= vETH_REWARD_FRACTION_RATE",
            "ori(vETH_REWARD_FRACTION_RATE) <= vETH_REWARD_FRACTION_RATE",
            "ori(vETH_REWARD_FRACTION_RATE) <= currentEpochReward",
            "ori(vETH_REWARD_FRACTION_RATE) < currentEpochReward",
            "ori(vETH_REWARD_FRACTION_RATE) != currentEpochReward",
            "ori(vETH_REWARD_FRACTION_RATE) != Sum(userRewardPerTokenPaid[...])",
            "ori(vETH_REWARD_FRACTION_RATE) >= Sum(lastStakeTimes[...])",
            "ori(vETH_REWARD_FRACTION_RATE) > Sum(lastStakeTimes[...])",
            "ori(vETH_REWARD_FRACTION_RATE) != Sum(lastStakeTimes[...])",
            "ori(vETH_REWARD_FRACTION_RATE) != Sum(rewards[...])",
            "ori(vETH_REWARD_FRACTION_RATE) >= vUSD_REWARD_FRACTION_RATE",
            "ori(vETH_REWARD_FRACTION_RATE) > vUSD_REWARD_FRACTION_RATE",
            "ori(vETH_REWARD_FRACTION_RATE) != vUSD_REWARD_FRACTION_RATE",
            "ori(vETH_REWARD_FRACTION_RATE) <= totalAccumulatedReward",
            "ori(vETH_REWARD_FRACTION_RATE) < totalAccumulatedReward",
            "ori(vETH_REWARD_FRACTION_RATE) != totalAccumulatedReward",
            "yfv != ori(rewardVote)",
            "yfv != rewardReferral",
            "yfv == ori(yfv)",
            "yfv != ori(rewardReferral)",
            "yfv != ori(vUSD)",
            "yfv != vETH",
            "yfv != ori(vETH)",
            "periodFinish <= rewardRate",
            "periodFinish < rewardRate",
            "periodFinish != rewardRate",
            "periodFinish >= lastStakeTimes[msg.sender]",
            "periodFinish > lastStakeTimes[msg.sender]",
            "periodFinish != lastStakeTimes[msg.sender]",
            "periodFinish != rewards[msg.sender]",
            "periodFinish != ori(_totalSupply)",
            "periodFinish >= ori(lastUpdateTime)",
            "periodFinish > ori(lastUpdateTime)",
            "periodFinish != ori(lastUpdateTime)",
            "periodFinish != rewardPerTokenStored",
            "periodFinish <= Sum(_balances[...])",
            "periodFinish < Sum(_balances[...])",
            "periodFinish != Sum(_balances[...])",
            "periodFinish <= ori(totalAccumulatedReward)",
            "periodFinish < ori(totalAccumulatedReward)",
            "periodFinish != ori(totalAccumulatedReward)",
            "periodFinish >= ori(currentEpoch)",
            "periodFinish > ori(currentEpoch)",
            "periodFinish != ori(currentEpoch)",
            "periodFinish <= ori(rewardRate)",
            "periodFinish < ori(rewardRate)",
            "periodFinish != ori(rewardRate)",
            "periodFinish <= ori(vUSD_REWARD_FRACTION_RATE)",
            "periodFinish < ori(vUSD_REWARD_FRACTION_RATE)",
            "periodFinish != ori(vUSD_REWARD_FRACTION_RATE)",
            "periodFinish != ori(rewardPerTokenStored)",
            "periodFinish >= starttime",
            "periodFinish != ori(Sum(lastStakeTimes[...]))",
            "periodFinish != ori(Sum(accumulatedStakingPower[...]))",
            "periodFinish != ori(rewards[msg.sender])",
            "periodFinish >= ori(lastStakeTimes[msg.sender])",
            "periodFinish > ori(lastStakeTimes[msg.sender])",
            "periodFinish != ori(lastStakeTimes[msg.sender])",
            "periodFinish >= ori(starttime)",
            "periodFinish <= vETH_REWARD_FRACTION_RATE",
            "periodFinish < vETH_REWARD_FRACTION_RATE",
            "periodFinish != vETH_REWARD_FRACTION_RATE",
            "periodFinish <= currentEpochReward",
            "periodFinish < currentEpochReward",
            "periodFinish != currentEpochReward",
            "periodFinish <= amount",
            "periodFinish < amount",
            "periodFinish != amount",
            "periodFinish != Sum(userRewardPerTokenPaid[...])",
            "periodFinish != ori(Sum(rewards[...]))",
            "periodFinish != Sum(lastStakeTimes[...])",
            "periodFinish >= msg.value",
            "periodFinish > msg.value",
            "periodFinish != msg.value",
            "periodFinish != Sum(rewards[...])",
            "periodFinish >= ori(periodFinish)",
            "periodFinish <= vUSD_REWARD_FRACTION_RATE",
            "periodFinish < vUSD_REWARD_FRACTION_RATE",
            "periodFinish != vUSD_REWARD_FRACTION_RATE",
            "periodFinish != ori(Sum(_balances[...]))",
            "periodFinish != ori(Sum(userRewardPerTokenPaid[...]))",
            "periodFinish <= totalAccumulatedReward",
            "periodFinish < totalAccumulatedReward",
            "periodFinish != totalAccumulatedReward",
            "rewardRate >= lastStakeTimes[msg.sender]",
            "rewardRate > lastStakeTimes[msg.sender]",
            "rewardRate != lastStakeTimes[msg.sender]",
            "rewardRate != rewards[msg.sender]",
            "rewardRate != ori(_totalSupply)",
            "rewardRate >= ori(lastUpdateTime)",
            "rewardRate > ori(lastUpdateTime)",
            "rewardRate != ori(lastUpdateTime)",
            "rewardRate != rewardPerTokenStored",
            "rewardRate <= Sum(_balances[...])",
            "rewardRate < Sum(_balances[...])",
            "rewardRate != Sum(_balances[...])",
            "rewardRate <= ori(totalAccumulatedReward)",
            "rewardRate < ori(totalAccumulatedReward)",
            "rewardRate != ori(totalAccumulatedReward)",
            "rewardRate >= ori(currentEpoch)",
            "rewardRate > ori(currentEpoch)",
            "rewardRate != ori(currentEpoch)",
            "rewardRate >= ori(rewardRate)",
            "rewardRate >= ori(vUSD_REWARD_FRACTION_RATE)",
            "rewardRate > ori(vUSD_REWARD_FRACTION_RATE)",
            "rewardRate != ori(vUSD_REWARD_FRACTION_RATE)",
            "rewardRate >= ori(rewardPerTokenStored)",
            "rewardRate > ori(rewardPerTokenStored)",
            "rewardRate != ori(rewardPerTokenStored)",
            "rewardRate >= starttime",
            "rewardRate > starttime",
            "rewardRate != starttime",
            "rewardRate >= ori(Sum(lastStakeTimes[...]))",
            "rewardRate > ori(Sum(lastStakeTimes[...]))",
            "rewardRate != ori(Sum(lastStakeTimes[...]))",
            "rewardRate != ori(Sum(accumulatedStakingPower[...]))",
            "rewardRate != ori(rewards[msg.sender])",
            "rewardRate >= ori(lastStakeTimes[msg.sender])",
            "rewardRate > ori(lastStakeTimes[msg.sender])",
            "rewardRate != ori(lastStakeTimes[msg.sender])",
            "rewardRate >= ori(starttime)",
            "rewardRate > ori(starttime)",
            "rewardRate != ori(starttime)",
            "rewardRate >= vETH_REWARD_FRACTION_RATE",
            "rewardRate > vETH_REWARD_FRACTION_RATE",
            "rewardRate != vETH_REWARD_FRACTION_RATE",
            "rewardRate <= currentEpochReward",
            "rewardRate < currentEpochReward",
            "rewardRate != currentEpochReward",
            "rewardRate <= amount",
            "rewardRate < amount",
            "rewardRate != amount",
            "rewardRate != Sum(userRewardPerTokenPaid[...])",
            "rewardRate != ori(Sum(rewards[...]))",
            "rewardRate >= Sum(lastStakeTimes[...])",
            "rewardRate > Sum(lastStakeTimes[...])",
            "rewardRate != Sum(lastStakeTimes[...])",
            "rewardRate >= msg.value",
            "rewardRate > msg.value",
            "rewardRate != msg.value",
            "rewardRate != Sum(rewards[...])",
            "rewardRate >= ori(periodFinish)",
            "rewardRate > ori(periodFinish)",
            "rewardRate != ori(periodFinish)",
            "rewardRate >= vUSD_REWARD_FRACTION_RATE",
            "rewardRate > vUSD_REWARD_FRACTION_RATE",
            "rewardRate != vUSD_REWARD_FRACTION_RATE",
            "rewardRate != ori(Sum(_balances[...]))",
            "rewardRate != ori(Sum(userRewardPerTokenPaid[...]))",
            "rewardRate <= totalAccumulatedReward",
            "rewardRate < totalAccumulatedReward",
            "rewardRate != totalAccumulatedReward",
            "ori(rewardVote) != rewardReferral",
            "ori(rewardVote) != vETH",
            "lastStakeTimes[msg.sender] != rewards[msg.sender]",
            "lastStakeTimes[msg.sender] != ori(_totalSupply)",
            "lastStakeTimes[msg.sender] >= ori(lastUpdateTime)",
            "lastStakeTimes[msg.sender] != rewardPerTokenStored",
            "lastStakeTimes[msg.sender] <= Sum(_balances[...])",
            "lastStakeTimes[msg.sender] < Sum(_balances[...])",
            "lastStakeTimes[msg.sender] != Sum(_balances[...])",
            "lastStakeTimes[msg.sender] <= ori(totalAccumulatedReward)",
            "lastStakeTimes[msg.sender] < ori(totalAccumulatedReward)",
            "lastStakeTimes[msg.sender] != ori(totalAccumulatedReward)",
            "lastStakeTimes[msg.sender] >= ori(currentEpoch)",
            "lastStakeTimes[msg.sender] > ori(currentEpoch)",
            "lastStakeTimes[msg.sender] != ori(currentEpoch)",
            "lastStakeTimes[msg.sender] <= ori(rewardRate)",
            "lastStakeTimes[msg.sender] < ori(rewardRate)",
            "lastStakeTimes[msg.sender] != ori(rewardRate)",
            "lastStakeTimes[msg.sender] <= ori(vUSD_REWARD_FRACTION_RATE)",
            "lastStakeTimes[msg.sender] < ori(vUSD_REWARD_FRACTION_RATE)",
            "lastStakeTimes[msg.sender] != ori(vUSD_REWARD_FRACTION_RATE)",
            "lastStakeTimes[msg.sender] != ori(rewardPerTokenStored)",
            "lastStakeTimes[msg.sender] != starttime",
            "lastStakeTimes[msg.sender] != ori(Sum(lastStakeTimes[...]))",
            "lastStakeTimes[msg.sender] != ori(Sum(accumulatedStakingPower[...]))",
            "lastStakeTimes[msg.sender] != ori(rewards[msg.sender])",
            "lastStakeTimes[msg.sender] >= ori(lastStakeTimes[msg.sender])",
            "lastStakeTimes[msg.sender] != ori(starttime)",
            "lastStakeTimes[msg.sender] <= vETH_REWARD_FRACTION_RATE",
            "lastStakeTimes[msg.sender] < vETH_REWARD_FRACTION_RATE",
            "lastStakeTimes[msg.sender] != vETH_REWARD_FRACTION_RATE",
            "lastStakeTimes[msg.sender] <= currentEpochReward",
            "lastStakeTimes[msg.sender] < currentEpochReward",
            "lastStakeTimes[msg.sender] != currentEpochReward",
            "lastStakeTimes[msg.sender] <= amount",
            "lastStakeTimes[msg.sender] < amount",
            "lastStakeTimes[msg.sender] != amount",
            "lastStakeTimes[msg.sender] != Sum(userRewardPerTokenPaid[...])",
            "lastStakeTimes[msg.sender] != ori(Sum(rewards[...]))",
            "lastStakeTimes[msg.sender] <= Sum(lastStakeTimes[...])",
            "lastStakeTimes[msg.sender] >= msg.value",
            "lastStakeTimes[msg.sender] > msg.value",
            "lastStakeTimes[msg.sender] != msg.value",
            "lastStakeTimes[msg.sender] != Sum(rewards[...])",
            "lastStakeTimes[msg.sender] != ori(periodFinish)",
            "lastStakeTimes[msg.sender] <= vUSD_REWARD_FRACTION_RATE",
            "lastStakeTimes[msg.sender] < vUSD_REWARD_FRACTION_RATE",
            "lastStakeTimes[msg.sender] != vUSD_REWARD_FRACTION_RATE",
            "lastStakeTimes[msg.sender] != ori(Sum(_balances[...]))",
            "lastStakeTimes[msg.sender] != ori(Sum(userRewardPerTokenPaid[...]))",
            "lastStakeTimes[msg.sender] <= totalAccumulatedReward",
            "lastStakeTimes[msg.sender] < totalAccumulatedReward",
            "lastStakeTimes[msg.sender] != totalAccumulatedReward",
            "rewards[msg.sender] <= ori(_totalSupply)",
            "rewards[msg.sender] != ori(lastUpdateTime)",
            "rewards[msg.sender] <= Sum(_balances[...])",
            "rewards[msg.sender] < Sum(_balances[...])",
            "rewards[msg.sender] != Sum(_balances[...])",
            "rewards[msg.sender] <= ori(totalAccumulatedReward)",
            "rewards[msg.sender] < ori(totalAccumulatedReward)",
            "rewards[msg.sender] != ori(totalAccumulatedReward)",
            "rewards[msg.sender] != ori(rewardRate)",
            "rewards[msg.sender] != ori(vUSD_REWARD_FRACTION_RATE)",
            "rewards[msg.sender] != starttime",
            "rewards[msg.sender] >= ori(rewards[msg.sender])",
            "rewards[msg.sender] != ori(starttime)",
            "rewards[msg.sender] != vETH_REWARD_FRACTION_RATE",
            "rewards[msg.sender] <= currentEpochReward",
            "rewards[msg.sender] < currentEpochReward",
            "rewards[msg.sender] != currentEpochReward",
            "rewards[msg.sender] <= amount",
            "rewards[msg.sender] < amount",
            "rewards[msg.sender] != amount",
            "rewards[msg.sender] != Sum(lastStakeTimes[...])",
            "rewards[msg.sender] >= msg.value",
            "rewards[msg.sender] <= Sum(rewards[...])",
            "rewards[msg.sender] != ori(periodFinish)",
            "rewards[msg.sender] != vUSD_REWARD_FRACTION_RATE",
            "rewards[msg.sender] <= ori(Sum(_balances[...]))",
            "rewards[msg.sender] <= totalAccumulatedReward",
            "rewards[msg.sender] < totalAccumulatedReward",
            "rewards[msg.sender] != totalAccumulatedReward",
            "ori(_totalSupply) >= rewardPerTokenStored",
            "ori(_totalSupply) <= Sum(_balances[...])",
            "ori(_totalSupply) < Sum(_balances[...])",
            "ori(_totalSupply) != Sum(_balances[...])",
            "ori(_totalSupply) != starttime",
            "ori(_totalSupply) != vETH_REWARD_FRACTION_RATE",
            "ori(_totalSupply) != currentEpochReward",
            "ori(_totalSupply) >= Sum(userRewardPerTokenPaid[...])",
            "ori(_totalSupply) != Sum(lastStakeTimes[...])",
            "ori(_totalSupply) >= Sum(rewards[...])",
            "ori(_totalSupply) != vUSD_REWARD_FRACTION_RATE",
            "ori(_totalSupply) != totalAccumulatedReward",
            "ori(lastUpdateTime) != rewardPerTokenStored",
            "ori(lastUpdateTime) <= Sum(_balances[...])",
            "ori(lastUpdateTime) < Sum(_balances[...])",
            "ori(lastUpdateTime) != Sum(_balances[...])",
            "ori(lastUpdateTime) != starttime",
            "ori(lastUpdateTime) <= vETH_REWARD_FRACTION_RATE",
            "ori(lastUpdateTime) < vETH_REWARD_FRACTION_RATE",
            "ori(lastUpdateTime) != vETH_REWARD_FRACTION_RATE",
            "ori(lastUpdateTime) <= currentEpochReward",
            "ori(lastUpdateTime) < currentEpochReward",
            "ori(lastUpdateTime) != currentEpochReward",
            "ori(lastUpdateTime) != Sum(userRewardPerTokenPaid[...])",
            "ori(lastUpdateTime) <= Sum(lastStakeTimes[...])",
            "ori(lastUpdateTime) < Sum(lastStakeTimes[...])",
            "ori(lastUpdateTime) != Sum(lastStakeTimes[...])",
            "ori(lastUpdateTime) != Sum(rewards[...])",
            "ori(lastUpdateTime) <= vUSD_REWARD_FRACTION_RATE",
            "ori(lastUpdateTime) < vUSD_REWARD_FRACTION_RATE",
            "ori(lastUpdateTime) != vUSD_REWARD_FRACTION_RATE",
            "ori(lastUpdateTime) <= totalAccumulatedReward",
            "ori(lastUpdateTime) < totalAccumulatedReward",
            "ori(lastUpdateTime) != totalAccumulatedReward",
            "rewardPerTokenStored <= Sum(_balances[...])",
            "rewardPerTokenStored < Sum(_balances[...])",
            "rewardPerTokenStored != Sum(_balances[...])",
            "rewardPerTokenStored <= ori(totalAccumulatedReward)",
            "rewardPerTokenStored < ori(totalAccumulatedReward)",
            "rewardPerTokenStored != ori(totalAccumulatedReward)",
            "rewardPerTokenStored >= ori(currentEpoch)",
            "rewardPerTokenStored != ori(rewardRate)",
            "rewardPerTokenStored != ori(vUSD_REWARD_FRACTION_RATE)",
            "rewardPerTokenStored >= ori(rewardPerTokenStored)",
            "rewardPerTokenStored != starttime",
            "rewardPerTokenStored >= ori(Sum(lastStakeTimes[...]))",
            "rewardPerTokenStored >= ori(lastStakeTimes[msg.sender])",
            "rewardPerTokenStored != ori(starttime)",
            "rewardPerTokenStored != vETH_REWARD_FRACTION_RATE",
            "rewardPerTokenStored <= currentEpochReward",
            "rewardPerTokenStored < currentEpochReward",
            "rewardPerTokenStored != currentEpochReward",
            "rewardPerTokenStored <= amount",
            "rewardPerTokenStored < amount",
            "rewardPerTokenStored != amount",
            "rewardPerTokenStored <= Sum(userRewardPerTokenPaid[...])",
            "rewardPerTokenStored != Sum(lastStakeTimes[...])",
            "rewardPerTokenStored >= msg.value",
            "rewardPerTokenStored != ori(periodFinish)",
            "rewardPerTokenStored != vUSD_REWARD_FRACTION_RATE",
            "rewardPerTokenStored <= ori(Sum(_balances[...]))",
            "rewardPerTokenStored <= totalAccumulatedReward",
            "rewardPerTokenStored < totalAccumulatedReward",
            "rewardPerTokenStored != totalAccumulatedReward",
            "Sum(_balances[...]) != ori(totalAccumulatedReward)",
            "Sum(_balances[...]) >= ori(currentEpoch)",
            "Sum(_balances[...]) > ori(currentEpoch)",
            "Sum(_balances[...]) != ori(currentEpoch)",
            "Sum(_balances[...]) >= ori(rewardRate)",
            "Sum(_balances[...]) > ori(rewardRate)",
            "Sum(_balances[...]) != ori(rewardRate)",
            "Sum(_balances[...]) >= ori(vUSD_REWARD_FRACTION_RATE)",
            "Sum(_balances[...]) > ori(vUSD_REWARD_FRACTION_RATE)",
            "Sum(_balances[...]) != ori(vUSD_REWARD_FRACTION_RATE)",
            "Sum(_balances[...]) >= ori(rewardPerTokenStored)",
            "Sum(_balances[...]) > ori(rewardPerTokenStored)",
            "Sum(_balances[...]) != ori(rewardPerTokenStored)",
            "Sum(_balances[...]) >= starttime",
            "Sum(_balances[...]) > starttime",
            "Sum(_balances[...]) != starttime",
            "Sum(_balances[...]) >= ori(Sum(lastStakeTimes[...]))",
            "Sum(_balances[...]) > ori(Sum(lastStakeTimes[...]))",
            "Sum(_balances[...]) != ori(Sum(lastStakeTimes[...]))",
            "Sum(_balances[...]) >= ori(Sum(accumulatedStakingPower[...]))",
            "Sum(_balances[...]) > ori(Sum(accumulatedStakingPower[...]))",
            "Sum(_balances[...]) != ori(Sum(accumulatedStakingPower[...]))",
            "Sum(_balances[...]) >= ori(rewards[msg.sender])",
            "Sum(_balances[...]) > ori(rewards[msg.sender])",
            "Sum(_balances[...]) != ori(rewards[msg.sender])",
            "Sum(_balances[...]) >= ori(lastStakeTimes[msg.sender])",
            "Sum(_balances[...]) > ori(lastStakeTimes[msg.sender])",
            "Sum(_balances[...]) != ori(lastStakeTimes[msg.sender])",
            "Sum(_balances[...]) >= ori(starttime)",
            "Sum(_balances[...]) > ori(starttime)",
            "Sum(_balances[...]) != ori(starttime)",
            "Sum(_balances[...]) >= vETH_REWARD_FRACTION_RATE",
            "Sum(_balances[...]) > vETH_REWARD_FRACTION_RATE",
            "Sum(_balances[...]) != vETH_REWARD_FRACTION_RATE",
            "Sum(_balances[...]) != currentEpochReward",
            "Sum(_balances[...]) >= amount",
            "Sum(_balances[...]) >= Sum(userRewardPerTokenPaid[...])",
            "Sum(_balances[...]) > Sum(userRewardPerTokenPaid[...])",
            "Sum(_balances[...]) != Sum(userRewardPerTokenPaid[...])",
            "Sum(_balances[...]) >= ori(Sum(rewards[...]))",
            "Sum(_balances[...]) > ori(Sum(rewards[...]))",
            "Sum(_balances[...]) != ori(Sum(rewards[...]))",
            "Sum(_balances[...]) >= Sum(lastStakeTimes[...])",
            "Sum(_balances[...]) > Sum(lastStakeTimes[...])",
            "Sum(_balances[...]) != Sum(lastStakeTimes[...])",
            "Sum(_balances[...]) >= msg.value",
            "Sum(_balances[...]) > msg.value",
            "Sum(_balances[...]) != msg.value",
            "Sum(_balances[...]) >= Sum(rewards[...])",
            "Sum(_balances[...]) > Sum(rewards[...])",
            "Sum(_balances[...]) != Sum(rewards[...])",
            "Sum(_balances[...]) >= ori(periodFinish)",
            "Sum(_balances[...]) > ori(periodFinish)",
            "Sum(_balances[...]) != ori(periodFinish)",
            "Sum(_balances[...]) >= vUSD_REWARD_FRACTION_RATE",
            "Sum(_balances[...]) > vUSD_REWARD_FRACTION_RATE",
            "Sum(_balances[...]) != vUSD_REWARD_FRACTION_RATE",
            "Sum(_balances[...]) >= ori(Sum(_balances[...]))",
            "Sum(_balances[...]) > ori(Sum(_balances[...]))",
            "Sum(_balances[...]) != ori(Sum(_balances[...]))",
            "Sum(_balances[...]) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(_balances[...]) > ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(_balances[...]) != ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(_balances[...]) != totalAccumulatedReward",
            "ori(totalAccumulatedReward) >= starttime",
            "ori(totalAccumulatedReward) > starttime",
            "ori(totalAccumulatedReward) != starttime",
            "ori(totalAccumulatedReward) >= vETH_REWARD_FRACTION_RATE",
            "ori(totalAccumulatedReward) > vETH_REWARD_FRACTION_RATE",
            "ori(totalAccumulatedReward) != vETH_REWARD_FRACTION_RATE",
            "ori(totalAccumulatedReward) >= Sum(userRewardPerTokenPaid[...])",
            "ori(totalAccumulatedReward) > Sum(userRewardPerTokenPaid[...])",
            "ori(totalAccumulatedReward) != Sum(userRewardPerTokenPaid[...])",
            "ori(totalAccumulatedReward) >= Sum(lastStakeTimes[...])",
            "ori(totalAccumulatedReward) > Sum(lastStakeTimes[...])",
            "ori(totalAccumulatedReward) != Sum(lastStakeTimes[...])",
            "ori(totalAccumulatedReward) >= Sum(rewards[...])",
            "ori(totalAccumulatedReward) > Sum(rewards[...])",
            "ori(totalAccumulatedReward) != Sum(rewards[...])",
            "ori(totalAccumulatedReward) >= vUSD_REWARD_FRACTION_RATE",
            "ori(totalAccumulatedReward) > vUSD_REWARD_FRACTION_RATE",
            "ori(totalAccumulatedReward) != vUSD_REWARD_FRACTION_RATE",
            "ori(totalAccumulatedReward) <= totalAccumulatedReward",
            "ori(currentEpoch) <= starttime",
            "ori(currentEpoch) < starttime",
            "ori(currentEpoch) != starttime",
            "ori(currentEpoch) <= vETH_REWARD_FRACTION_RATE",
            "ori(currentEpoch) < vETH_REWARD_FRACTION_RATE",
            "ori(currentEpoch) != vETH_REWARD_FRACTION_RATE",
            "ori(currentEpoch) <= currentEpochReward",
            "ori(currentEpoch) < currentEpochReward",
            "ori(currentEpoch) != currentEpochReward",
            "ori(currentEpoch) <= Sum(userRewardPerTokenPaid[...])",
            "ori(currentEpoch) <= Sum(lastStakeTimes[...])",
            "ori(currentEpoch) < Sum(lastStakeTimes[...])",
            "ori(currentEpoch) != Sum(lastStakeTimes[...])",
            "ori(currentEpoch) <= vUSD_REWARD_FRACTION_RATE",
            "ori(currentEpoch) < vUSD_REWARD_FRACTION_RATE",
            "ori(currentEpoch) != vUSD_REWARD_FRACTION_RATE",
            "ori(currentEpoch) <= totalAccumulatedReward",
            "ori(currentEpoch) < totalAccumulatedReward",
            "ori(currentEpoch) != totalAccumulatedReward",
            "ori(rewardRate) >= starttime",
            "ori(rewardRate) > starttime",
            "ori(rewardRate) != starttime",
            "ori(rewardRate) >= vETH_REWARD_FRACTION_RATE",
            "ori(rewardRate) > vETH_REWARD_FRACTION_RATE",
            "ori(rewardRate) != vETH_REWARD_FRACTION_RATE",
            "ori(rewardRate) <= currentEpochReward",
            "ori(rewardRate) < currentEpochReward",
            "ori(rewardRate) != currentEpochReward",
            "ori(rewardRate) != Sum(userRewardPerTokenPaid[...])",
            "ori(rewardRate) >= Sum(lastStakeTimes[...])",
            "ori(rewardRate) > Sum(lastStakeTimes[...])",
            "ori(rewardRate) != Sum(lastStakeTimes[...])",
            "ori(rewardRate) != Sum(rewards[...])",
            "ori(rewardRate) >= vUSD_REWARD_FRACTION_RATE",
            "ori(rewardRate) > vUSD_REWARD_FRACTION_RATE",
            "ori(rewardRate) != vUSD_REWARD_FRACTION_RATE",
            "ori(rewardRate) <= totalAccumulatedReward",
            "ori(rewardRate) < totalAccumulatedReward",
            "ori(rewardRate) != totalAccumulatedReward",
            "rewardReferral != ori(yfv)",
            "rewardReferral == ori(rewardReferral)",
            "rewardReferral != ori(vUSD)",
            "rewardReferral != vETH",
            "rewardReferral != ori(vETH)",
            "ori(vUSD_REWARD_FRACTION_RATE) >= starttime",
            "ori(vUSD_REWARD_FRACTION_RATE) > starttime",
            "ori(vUSD_REWARD_FRACTION_RATE) != starttime",
            "ori(vUSD_REWARD_FRACTION_RATE) <= vETH_REWARD_FRACTION_RATE",
            "ori(vUSD_REWARD_FRACTION_RATE) < vETH_REWARD_FRACTION_RATE",
            "ori(vUSD_REWARD_FRACTION_RATE) != vETH_REWARD_FRACTION_RATE",
            "ori(vUSD_REWARD_FRACTION_RATE) <= currentEpochReward",
            "ori(vUSD_REWARD_FRACTION_RATE) < currentEpochReward",
            "ori(vUSD_REWARD_FRACTION_RATE) != currentEpochReward",
            "ori(vUSD_REWARD_FRACTION_RATE) != Sum(userRewardPerTokenPaid[...])",
            "ori(vUSD_REWARD_FRACTION_RATE) != Sum(lastStakeTimes[...])",
            "ori(vUSD_REWARD_FRACTION_RATE) != Sum(rewards[...])",
            "ori(vUSD_REWARD_FRACTION_RATE) == vUSD_REWARD_FRACTION_RATE",
            "ori(vUSD_REWARD_FRACTION_RATE) >= vUSD_REWARD_FRACTION_RATE",
            "ori(vUSD_REWARD_FRACTION_RATE) <= vUSD_REWARD_FRACTION_RATE",
            "ori(vUSD_REWARD_FRACTION_RATE) <= totalAccumulatedReward",
            "ori(vUSD_REWARD_FRACTION_RATE) < totalAccumulatedReward",
            "ori(vUSD_REWARD_FRACTION_RATE) != totalAccumulatedReward",
            "ori(rewardPerTokenStored) != starttime",
            "ori(rewardPerTokenStored) != vETH_REWARD_FRACTION_RATE",
            "ori(rewardPerTokenStored) <= currentEpochReward",
            "ori(rewardPerTokenStored) < currentEpochReward",
            "ori(rewardPerTokenStored) != currentEpochReward",
            "ori(rewardPerTokenStored) <= Sum(userRewardPerTokenPaid[...])",
            "ori(rewardPerTokenStored) != Sum(lastStakeTimes[...])",
            "ori(rewardPerTokenStored) != vUSD_REWARD_FRACTION_RATE",
            "ori(rewardPerTokenStored) <= totalAccumulatedReward",
            "ori(rewardPerTokenStored) < totalAccumulatedReward",
            "ori(rewardPerTokenStored) != totalAccumulatedReward",
            "starttime != ori(Sum(lastStakeTimes[...]))",
            "starttime != ori(Sum(accumulatedStakingPower[...]))",
            "starttime != ori(rewards[msg.sender])",
            "starttime != ori(lastStakeTimes[msg.sender])",
            "starttime == ori(starttime)",
            "starttime >= ori(starttime)",
            "starttime <= ori(starttime)",
            "starttime <= vETH_REWARD_FRACTION_RATE",
            "starttime < vETH_REWARD_FRACTION_RATE",
            "starttime != vETH_REWARD_FRACTION_RATE",
            "starttime <= currentEpochReward",
            "starttime < currentEpochReward",
            "starttime != currentEpochReward",
            "starttime <= amount",
            "starttime < amount",
            "starttime != amount",
            "starttime != Sum(userRewardPerTokenPaid[...])",
            "starttime != ori(Sum(rewards[...]))",
            "starttime != Sum(lastStakeTimes[...])",
            "starttime >= msg.value",
            "starttime > msg.value",
            "starttime != msg.value",
            "starttime != Sum(rewards[...])",
            "starttime <= ori(periodFinish)",
            "starttime <= vUSD_REWARD_FRACTION_RATE",
            "starttime < vUSD_REWARD_FRACTION_RATE",
            "starttime != vUSD_REWARD_FRACTION_RATE",
            "starttime != ori(Sum(_balances[...]))",
            "starttime != ori(Sum(userRewardPerTokenPaid[...]))",
            "starttime <= totalAccumulatedReward",
            "starttime < totalAccumulatedReward",
            "starttime != totalAccumulatedReward",
            "ori(Sum(lastStakeTimes[...])) <= vETH_REWARD_FRACTION_RATE",
            "ori(Sum(lastStakeTimes[...])) < vETH_REWARD_FRACTION_RATE",
            "ori(Sum(lastStakeTimes[...])) != vETH_REWARD_FRACTION_RATE",
            "ori(Sum(lastStakeTimes[...])) <= currentEpochReward",
            "ori(Sum(lastStakeTimes[...])) < currentEpochReward",
            "ori(Sum(lastStakeTimes[...])) != currentEpochReward",
            "ori(Sum(lastStakeTimes[...])) <= Sum(userRewardPerTokenPaid[...])",
            "ori(Sum(lastStakeTimes[...])) <= Sum(lastStakeTimes[...])",
            "ori(Sum(lastStakeTimes[...])) != vUSD_REWARD_FRACTION_RATE",
            "ori(Sum(lastStakeTimes[...])) <= totalAccumulatedReward",
            "ori(Sum(lastStakeTimes[...])) < totalAccumulatedReward",
            "ori(Sum(lastStakeTimes[...])) != totalAccumulatedReward",
            "ori(Sum(accumulatedStakingPower[...])) != vETH_REWARD_FRACTION_RATE",
            "ori(Sum(accumulatedStakingPower[...])) <= currentEpochReward",
            "ori(Sum(accumulatedStakingPower[...])) < currentEpochReward",
            "ori(Sum(accumulatedStakingPower[...])) != currentEpochReward",
            "ori(Sum(accumulatedStakingPower[...])) != Sum(lastStakeTimes[...])",
            "ori(Sum(accumulatedStakingPower[...])) != vUSD_REWARD_FRACTION_RATE",
            "ori(Sum(accumulatedStakingPower[...])) <= totalAccumulatedReward",
            "ori(Sum(accumulatedStakingPower[...])) < totalAccumulatedReward",
            "ori(Sum(accumulatedStakingPower[...])) != totalAccumulatedReward",
            "ori(rewards[msg.sender]) != vETH_REWARD_FRACTION_RATE",
            "ori(rewards[msg.sender]) <= currentEpochReward",
            "ori(rewards[msg.sender]) < currentEpochReward",
            "ori(rewards[msg.sender]) != currentEpochReward",
            "ori(rewards[msg.sender]) != Sum(lastStakeTimes[...])",
            "ori(rewards[msg.sender]) <= Sum(rewards[...])",
            "ori(rewards[msg.sender]) != vUSD_REWARD_FRACTION_RATE",
            "ori(rewards[msg.sender]) <= totalAccumulatedReward",
            "ori(rewards[msg.sender]) < totalAccumulatedReward",
            "ori(rewards[msg.sender]) != totalAccumulatedReward",
            "ori(lastStakeTimes[msg.sender]) <= vETH_REWARD_FRACTION_RATE",
            "ori(lastStakeTimes[msg.sender]) < vETH_REWARD_FRACTION_RATE",
            "ori(lastStakeTimes[msg.sender]) != vETH_REWARD_FRACTION_RATE",
            "ori(lastStakeTimes[msg.sender]) <= currentEpochReward",
            "ori(lastStakeTimes[msg.sender]) < currentEpochReward",
            "ori(lastStakeTimes[msg.sender]) != currentEpochReward",
            "ori(lastStakeTimes[msg.sender]) <= Sum(userRewardPerTokenPaid[...])",
            "ori(lastStakeTimes[msg.sender]) <= Sum(lastStakeTimes[...])",
            "ori(lastStakeTimes[msg.sender]) < Sum(lastStakeTimes[...])",
            "ori(lastStakeTimes[msg.sender]) != Sum(lastStakeTimes[...])",
            "ori(lastStakeTimes[msg.sender]) <= Sum(rewards[...])",
            "ori(lastStakeTimes[msg.sender]) <= vUSD_REWARD_FRACTION_RATE",
            "ori(lastStakeTimes[msg.sender]) < vUSD_REWARD_FRACTION_RATE",
            "ori(lastStakeTimes[msg.sender]) != vUSD_REWARD_FRACTION_RATE",
            "ori(lastStakeTimes[msg.sender]) <= totalAccumulatedReward",
            "ori(lastStakeTimes[msg.sender]) < totalAccumulatedReward",
            "ori(lastStakeTimes[msg.sender]) != totalAccumulatedReward",
            "ori(yfv) != vETH",
            "ori(starttime) <= vETH_REWARD_FRACTION_RATE",
            "ori(starttime) < vETH_REWARD_FRACTION_RATE",
            "ori(starttime) != vETH_REWARD_FRACTION_RATE",
            "ori(starttime) <= currentEpochReward",
            "ori(starttime) < currentEpochReward",
            "ori(starttime) != currentEpochReward",
            "ori(starttime) != Sum(userRewardPerTokenPaid[...])",
            "ori(starttime) != Sum(lastStakeTimes[...])",
            "ori(starttime) != Sum(rewards[...])",
            "ori(starttime) <= vUSD_REWARD_FRACTION_RATE",
            "ori(starttime) < vUSD_REWARD_FRACTION_RATE",
            "ori(starttime) != vUSD_REWARD_FRACTION_RATE",
            "ori(starttime) <= totalAccumulatedReward",
            "ori(starttime) < totalAccumulatedReward",
            "ori(starttime) != totalAccumulatedReward",
            "vETH_REWARD_FRACTION_RATE <= currentEpochReward",
            "vETH_REWARD_FRACTION_RATE < currentEpochReward",
            "vETH_REWARD_FRACTION_RATE != currentEpochReward",
            "vETH_REWARD_FRACTION_RATE <= amount",
            "vETH_REWARD_FRACTION_RATE < amount",
            "vETH_REWARD_FRACTION_RATE != amount",
            "vETH_REWARD_FRACTION_RATE != Sum(userRewardPerTokenPaid[...])",
            "vETH_REWARD_FRACTION_RATE != ori(Sum(rewards[...]))",
            "vETH_REWARD_FRACTION_RATE >= Sum(lastStakeTimes[...])",
            "vETH_REWARD_FRACTION_RATE > Sum(lastStakeTimes[...])",
            "vETH_REWARD_FRACTION_RATE != Sum(lastStakeTimes[...])",
            "vETH_REWARD_FRACTION_RATE >= msg.value",
            "vETH_REWARD_FRACTION_RATE > msg.value",
            "vETH_REWARD_FRACTION_RATE != msg.value",
            "vETH_REWARD_FRACTION_RATE != Sum(rewards[...])",
            "vETH_REWARD_FRACTION_RATE >= ori(periodFinish)",
            "vETH_REWARD_FRACTION_RATE > ori(periodFinish)",
            "vETH_REWARD_FRACTION_RATE != ori(periodFinish)",
            "vETH_REWARD_FRACTION_RATE >= vUSD_REWARD_FRACTION_RATE",
            "vETH_REWARD_FRACTION_RATE > vUSD_REWARD_FRACTION_RATE",
            "vETH_REWARD_FRACTION_RATE != vUSD_REWARD_FRACTION_RATE",
            "vETH_REWARD_FRACTION_RATE != ori(Sum(_balances[...]))",
            "vETH_REWARD_FRACTION_RATE != ori(Sum(userRewardPerTokenPaid[...]))",
            "vETH_REWARD_FRACTION_RATE <= totalAccumulatedReward",
            "vETH_REWARD_FRACTION_RATE < totalAccumulatedReward",
            "vETH_REWARD_FRACTION_RATE != totalAccumulatedReward",
            "currentEpochReward != amount",
            "currentEpochReward >= Sum(userRewardPerTokenPaid[...])",
            "currentEpochReward > Sum(userRewardPerTokenPaid[...])",
            "currentEpochReward != Sum(userRewardPerTokenPaid[...])",
            "currentEpochReward >= ori(Sum(rewards[...]))",
            "currentEpochReward > ori(Sum(rewards[...]))",
            "currentEpochReward != ori(Sum(rewards[...]))",
            "currentEpochReward >= Sum(lastStakeTimes[...])",
            "currentEpochReward > Sum(lastStakeTimes[...])",
            "currentEpochReward != Sum(lastStakeTimes[...])",
            "currentEpochReward >= msg.value",
            "currentEpochReward > msg.value",
            "currentEpochReward != msg.value",
            "currentEpochReward >= Sum(rewards[...])",
            "currentEpochReward > Sum(rewards[...])",
            "currentEpochReward != Sum(rewards[...])",
            "currentEpochReward >= ori(periodFinish)",
            "currentEpochReward > ori(periodFinish)",
            "currentEpochReward != ori(periodFinish)",
            "currentEpochReward >= vUSD_REWARD_FRACTION_RATE",
            "currentEpochReward > vUSD_REWARD_FRACTION_RATE",
            "currentEpochReward != vUSD_REWARD_FRACTION_RATE",
            "currentEpochReward != ori(Sum(_balances[...]))",
            "currentEpochReward >= ori(Sum(userRewardPerTokenPaid[...]))",
            "currentEpochReward > ori(Sum(userRewardPerTokenPaid[...]))",
            "currentEpochReward != ori(Sum(userRewardPerTokenPaid[...]))",
            "currentEpochReward <= totalAccumulatedReward",
            "amount != Sum(userRewardPerTokenPaid[...])",
            "amount >= Sum(lastStakeTimes[...])",
            "amount > Sum(lastStakeTimes[...])",
            "amount != Sum(lastStakeTimes[...])",
            "amount != Sum(rewards[...])",
            "amount >= vUSD_REWARD_FRACTION_RATE",
            "amount > vUSD_REWARD_FRACTION_RATE",
            "amount != vUSD_REWARD_FRACTION_RATE",
            "amount != totalAccumulatedReward",
            "Sum(userRewardPerTokenPaid[...]) != Sum(lastStakeTimes[...])",
            "Sum(userRewardPerTokenPaid[...]) >= msg.value",
            "Sum(userRewardPerTokenPaid[...]) != ori(periodFinish)",
            "Sum(userRewardPerTokenPaid[...]) != vUSD_REWARD_FRACTION_RATE",
            "Sum(userRewardPerTokenPaid[...]) <= ori(Sum(_balances[...]))",
            "Sum(userRewardPerTokenPaid[...]) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(userRewardPerTokenPaid[...]) <= totalAccumulatedReward",
            "Sum(userRewardPerTokenPaid[...]) < totalAccumulatedReward",
            "Sum(userRewardPerTokenPaid[...]) != totalAccumulatedReward",
            "ori(Sum(rewards[...])) != Sum(lastStakeTimes[...])",
            "ori(Sum(rewards[...])) <= Sum(rewards[...])",
            "ori(Sum(rewards[...])) != vUSD_REWARD_FRACTION_RATE",
            "ori(Sum(rewards[...])) <= totalAccumulatedReward",
            "ori(Sum(rewards[...])) < totalAccumulatedReward",
            "ori(Sum(rewards[...])) != totalAccumulatedReward",
            "ori(rewardReferral) != vETH",
            "ori(vUSD) != vETH",
            "Sum(lastStakeTimes[...]) >= msg.value",
            "Sum(lastStakeTimes[...]) > msg.value",
            "Sum(lastStakeTimes[...]) != msg.value",
            "Sum(lastStakeTimes[...]) != Sum(rewards[...])",
            "Sum(lastStakeTimes[...]) != ori(periodFinish)",
            "Sum(lastStakeTimes[...]) != vUSD_REWARD_FRACTION_RATE",
            "Sum(lastStakeTimes[...]) != ori(Sum(_balances[...]))",
            "Sum(lastStakeTimes[...]) != ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(lastStakeTimes[...]) <= totalAccumulatedReward",
            "Sum(lastStakeTimes[...]) < totalAccumulatedReward",
            "Sum(lastStakeTimes[...]) != totalAccumulatedReward",
            "msg.value <= Sum(rewards[...])",
            "msg.value <= vUSD_REWARD_FRACTION_RATE",
            "msg.value < vUSD_REWARD_FRACTION_RATE",
            "msg.value != vUSD_REWARD_FRACTION_RATE",
            "msg.value <= totalAccumulatedReward",
            "msg.value < totalAccumulatedReward",
            "msg.value != totalAccumulatedReward",
            "vETH == ori(vETH)",
            "Sum(rewards[...]) != ori(periodFinish)",
            "Sum(rewards[...]) != vUSD_REWARD_FRACTION_RATE",
            "Sum(rewards[...]) <= ori(Sum(_balances[...]))",
            "Sum(rewards[...]) <= totalAccumulatedReward",
            "Sum(rewards[...]) < totalAccumulatedReward",
            "Sum(rewards[...]) != totalAccumulatedReward",
            "ori(periodFinish) <= vUSD_REWARD_FRACTION_RATE",
            "ori(periodFinish) < vUSD_REWARD_FRACTION_RATE",
            "ori(periodFinish) != vUSD_REWARD_FRACTION_RATE",
            "ori(periodFinish) <= totalAccumulatedReward",
            "ori(periodFinish) < totalAccumulatedReward",
            "ori(periodFinish) != totalAccumulatedReward",
            "vUSD_REWARD_FRACTION_RATE != ori(Sum(_balances[...]))",
            "vUSD_REWARD_FRACTION_RATE != ori(Sum(userRewardPerTokenPaid[...]))",
            "vUSD_REWARD_FRACTION_RATE <= totalAccumulatedReward",
            "vUSD_REWARD_FRACTION_RATE < totalAccumulatedReward",
            "vUSD_REWARD_FRACTION_RATE != totalAccumulatedReward",
            "ori(Sum(_balances[...])) != totalAccumulatedReward",
            "ori(Sum(userRewardPerTokenPaid[...])) <= totalAccumulatedReward",
            "ori(Sum(userRewardPerTokenPaid[...])) < totalAccumulatedReward",
            "ori(Sum(userRewardPerTokenPaid[...])) != totalAccumulatedReward"
        ],
        "falsified_preconditions": [
            "ori(_balances[msg.sender]) == 0",
            "ori(currentEpoch) == 0",
            "ori(Sum(accumulatedStakingPower[...])) == 0",
            "ori(rewards[msg.sender]) == 0",
            "ori(lastStakeTimes[msg.sender]) == 0",
            "ori(Sum(rewards[...])) == 0",
            "ori(_balances[msg.sender]) <= ori(vETH_REWARD_FRACTION_RATE)",
            "ori(_balances[msg.sender]) < ori(vETH_REWARD_FRACTION_RATE)",
            "ori(_balances[msg.sender]) <= ori(lastUpdateTime)",
            "ori(_balances[msg.sender]) < ori(lastUpdateTime)",
            "ori(_balances[msg.sender]) == ori(currentEpoch)",
            "ori(_balances[msg.sender]) >= ori(currentEpoch)",
            "ori(_balances[msg.sender]) <= ori(currentEpoch)",
            "ori(_balances[msg.sender]) <= ori(rewardRate)",
            "ori(_balances[msg.sender]) < ori(rewardRate)",
            "ori(_balances[msg.sender]) <= ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(_balances[msg.sender]) < ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(_balances[msg.sender]) <= ori(rewardPerTokenStored)",
            "ori(_balances[msg.sender]) <= ori(Sum(lastStakeTimes[...]))",
            "ori(_balances[msg.sender]) == ori(Sum(accumulatedStakingPower[...]))",
            "ori(_balances[msg.sender]) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(_balances[msg.sender]) <= ori(Sum(accumulatedStakingPower[...]))",
            "ori(_balances[msg.sender]) == ori(rewards[msg.sender])",
            "ori(_balances[msg.sender]) <= ori(rewards[msg.sender])",
            "ori(_balances[msg.sender]) == ori(lastStakeTimes[msg.sender])",
            "ori(_balances[msg.sender]) <= ori(lastStakeTimes[msg.sender])",
            "ori(_balances[msg.sender]) <= ori(starttime)",
            "ori(_balances[msg.sender]) < ori(starttime)",
            "ori(_balances[msg.sender]) <= amount",
            "ori(_balances[msg.sender]) < amount",
            "ori(_balances[msg.sender]) != amount",
            "ori(_balances[msg.sender]) == ori(Sum(rewards[...]))",
            "ori(_balances[msg.sender]) >= ori(Sum(rewards[...]))",
            "ori(_balances[msg.sender]) <= ori(Sum(rewards[...]))",
            "ori(_balances[msg.sender]) == msg.value",
            "ori(_balances[msg.sender]) <= msg.value",
            "ori(_balances[msg.sender]) <= ori(periodFinish)",
            "ori(_balances[msg.sender]) < ori(periodFinish)",
            "ori(_balances[msg.sender]) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(currentEpochReward) == ori(totalAccumulatedReward)",
            "ori(currentEpochReward) >= ori(totalAccumulatedReward)",
            "ori(currentEpochReward) <= amount",
            "ori(currentEpochReward) < amount",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(Sum(accumulatedStakingPower[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(rewards[msg.sender])",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(rewards[msg.sender])",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(Sum(rewards[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(Sum(rewards[...]))",
            "ori(lastUpdateTime) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(lastUpdateTime) > ori(Sum(accumulatedStakingPower[...]))",
            "ori(lastUpdateTime) >= ori(rewards[msg.sender])",
            "ori(lastUpdateTime) > ori(rewards[msg.sender])",
            "ori(lastUpdateTime) > ori(lastStakeTimes[msg.sender])",
            "ori(lastUpdateTime) != ori(lastStakeTimes[msg.sender])",
            "ori(lastUpdateTime) <= ori(starttime)",
            "ori(lastUpdateTime) < ori(starttime)",
            "ori(lastUpdateTime) >= ori(Sum(rewards[...]))",
            "ori(lastUpdateTime) > ori(Sum(rewards[...]))",
            "ori(totalAccumulatedReward) <= amount",
            "ori(totalAccumulatedReward) < amount",
            "ori(currentEpoch) == ori(Sum(accumulatedStakingPower[...]))",
            "ori(currentEpoch) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(currentEpoch) <= ori(Sum(accumulatedStakingPower[...]))",
            "ori(currentEpoch) == ori(rewards[msg.sender])",
            "ori(currentEpoch) >= ori(rewards[msg.sender])",
            "ori(currentEpoch) <= ori(rewards[msg.sender])",
            "ori(currentEpoch) == ori(lastStakeTimes[msg.sender])",
            "ori(currentEpoch) >= ori(lastStakeTimes[msg.sender])",
            "ori(currentEpoch) <= ori(lastStakeTimes[msg.sender])",
            "ori(currentEpoch) == ori(Sum(rewards[...]))",
            "ori(currentEpoch) >= ori(Sum(rewards[...]))",
            "ori(currentEpoch) <= ori(Sum(rewards[...]))",
            "ori(currentEpoch) == msg.value",
            "ori(currentEpoch) <= msg.value",
            "ori(rewardRate) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(rewardRate) > ori(Sum(accumulatedStakingPower[...]))",
            "ori(rewardRate) >= ori(rewards[msg.sender])",
            "ori(rewardRate) > ori(rewards[msg.sender])",
            "ori(rewardRate) >= ori(Sum(rewards[...]))",
            "ori(rewardRate) > ori(Sum(rewards[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) >= ori(Sum(lastStakeTimes[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) > ori(Sum(lastStakeTimes[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) > ori(Sum(accumulatedStakingPower[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) >= ori(rewards[msg.sender])",
            "ori(vUSD_REWARD_FRACTION_RATE) > ori(rewards[msg.sender])",
            "ori(vUSD_REWARD_FRACTION_RATE) >= ori(Sum(rewards[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) > ori(Sum(rewards[...]))",
            "ori(rewardPerTokenStored) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(rewardPerTokenStored) >= ori(rewards[msg.sender])",
            "ori(rewardPerTokenStored) >= ori(Sum(rewards[...]))",
            "ori(rewardPerTokenStored) == ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(rewardPerTokenStored) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(lastStakeTimes[...])) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(Sum(lastStakeTimes[...])) >= ori(rewards[msg.sender])",
            "ori(Sum(lastStakeTimes[...])) >= ori(Sum(rewards[...]))",
            "ori(Sum(accumulatedStakingPower[...])) == ori(rewards[msg.sender])",
            "ori(Sum(accumulatedStakingPower[...])) >= ori(rewards[msg.sender])",
            "ori(Sum(accumulatedStakingPower[...])) <= ori(rewards[msg.sender])",
            "ori(Sum(accumulatedStakingPower[...])) == ori(lastStakeTimes[msg.sender])",
            "ori(Sum(accumulatedStakingPower[...])) >= ori(lastStakeTimes[msg.sender])",
            "ori(Sum(accumulatedStakingPower[...])) <= ori(lastStakeTimes[msg.sender])",
            "ori(Sum(accumulatedStakingPower[...])) <= ori(starttime)",
            "ori(Sum(accumulatedStakingPower[...])) < ori(starttime)",
            "ori(Sum(accumulatedStakingPower[...])) <= amount",
            "ori(Sum(accumulatedStakingPower[...])) < amount",
            "ori(Sum(accumulatedStakingPower[...])) == ori(Sum(rewards[...]))",
            "ori(Sum(accumulatedStakingPower[...])) >= ori(Sum(rewards[...]))",
            "ori(Sum(accumulatedStakingPower[...])) <= ori(Sum(rewards[...]))",
            "ori(Sum(accumulatedStakingPower[...])) == msg.value",
            "ori(Sum(accumulatedStakingPower[...])) <= msg.value",
            "ori(Sum(accumulatedStakingPower[...])) <= ori(periodFinish)",
            "ori(Sum(accumulatedStakingPower[...])) < ori(periodFinish)",
            "ori(Sum(accumulatedStakingPower[...])) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(rewards[msg.sender]) == ori(lastStakeTimes[msg.sender])",
            "ori(rewards[msg.sender]) >= ori(lastStakeTimes[msg.sender])",
            "ori(rewards[msg.sender]) <= ori(lastStakeTimes[msg.sender])",
            "ori(rewards[msg.sender]) <= ori(starttime)",
            "ori(rewards[msg.sender]) < ori(starttime)",
            "ori(rewards[msg.sender]) == ori(Sum(rewards[...]))",
            "ori(rewards[msg.sender]) >= ori(Sum(rewards[...]))",
            "ori(rewards[msg.sender]) == msg.value",
            "ori(rewards[msg.sender]) <= msg.value",
            "ori(rewards[msg.sender]) <= ori(periodFinish)",
            "ori(rewards[msg.sender]) < ori(periodFinish)",
            "ori(rewards[msg.sender]) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(lastStakeTimes[msg.sender]) <= ori(starttime)",
            "ori(lastStakeTimes[msg.sender]) < ori(starttime)",
            "ori(lastStakeTimes[msg.sender]) == ori(Sum(rewards[...]))",
            "ori(lastStakeTimes[msg.sender]) >= ori(Sum(rewards[...]))",
            "ori(lastStakeTimes[msg.sender]) <= ori(Sum(rewards[...]))",
            "ori(lastStakeTimes[msg.sender]) == msg.value",
            "ori(lastStakeTimes[msg.sender]) <= msg.value",
            "ori(starttime) >= ori(Sum(rewards[...]))",
            "ori(starttime) > ori(Sum(rewards[...]))",
            "ori(starttime) == ori(periodFinish)",
            "ori(starttime) >= ori(periodFinish)",
            "amount >= ori(Sum(rewards[...]))",
            "amount > ori(Sum(rewards[...]))",
            "amount >= ori(Sum(userRewardPerTokenPaid[...]))",
            "amount > ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(rewards[...])) == msg.value",
            "ori(Sum(rewards[...])) <= msg.value",
            "ori(Sum(rewards[...])) <= ori(periodFinish)",
            "ori(Sum(rewards[...])) < ori(periodFinish)",
            "ori(Sum(rewards[...])) <= ori(Sum(userRewardPerTokenPaid[...]))"
        ],
        "falsified_postconditions": [
            "Sum(accumulatedStakingPower[...]) == 0",
            "rewards[msg.sender] == 0",
            "Sum(rewards[...]) == 0",
            "Sum(accumulatedStakingPower[...]) == ori(_balances[msg.sender])",
            "Sum(accumulatedStakingPower[...]) >= ori(_balances[msg.sender])",
            "Sum(accumulatedStakingPower[...]) <= ori(_balances[msg.sender])",
            "Sum(accumulatedStakingPower[...]) <= lastUpdateTime",
            "Sum(accumulatedStakingPower[...]) < lastUpdateTime",
            "Sum(accumulatedStakingPower[...]) <= _balances[msg.sender]",
            "Sum(accumulatedStakingPower[...]) < _balances[msg.sender]",
            "Sum(accumulatedStakingPower[...]) <= currentEpoch",
            "Sum(accumulatedStakingPower[...]) <= ori(vETH_REWARD_FRACTION_RATE)",
            "Sum(accumulatedStakingPower[...]) < ori(vETH_REWARD_FRACTION_RATE)",
            "Sum(accumulatedStakingPower[...]) <= periodFinish",
            "Sum(accumulatedStakingPower[...]) < periodFinish",
            "Sum(accumulatedStakingPower[...]) <= rewardRate",
            "Sum(accumulatedStakingPower[...]) < rewardRate",
            "Sum(accumulatedStakingPower[...]) <= lastStakeTimes[msg.sender]",
            "Sum(accumulatedStakingPower[...]) < lastStakeTimes[msg.sender]",
            "Sum(accumulatedStakingPower[...]) == rewards[msg.sender]",
            "Sum(accumulatedStakingPower[...]) >= rewards[msg.sender]",
            "Sum(accumulatedStakingPower[...]) <= rewards[msg.sender]",
            "Sum(accumulatedStakingPower[...]) <= ori(lastUpdateTime)",
            "Sum(accumulatedStakingPower[...]) < ori(lastUpdateTime)",
            "Sum(accumulatedStakingPower[...]) <= rewardPerTokenStored",
            "Sum(accumulatedStakingPower[...]) == ori(currentEpoch)",
            "Sum(accumulatedStakingPower[...]) >= ori(currentEpoch)",
            "Sum(accumulatedStakingPower[...]) <= ori(currentEpoch)",
            "Sum(accumulatedStakingPower[...]) <= ori(rewardRate)",
            "Sum(accumulatedStakingPower[...]) < ori(rewardRate)",
            "Sum(accumulatedStakingPower[...]) <= ori(vUSD_REWARD_FRACTION_RATE)",
            "Sum(accumulatedStakingPower[...]) < ori(vUSD_REWARD_FRACTION_RATE)",
            "Sum(accumulatedStakingPower[...]) <= ori(rewardPerTokenStored)",
            "Sum(accumulatedStakingPower[...]) <= starttime",
            "Sum(accumulatedStakingPower[...]) < starttime",
            "Sum(accumulatedStakingPower[...]) <= ori(Sum(lastStakeTimes[...]))",
            "Sum(accumulatedStakingPower[...]) == ori(rewards[msg.sender])",
            "Sum(accumulatedStakingPower[...]) >= ori(rewards[msg.sender])",
            "Sum(accumulatedStakingPower[...]) <= ori(rewards[msg.sender])",
            "Sum(accumulatedStakingPower[...]) == ori(lastStakeTimes[msg.sender])",
            "Sum(accumulatedStakingPower[...]) >= ori(lastStakeTimes[msg.sender])",
            "Sum(accumulatedStakingPower[...]) <= ori(lastStakeTimes[msg.sender])",
            "Sum(accumulatedStakingPower[...]) <= ori(starttime)",
            "Sum(accumulatedStakingPower[...]) < ori(starttime)",
            "Sum(accumulatedStakingPower[...]) <= vETH_REWARD_FRACTION_RATE",
            "Sum(accumulatedStakingPower[...]) < vETH_REWARD_FRACTION_RATE",
            "Sum(accumulatedStakingPower[...]) <= amount",
            "Sum(accumulatedStakingPower[...]) < amount",
            "Sum(accumulatedStakingPower[...]) <= Sum(userRewardPerTokenPaid[...])",
            "Sum(accumulatedStakingPower[...]) == ori(Sum(rewards[...]))",
            "Sum(accumulatedStakingPower[...]) >= ori(Sum(rewards[...]))",
            "Sum(accumulatedStakingPower[...]) <= ori(Sum(rewards[...]))",
            "Sum(accumulatedStakingPower[...]) <= Sum(lastStakeTimes[...])",
            "Sum(accumulatedStakingPower[...]) < Sum(lastStakeTimes[...])",
            "Sum(accumulatedStakingPower[...]) == msg.value",
            "Sum(accumulatedStakingPower[...]) <= msg.value",
            "Sum(accumulatedStakingPower[...]) == Sum(rewards[...])",
            "Sum(accumulatedStakingPower[...]) >= Sum(rewards[...])",
            "Sum(accumulatedStakingPower[...]) <= Sum(rewards[...])",
            "Sum(accumulatedStakingPower[...]) <= ori(periodFinish)",
            "Sum(accumulatedStakingPower[...]) < ori(periodFinish)",
            "Sum(accumulatedStakingPower[...]) <= vUSD_REWARD_FRACTION_RATE",
            "Sum(accumulatedStakingPower[...]) < vUSD_REWARD_FRACTION_RATE",
            "Sum(accumulatedStakingPower[...]) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(_balances[msg.sender]) <= lastUpdateTime",
            "ori(_balances[msg.sender]) < lastUpdateTime",
            "ori(_balances[msg.sender]) <= currentEpoch",
            "ori(_balances[msg.sender]) <= periodFinish",
            "ori(_balances[msg.sender]) < periodFinish",
            "ori(_balances[msg.sender]) <= rewardRate",
            "ori(_balances[msg.sender]) < rewardRate",
            "ori(_balances[msg.sender]) <= lastStakeTimes[msg.sender]",
            "ori(_balances[msg.sender]) < lastStakeTimes[msg.sender]",
            "ori(_balances[msg.sender]) == rewards[msg.sender]",
            "ori(_balances[msg.sender]) <= rewards[msg.sender]",
            "ori(_balances[msg.sender]) <= rewardPerTokenStored",
            "ori(_balances[msg.sender]) <= starttime",
            "ori(_balances[msg.sender]) < starttime",
            "ori(_balances[msg.sender]) <= vETH_REWARD_FRACTION_RATE",
            "ori(_balances[msg.sender]) < vETH_REWARD_FRACTION_RATE",
            "ori(_balances[msg.sender]) <= Sum(userRewardPerTokenPaid[...])",
            "ori(_balances[msg.sender]) <= Sum(lastStakeTimes[...])",
            "ori(_balances[msg.sender]) < Sum(lastStakeTimes[...])",
            "ori(_balances[msg.sender]) == Sum(rewards[...])",
            "ori(_balances[msg.sender]) >= Sum(rewards[...])",
            "ori(_balances[msg.sender]) <= Sum(rewards[...])",
            "ori(_balances[msg.sender]) <= vUSD_REWARD_FRACTION_RATE",
            "ori(_balances[msg.sender]) < vUSD_REWARD_FRACTION_RATE",
            "_totalSupply >= ori(currentEpochReward)",
            "_totalSupply > ori(currentEpochReward)",
            "_totalSupply >= ori(totalAccumulatedReward)",
            "_totalSupply > ori(totalAccumulatedReward)",
            "lastUpdateTime >= rewards[msg.sender]",
            "lastUpdateTime > rewards[msg.sender]",
            "lastUpdateTime > ori(lastUpdateTime)",
            "lastUpdateTime != ori(lastUpdateTime)",
            "lastUpdateTime >= ori(Sum(accumulatedStakingPower[...]))",
            "lastUpdateTime > ori(Sum(accumulatedStakingPower[...]))",
            "lastUpdateTime >= ori(rewards[msg.sender])",
            "lastUpdateTime > ori(rewards[msg.sender])",
            "lastUpdateTime > ori(lastStakeTimes[msg.sender])",
            "lastUpdateTime != ori(lastStakeTimes[msg.sender])",
            "lastUpdateTime >= ori(Sum(rewards[...]))",
            "lastUpdateTime > ori(Sum(rewards[...]))",
            "lastUpdateTime >= Sum(rewards[...])",
            "lastUpdateTime > Sum(rewards[...])",
            "_balances[msg.sender] >= ori(currentEpochReward)",
            "_balances[msg.sender] > ori(currentEpochReward)",
            "_balances[msg.sender] >= ori(totalAccumulatedReward)",
            "_balances[msg.sender] > ori(totalAccumulatedReward)",
            "_balances[msg.sender] >= ori(Sum(accumulatedStakingPower[...]))",
            "_balances[msg.sender] > ori(Sum(accumulatedStakingPower[...]))",
            "_balances[msg.sender] == amount",
            "_balances[msg.sender] <= amount",
            "_balances[msg.sender] >= ori(Sum(rewards[...]))",
            "_balances[msg.sender] > ori(Sum(rewards[...]))",
            "_balances[msg.sender] >= Sum(rewards[...])",
            "_balances[msg.sender] > Sum(rewards[...])",
            "ori(currentEpochReward) <= Sum(_balances[...])",
            "ori(currentEpochReward) < Sum(_balances[...])",
            "currentEpoch >= rewards[msg.sender]",
            "currentEpoch >= ori(Sum(accumulatedStakingPower[...]))",
            "currentEpoch >= ori(rewards[msg.sender])",
            "currentEpoch >= ori(lastStakeTimes[msg.sender])",
            "currentEpoch >= ori(Sum(rewards[...]))",
            "currentEpoch >= Sum(rewards[...])",
            "ori(vETH_REWARD_FRACTION_RATE) >= rewards[msg.sender]",
            "ori(vETH_REWARD_FRACTION_RATE) > rewards[msg.sender]",
            "ori(vETH_REWARD_FRACTION_RATE) >= Sum(rewards[...])",
            "ori(vETH_REWARD_FRACTION_RATE) > Sum(rewards[...])",
            "periodFinish >= rewards[msg.sender]",
            "periodFinish > rewards[msg.sender]",
            "periodFinish >= ori(Sum(accumulatedStakingPower[...]))",
            "periodFinish > ori(Sum(accumulatedStakingPower[...]))",
            "periodFinish >= ori(rewards[msg.sender])",
            "periodFinish > ori(rewards[msg.sender])",
            "periodFinish >= ori(Sum(rewards[...]))",
            "periodFinish > ori(Sum(rewards[...]))",
            "periodFinish >= Sum(rewards[...])",
            "periodFinish > Sum(rewards[...])",
            "rewardRate >= rewards[msg.sender]",
            "rewardRate > rewards[msg.sender]",
            "rewardRate >= ori(Sum(accumulatedStakingPower[...]))",
            "rewardRate > ori(Sum(accumulatedStakingPower[...]))",
            "rewardRate >= ori(rewards[msg.sender])",
            "rewardRate > ori(rewards[msg.sender])",
            "rewardRate >= ori(Sum(rewards[...]))",
            "rewardRate > ori(Sum(rewards[...]))",
            "rewardRate >= Sum(rewards[...])",
            "rewardRate > Sum(rewards[...])",
            "rewardRate >= ori(Sum(userRewardPerTokenPaid[...]))",
            "rewardRate > ori(Sum(userRewardPerTokenPaid[...]))",
            "lastStakeTimes[msg.sender] >= rewards[msg.sender]",
            "lastStakeTimes[msg.sender] > rewards[msg.sender]",
            "lastStakeTimes[msg.sender] > ori(lastUpdateTime)",
            "lastStakeTimes[msg.sender] != ori(lastUpdateTime)",
            "lastStakeTimes[msg.sender] >= ori(Sum(accumulatedStakingPower[...]))",
            "lastStakeTimes[msg.sender] > ori(Sum(accumulatedStakingPower[...]))",
            "lastStakeTimes[msg.sender] >= ori(rewards[msg.sender])",
            "lastStakeTimes[msg.sender] > ori(rewards[msg.sender])",
            "lastStakeTimes[msg.sender] > ori(lastStakeTimes[msg.sender])",
            "lastStakeTimes[msg.sender] != ori(lastStakeTimes[msg.sender])",
            "lastStakeTimes[msg.sender] >= ori(Sum(rewards[...]))",
            "lastStakeTimes[msg.sender] > ori(Sum(rewards[...]))",
            "lastStakeTimes[msg.sender] >= Sum(rewards[...])",
            "lastStakeTimes[msg.sender] > Sum(rewards[...])",
            "rewards[msg.sender] <= ori(lastUpdateTime)",
            "rewards[msg.sender] < ori(lastUpdateTime)",
            "rewards[msg.sender] <= rewardPerTokenStored",
            "rewards[msg.sender] == ori(currentEpoch)",
            "rewards[msg.sender] >= ori(currentEpoch)",
            "rewards[msg.sender] <= ori(currentEpoch)",
            "rewards[msg.sender] <= ori(rewardRate)",
            "rewards[msg.sender] < ori(rewardRate)",
            "rewards[msg.sender] <= ori(vUSD_REWARD_FRACTION_RATE)",
            "rewards[msg.sender] < ori(vUSD_REWARD_FRACTION_RATE)",
            "rewards[msg.sender] <= ori(rewardPerTokenStored)",
            "rewards[msg.sender] <= starttime",
            "rewards[msg.sender] < starttime",
            "rewards[msg.sender] <= ori(Sum(lastStakeTimes[...]))",
            "rewards[msg.sender] == ori(Sum(accumulatedStakingPower[...]))",
            "rewards[msg.sender] >= ori(Sum(accumulatedStakingPower[...]))",
            "rewards[msg.sender] <= ori(Sum(accumulatedStakingPower[...]))",
            "rewards[msg.sender] == ori(rewards[msg.sender])",
            "rewards[msg.sender] <= ori(rewards[msg.sender])",
            "rewards[msg.sender] == ori(lastStakeTimes[msg.sender])",
            "rewards[msg.sender] >= ori(lastStakeTimes[msg.sender])",
            "rewards[msg.sender] <= ori(lastStakeTimes[msg.sender])",
            "rewards[msg.sender] <= ori(starttime)",
            "rewards[msg.sender] < ori(starttime)",
            "rewards[msg.sender] <= vETH_REWARD_FRACTION_RATE",
            "rewards[msg.sender] < vETH_REWARD_FRACTION_RATE",
            "rewards[msg.sender] <= Sum(userRewardPerTokenPaid[...])",
            "rewards[msg.sender] == ori(Sum(rewards[...]))",
            "rewards[msg.sender] >= ori(Sum(rewards[...]))",
            "rewards[msg.sender] <= ori(Sum(rewards[...]))",
            "rewards[msg.sender] <= Sum(lastStakeTimes[...])",
            "rewards[msg.sender] < Sum(lastStakeTimes[...])",
            "rewards[msg.sender] == msg.value",
            "rewards[msg.sender] <= msg.value",
            "rewards[msg.sender] == Sum(rewards[...])",
            "rewards[msg.sender] >= Sum(rewards[...])",
            "rewards[msg.sender] <= ori(periodFinish)",
            "rewards[msg.sender] < ori(periodFinish)",
            "rewards[msg.sender] <= vUSD_REWARD_FRACTION_RATE",
            "rewards[msg.sender] < vUSD_REWARD_FRACTION_RATE",
            "rewards[msg.sender] <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(lastUpdateTime) <= starttime",
            "ori(lastUpdateTime) < starttime",
            "ori(lastUpdateTime) >= Sum(rewards[...])",
            "ori(lastUpdateTime) > Sum(rewards[...])",
            "rewardPerTokenStored >= ori(Sum(accumulatedStakingPower[...]))",
            "rewardPerTokenStored >= ori(rewards[msg.sender])",
            "rewardPerTokenStored >= ori(Sum(rewards[...]))",
            "rewardPerTokenStored >= Sum(rewards[...])",
            "rewardPerTokenStored >= ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(_balances[...]) >= ori(totalAccumulatedReward)",
            "Sum(_balances[...]) > ori(totalAccumulatedReward)",
            "ori(totalAccumulatedReward) <= currentEpochReward",
            "ori(currentEpoch) == Sum(rewards[...])",
            "ori(currentEpoch) >= Sum(rewards[...])",
            "ori(currentEpoch) <= Sum(rewards[...])",
            "ori(rewardRate) >= Sum(rewards[...])",
            "ori(rewardRate) > Sum(rewards[...])",
            "ori(vUSD_REWARD_FRACTION_RATE) >= Sum(lastStakeTimes[...])",
            "ori(vUSD_REWARD_FRACTION_RATE) > Sum(lastStakeTimes[...])",
            "ori(vUSD_REWARD_FRACTION_RATE) >= Sum(rewards[...])",
            "ori(vUSD_REWARD_FRACTION_RATE) > Sum(rewards[...])",
            "ori(rewardPerTokenStored) >= Sum(rewards[...])",
            "starttime >= ori(Sum(accumulatedStakingPower[...]))",
            "starttime > ori(Sum(accumulatedStakingPower[...]))",
            "starttime >= ori(rewards[msg.sender])",
            "starttime > ori(rewards[msg.sender])",
            "starttime >= ori(lastStakeTimes[msg.sender])",
            "starttime > ori(lastStakeTimes[msg.sender])",
            "starttime >= ori(Sum(rewards[...]))",
            "starttime > ori(Sum(rewards[...]))",
            "starttime >= Sum(rewards[...])",
            "starttime > Sum(rewards[...])",
            "starttime == ori(periodFinish)",
            "starttime >= ori(periodFinish)",
            "ori(Sum(lastStakeTimes[...])) < Sum(lastStakeTimes[...])",
            "ori(Sum(lastStakeTimes[...])) != Sum(lastStakeTimes[...])",
            "ori(Sum(lastStakeTimes[...])) >= Sum(rewards[...])",
            "ori(Sum(lastStakeTimes[...])) <= vUSD_REWARD_FRACTION_RATE",
            "ori(Sum(lastStakeTimes[...])) < vUSD_REWARD_FRACTION_RATE",
            "ori(Sum(accumulatedStakingPower[...])) <= vETH_REWARD_FRACTION_RATE",
            "ori(Sum(accumulatedStakingPower[...])) < vETH_REWARD_FRACTION_RATE",
            "ori(Sum(accumulatedStakingPower[...])) <= Sum(userRewardPerTokenPaid[...])",
            "ori(Sum(accumulatedStakingPower[...])) <= Sum(lastStakeTimes[...])",
            "ori(Sum(accumulatedStakingPower[...])) < Sum(lastStakeTimes[...])",
            "ori(Sum(accumulatedStakingPower[...])) == Sum(rewards[...])",
            "ori(Sum(accumulatedStakingPower[...])) >= Sum(rewards[...])",
            "ori(Sum(accumulatedStakingPower[...])) <= Sum(rewards[...])",
            "ori(Sum(accumulatedStakingPower[...])) <= vUSD_REWARD_FRACTION_RATE",
            "ori(Sum(accumulatedStakingPower[...])) < vUSD_REWARD_FRACTION_RATE",
            "ori(rewards[msg.sender]) <= vETH_REWARD_FRACTION_RATE",
            "ori(rewards[msg.sender]) < vETH_REWARD_FRACTION_RATE",
            "ori(rewards[msg.sender]) <= Sum(userRewardPerTokenPaid[...])",
            "ori(rewards[msg.sender]) <= Sum(lastStakeTimes[...])",
            "ori(rewards[msg.sender]) < Sum(lastStakeTimes[...])",
            "ori(rewards[msg.sender]) == Sum(rewards[...])",
            "ori(rewards[msg.sender]) >= Sum(rewards[...])",
            "ori(rewards[msg.sender]) <= vUSD_REWARD_FRACTION_RATE",
            "ori(rewards[msg.sender]) < vUSD_REWARD_FRACTION_RATE",
            "ori(lastStakeTimes[msg.sender]) == Sum(rewards[...])",
            "ori(lastStakeTimes[msg.sender]) >= Sum(rewards[...])",
            "ori(starttime) >= Sum(rewards[...])",
            "ori(starttime) > Sum(rewards[...])",
            "vETH_REWARD_FRACTION_RATE >= ori(Sum(rewards[...]))",
            "vETH_REWARD_FRACTION_RATE > ori(Sum(rewards[...]))",
            "vETH_REWARD_FRACTION_RATE >= Sum(rewards[...])",
            "vETH_REWARD_FRACTION_RATE > Sum(rewards[...])",
            "amount >= Sum(userRewardPerTokenPaid[...])",
            "amount > Sum(userRewardPerTokenPaid[...])",
            "amount >= Sum(rewards[...])",
            "amount > Sum(rewards[...])",
            "Sum(userRewardPerTokenPaid[...]) >= ori(Sum(rewards[...]))",
            "Sum(userRewardPerTokenPaid[...]) >= Sum(rewards[...])",
            "ori(Sum(rewards[...])) <= Sum(lastStakeTimes[...])",
            "ori(Sum(rewards[...])) < Sum(lastStakeTimes[...])",
            "ori(Sum(rewards[...])) == Sum(rewards[...])",
            "ori(Sum(rewards[...])) >= Sum(rewards[...])",
            "ori(Sum(rewards[...])) <= vUSD_REWARD_FRACTION_RATE",
            "ori(Sum(rewards[...])) < vUSD_REWARD_FRACTION_RATE",
            "Sum(lastStakeTimes[...]) >= Sum(rewards[...])",
            "Sum(lastStakeTimes[...]) > Sum(rewards[...])",
            "Sum(lastStakeTimes[...]) <= vUSD_REWARD_FRACTION_RATE",
            "Sum(lastStakeTimes[...]) < vUSD_REWARD_FRACTION_RATE",
            "msg.value == Sum(rewards[...])",
            "msg.value >= Sum(rewards[...])",
            "Sum(rewards[...]) <= ori(periodFinish)",
            "Sum(rewards[...]) < ori(periodFinish)",
            "Sum(rewards[...]) <= vUSD_REWARD_FRACTION_RATE",
            "Sum(rewards[...]) < vUSD_REWARD_FRACTION_RATE",
            "Sum(rewards[...]) <= ori(Sum(userRewardPerTokenPaid[...]))"
        ]
    },
    {
        "func": "stake(amount,referrer)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "stakeOnBehalf(stakeFor,amount)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "stakeOnBehalf(stakeFor,amount)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "stakeReward()",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "stakeReward()",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "transferOwnership(newOwner)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "transferOwnership(newOwner)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "withdraw(amount)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "withdraw(amount)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": null,
        "type": "PptType.CONTRACT",
        "executionType": "TxType.NORMAL",
        "preconditions": [
            "ori(currentEpochReward) > 0",
            "ori(currentEpochReward) one of [888888888888888888,63000000000000000000000]",
            "ori(_owner) != 0",
            "ori(vETH_REWARD_FRACTION_RATE) > 0",
            "ori(vETH_REWARD_FRACTION_RATE) == 21000000000000",
            "ori(vETH_REWARD_FRACTION_RATE) one of [21000000000000]",
            "ori(totalAccumulatedReward) one of [0,63000888888888888888888,888888888888888888]",
            "ori(currentEpoch) one of [0,1]",
            "ori(rewardRate) one of [0,107353730542136,104166666666666666]",
            "ori(vUSD_REWARD_FRACTION_RATE) > 0",
            "ori(vUSD_REWARD_FRACTION_RATE) == 21000000000",
            "ori(vUSD_REWARD_FRACTION_RATE) one of [21000000000]",
            "ori(yfv) != 0",
            "ori(starttime) > 0",
            "ori(starttime) == 1598018400",
            "ori(starttime) one of [1598018400]",
            "ori(vUSD) != 0",
            "ori(periodFinish) one of [0,1598018400,1598623238]",
            "ori(vETH) != 0",
            "ori(currentEpochReward) >= ori(vETH_REWARD_FRACTION_RATE)",
            "ori(currentEpochReward) > ori(vETH_REWARD_FRACTION_RATE)",
            "ori(currentEpochReward) != ori(vETH_REWARD_FRACTION_RATE)",
            "ori(currentEpochReward) != ori(_totalSupply)",
            "ori(currentEpochReward) >= ori(lastUpdateTime)",
            "ori(currentEpochReward) > ori(lastUpdateTime)",
            "ori(currentEpochReward) != ori(lastUpdateTime)",
            "ori(currentEpochReward) >= ori(currentEpoch)",
            "ori(currentEpochReward) > ori(currentEpoch)",
            "ori(currentEpochReward) != ori(currentEpoch)",
            "ori(currentEpochReward) >= ori(rewardRate)",
            "ori(currentEpochReward) > ori(rewardRate)",
            "ori(currentEpochReward) != ori(rewardRate)",
            "ori(currentEpochReward) >= ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(currentEpochReward) > ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(currentEpochReward) != ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(currentEpochReward) >= ori(rewardPerTokenStored)",
            "ori(currentEpochReward) > ori(rewardPerTokenStored)",
            "ori(currentEpochReward) != ori(rewardPerTokenStored)",
            "ori(currentEpochReward) >= ori(Sum(lastStakeTimes[...]))",
            "ori(currentEpochReward) > ori(Sum(lastStakeTimes[...]))",
            "ori(currentEpochReward) != ori(Sum(lastStakeTimes[...]))",
            "ori(currentEpochReward) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(currentEpochReward) > ori(Sum(accumulatedStakingPower[...]))",
            "ori(currentEpochReward) != ori(Sum(accumulatedStakingPower[...]))",
            "ori(currentEpochReward) >= ori(starttime)",
            "ori(currentEpochReward) > ori(starttime)",
            "ori(currentEpochReward) != ori(starttime)",
            "ori(currentEpochReward) >= ori(Sum(rewards[...]))",
            "ori(currentEpochReward) > ori(Sum(rewards[...]))",
            "ori(currentEpochReward) != ori(Sum(rewards[...]))",
            "ori(currentEpochReward) >= ori(periodFinish)",
            "ori(currentEpochReward) > ori(periodFinish)",
            "ori(currentEpochReward) != ori(periodFinish)",
            "ori(currentEpochReward) != ori(Sum(_balances[...]))",
            "ori(currentEpochReward) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(currentEpochReward) > ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(currentEpochReward) != ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(_owner) != ori(rewardVote)",
            "ori(_owner) != ori(yfv)",
            "ori(_owner) != ori(rewardReferral)",
            "ori(_owner) != ori(vUSD)",
            "ori(_owner) != ori(vETH)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(_totalSupply)",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(lastUpdateTime)",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(lastUpdateTime)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(lastUpdateTime)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(totalAccumulatedReward)",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(currentEpoch)",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(currentEpoch)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(currentEpoch)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(rewardRate)",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(rewardPerTokenStored)",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(Sum(lastStakeTimes[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(Sum(lastStakeTimes[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(Sum(lastStakeTimes[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(Sum(accumulatedStakingPower[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(starttime)",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(starttime)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(starttime)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(Sum(rewards[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(periodFinish)",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(periodFinish)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(periodFinish)",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(Sum(_balances[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) != ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(rewardVote) != ori(yfv)",
            "ori(rewardVote) != ori(vUSD)",
            "ori(rewardVote) != ori(vETH)",
            "ori(_totalSupply) >= ori(currentEpoch)",
            "ori(_totalSupply) != ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(_totalSupply) >= ori(rewardPerTokenStored)",
            "ori(_totalSupply) >= ori(Sum(lastStakeTimes[...]))",
            "ori(_totalSupply) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(_totalSupply) != ori(starttime)",
            "ori(_totalSupply) >= ori(Sum(rewards[...]))",
            "ori(_totalSupply) == ori(Sum(_balances[...]))",
            "ori(_totalSupply) >= ori(Sum(_balances[...]))",
            "ori(_totalSupply) <= ori(Sum(_balances[...]))",
            "ori(_totalSupply) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(lastUpdateTime) <= ori(totalAccumulatedReward)",
            "ori(lastUpdateTime) >= ori(currentEpoch)",
            "ori(lastUpdateTime) <= ori(rewardRate)",
            "ori(lastUpdateTime) <= ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(lastUpdateTime) < ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(lastUpdateTime) != ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(lastUpdateTime) != ori(starttime)",
            "ori(lastUpdateTime) <= ori(periodFinish)",
            "ori(totalAccumulatedReward) >= ori(currentEpoch)",
            "ori(totalAccumulatedReward) >= ori(rewardRate)",
            "ori(totalAccumulatedReward) != ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(totalAccumulatedReward) >= ori(rewardPerTokenStored)",
            "ori(totalAccumulatedReward) >= ori(Sum(lastStakeTimes[...]))",
            "ori(totalAccumulatedReward) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(totalAccumulatedReward) != ori(starttime)",
            "ori(totalAccumulatedReward) >= ori(Sum(rewards[...]))",
            "ori(totalAccumulatedReward) >= ori(periodFinish)",
            "ori(totalAccumulatedReward) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(currentEpoch) <= ori(rewardRate)",
            "ori(currentEpoch) <= ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(currentEpoch) < ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(currentEpoch) != ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(currentEpoch) <= ori(rewardPerTokenStored)",
            "ori(currentEpoch) <= ori(Sum(lastStakeTimes[...]))",
            "ori(currentEpoch) <= ori(starttime)",
            "ori(currentEpoch) < ori(starttime)",
            "ori(currentEpoch) != ori(starttime)",
            "ori(currentEpoch) <= ori(periodFinish)",
            "ori(currentEpoch) <= ori(Sum(_balances[...]))",
            "ori(currentEpoch) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(rewardRate) != ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(rewardRate) >= ori(Sum(lastStakeTimes[...]))",
            "ori(rewardRate) != ori(starttime)",
            "ori(rewardRate) >= ori(periodFinish)",
            "ori(vUSD_REWARD_FRACTION_RATE) != ori(rewardPerTokenStored)",
            "ori(vUSD_REWARD_FRACTION_RATE) != ori(Sum(lastStakeTimes[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) != ori(Sum(accumulatedStakingPower[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) >= ori(starttime)",
            "ori(vUSD_REWARD_FRACTION_RATE) > ori(starttime)",
            "ori(vUSD_REWARD_FRACTION_RATE) != ori(starttime)",
            "ori(vUSD_REWARD_FRACTION_RATE) != ori(Sum(rewards[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) >= ori(periodFinish)",
            "ori(vUSD_REWARD_FRACTION_RATE) > ori(periodFinish)",
            "ori(vUSD_REWARD_FRACTION_RATE) != ori(periodFinish)",
            "ori(vUSD_REWARD_FRACTION_RATE) != ori(Sum(_balances[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) != ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(rewardPerTokenStored) != ori(starttime)",
            "ori(rewardPerTokenStored) <= ori(Sum(_balances[...]))",
            "ori(rewardPerTokenStored) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(lastStakeTimes[...])) != ori(starttime)",
            "ori(Sum(lastStakeTimes[...])) <= ori(Sum(_balances[...]))",
            "ori(Sum(accumulatedStakingPower[...])) != ori(starttime)",
            "ori(Sum(accumulatedStakingPower[...])) <= ori(Sum(_balances[...]))",
            "ori(yfv) != ori(rewardReferral)",
            "ori(yfv) != ori(vUSD)",
            "ori(yfv) != ori(vETH)",
            "ori(starttime) != ori(Sum(rewards[...]))",
            "ori(starttime) != ori(Sum(_balances[...]))",
            "ori(starttime) != ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(rewards[...])) <= ori(Sum(_balances[...]))",
            "ori(rewardReferral) != ori(vUSD)",
            "ori(rewardReferral) != ori(vETH)",
            "ori(vUSD) != ori(vETH)",
            "ori(Sum(_balances[...])) >= ori(Sum(userRewardPerTokenPaid[...]))"
        ],
        "postconditions": [
            "vUSD != 0",
            "currentEpoch one of [0,1]",
            "_owner != 0",
            "elem of accumulatedStakingPower[...] is one of [0]",
            "yfv != 0",
            "periodFinish one of [0,1598018400,1598623238]",
            "rewardRate one of [0,107353730542136,104166666666666666]",
            "elem of lastStakeTimes[...] is one of [0]",
            "elem of userRewardPerTokenPaid[...] is one of [0]",
            "elem of _balances[...] is one of [0]",
            "rewardReferral != 0",
            "starttime > 0",
            "starttime == 1598018400",
            "starttime one of [1598018400]",
            "vETH_REWARD_FRACTION_RATE > 0",
            "vETH_REWARD_FRACTION_RATE == 21000000000000",
            "vETH_REWARD_FRACTION_RATE one of [21000000000000]",
            "currentEpochReward > 0",
            "currentEpochReward one of [888888888888888888,63000000000000000000000]",
            "vETH != 0",
            "vUSD_REWARD_FRACTION_RATE > 0",
            "vUSD_REWARD_FRACTION_RATE == 21000000000",
            "vUSD_REWARD_FRACTION_RATE one of [21000000000]",
            "elem of rewards[...] is one of [0]",
            "totalAccumulatedReward one of [0,63000888888888888888888,888888888888888888]",
            "Sum(accumulatedStakingPower[...]) <= _totalSupply",
            "Sum(accumulatedStakingPower[...]) <= ori(currentEpochReward)",
            "Sum(accumulatedStakingPower[...]) < ori(currentEpochReward)",
            "Sum(accumulatedStakingPower[...]) != ori(currentEpochReward)",
            "Sum(accumulatedStakingPower[...]) != ori(vETH_REWARD_FRACTION_RATE)",
            "Sum(accumulatedStakingPower[...]) <= ori(_totalSupply)",
            "Sum(accumulatedStakingPower[...]) <= Sum(_balances[...])",
            "Sum(accumulatedStakingPower[...]) <= ori(totalAccumulatedReward)",
            "Sum(accumulatedStakingPower[...]) != ori(vUSD_REWARD_FRACTION_RATE)",
            "Sum(accumulatedStakingPower[...]) != starttime",
            "Sum(accumulatedStakingPower[...]) >= ori(Sum(accumulatedStakingPower[...]))",
            "Sum(accumulatedStakingPower[...]) != ori(starttime)",
            "Sum(accumulatedStakingPower[...]) != vETH_REWARD_FRACTION_RATE",
            "Sum(accumulatedStakingPower[...]) <= currentEpochReward",
            "Sum(accumulatedStakingPower[...]) < currentEpochReward",
            "Sum(accumulatedStakingPower[...]) != currentEpochReward",
            "Sum(accumulatedStakingPower[...]) != vUSD_REWARD_FRACTION_RATE",
            "Sum(accumulatedStakingPower[...]) <= ori(Sum(_balances[...]))",
            "Sum(accumulatedStakingPower[...]) <= totalAccumulatedReward",
            "_totalSupply != ori(currentEpochReward)",
            "_totalSupply >= currentEpoch",
            "_totalSupply != ori(vETH_REWARD_FRACTION_RATE)",
            "_totalSupply >= ori(_totalSupply)",
            "_totalSupply >= ori(lastUpdateTime)",
            "_totalSupply >= rewardPerTokenStored",
            "_totalSupply == Sum(_balances[...])",
            "_totalSupply >= Sum(_balances[...])",
            "_totalSupply <= Sum(_balances[...])",
            "_totalSupply >= ori(currentEpoch)",
            "_totalSupply >= ori(rewardRate)",
            "_totalSupply != ori(vUSD_REWARD_FRACTION_RATE)",
            "_totalSupply >= ori(rewardPerTokenStored)",
            "_totalSupply != starttime",
            "_totalSupply >= ori(Sum(lastStakeTimes[...]))",
            "_totalSupply >= ori(Sum(accumulatedStakingPower[...]))",
            "_totalSupply != ori(starttime)",
            "_totalSupply != vETH_REWARD_FRACTION_RATE",
            "_totalSupply != currentEpochReward",
            "_totalSupply >= Sum(userRewardPerTokenPaid[...])",
            "_totalSupply >= ori(Sum(rewards[...]))",
            "_totalSupply >= Sum(lastStakeTimes[...])",
            "_totalSupply >= Sum(rewards[...])",
            "_totalSupply >= ori(periodFinish)",
            "_totalSupply != vUSD_REWARD_FRACTION_RATE",
            "_totalSupply >= ori(Sum(_balances[...]))",
            "_totalSupply >= ori(Sum(userRewardPerTokenPaid[...]))",
            "vUSD != rewardVote",
            "vUSD != _owner",
            "vUSD != ori(_owner)",
            "vUSD != yfv",
            "vUSD != ori(rewardVote)",
            "vUSD != rewardReferral",
            "vUSD != ori(yfv)",
            "vUSD != ori(rewardReferral)",
            "vUSD == ori(vUSD)",
            "vUSD != vETH",
            "vUSD != ori(vETH)",
            "lastUpdateTime <= ori(currentEpochReward)",
            "lastUpdateTime < ori(currentEpochReward)",
            "lastUpdateTime != ori(currentEpochReward)",
            "lastUpdateTime >= currentEpoch",
            "lastUpdateTime <= ori(vETH_REWARD_FRACTION_RATE)",
            "lastUpdateTime < ori(vETH_REWARD_FRACTION_RATE)",
            "lastUpdateTime != ori(vETH_REWARD_FRACTION_RATE)",
            "lastUpdateTime <= periodFinish",
            "lastUpdateTime <= rewardRate",
            "lastUpdateTime >= ori(lastUpdateTime)",
            "lastUpdateTime >= ori(currentEpoch)",
            "lastUpdateTime <= ori(vUSD_REWARD_FRACTION_RATE)",
            "lastUpdateTime < ori(vUSD_REWARD_FRACTION_RATE)",
            "lastUpdateTime != ori(vUSD_REWARD_FRACTION_RATE)",
            "lastUpdateTime != starttime",
            "lastUpdateTime != ori(starttime)",
            "lastUpdateTime <= vETH_REWARD_FRACTION_RATE",
            "lastUpdateTime < vETH_REWARD_FRACTION_RATE",
            "lastUpdateTime != vETH_REWARD_FRACTION_RATE",
            "lastUpdateTime <= currentEpochReward",
            "lastUpdateTime < currentEpochReward",
            "lastUpdateTime != currentEpochReward",
            "lastUpdateTime <= vUSD_REWARD_FRACTION_RATE",
            "lastUpdateTime < vUSD_REWARD_FRACTION_RATE",
            "lastUpdateTime != vUSD_REWARD_FRACTION_RATE",
            "lastUpdateTime <= totalAccumulatedReward",
            "ori(currentEpochReward) >= currentEpoch",
            "ori(currentEpochReward) > currentEpoch",
            "ori(currentEpochReward) != currentEpoch",
            "ori(currentEpochReward) >= periodFinish",
            "ori(currentEpochReward) > periodFinish",
            "ori(currentEpochReward) != periodFinish",
            "ori(currentEpochReward) >= rewardRate",
            "ori(currentEpochReward) > rewardRate",
            "ori(currentEpochReward) != rewardRate",
            "ori(currentEpochReward) >= rewardPerTokenStored",
            "ori(currentEpochReward) > rewardPerTokenStored",
            "ori(currentEpochReward) != rewardPerTokenStored",
            "ori(currentEpochReward) != Sum(_balances[...])",
            "ori(currentEpochReward) >= starttime",
            "ori(currentEpochReward) > starttime",
            "ori(currentEpochReward) != starttime",
            "ori(currentEpochReward) >= vETH_REWARD_FRACTION_RATE",
            "ori(currentEpochReward) > vETH_REWARD_FRACTION_RATE",
            "ori(currentEpochReward) != vETH_REWARD_FRACTION_RATE",
            "ori(currentEpochReward) >= Sum(userRewardPerTokenPaid[...])",
            "ori(currentEpochReward) > Sum(userRewardPerTokenPaid[...])",
            "ori(currentEpochReward) != Sum(userRewardPerTokenPaid[...])",
            "ori(currentEpochReward) >= Sum(lastStakeTimes[...])",
            "ori(currentEpochReward) > Sum(lastStakeTimes[...])",
            "ori(currentEpochReward) != Sum(lastStakeTimes[...])",
            "ori(currentEpochReward) >= Sum(rewards[...])",
            "ori(currentEpochReward) > Sum(rewards[...])",
            "ori(currentEpochReward) != Sum(rewards[...])",
            "ori(currentEpochReward) >= vUSD_REWARD_FRACTION_RATE",
            "ori(currentEpochReward) > vUSD_REWARD_FRACTION_RATE",
            "ori(currentEpochReward) != vUSD_REWARD_FRACTION_RATE",
            "rewardVote != _owner",
            "rewardVote != ori(_owner)",
            "rewardVote != yfv",
            "rewardVote != rewardReferral",
            "rewardVote != ori(yfv)",
            "rewardVote != ori(vUSD)",
            "rewardVote != vETH",
            "rewardVote != ori(vETH)",
            "currentEpoch <= ori(vETH_REWARD_FRACTION_RATE)",
            "currentEpoch < ori(vETH_REWARD_FRACTION_RATE)",
            "currentEpoch != ori(vETH_REWARD_FRACTION_RATE)",
            "currentEpoch <= periodFinish",
            "currentEpoch <= rewardRate",
            "currentEpoch <= ori(_totalSupply)",
            "currentEpoch <= ori(lastUpdateTime)",
            "currentEpoch <= rewardPerTokenStored",
            "currentEpoch <= Sum(_balances[...])",
            "currentEpoch <= ori(totalAccumulatedReward)",
            "currentEpoch >= ori(currentEpoch)",
            "currentEpoch <= ori(rewardRate)",
            "currentEpoch <= ori(vUSD_REWARD_FRACTION_RATE)",
            "currentEpoch < ori(vUSD_REWARD_FRACTION_RATE)",
            "currentEpoch != ori(vUSD_REWARD_FRACTION_RATE)",
            "currentEpoch <= ori(rewardPerTokenStored)",
            "currentEpoch <= starttime",
            "currentEpoch < starttime",
            "currentEpoch != starttime",
            "currentEpoch <= ori(Sum(lastStakeTimes[...]))",
            "currentEpoch <= ori(starttime)",
            "currentEpoch < ori(starttime)",
            "currentEpoch != ori(starttime)",
            "currentEpoch <= vETH_REWARD_FRACTION_RATE",
            "currentEpoch < vETH_REWARD_FRACTION_RATE",
            "currentEpoch != vETH_REWARD_FRACTION_RATE",
            "currentEpoch <= currentEpochReward",
            "currentEpoch < currentEpochReward",
            "currentEpoch != currentEpochReward",
            "currentEpoch <= Sum(userRewardPerTokenPaid[...])",
            "currentEpoch <= Sum(lastStakeTimes[...])",
            "currentEpoch <= ori(periodFinish)",
            "currentEpoch <= vUSD_REWARD_FRACTION_RATE",
            "currentEpoch < vUSD_REWARD_FRACTION_RATE",
            "currentEpoch != vUSD_REWARD_FRACTION_RATE",
            "currentEpoch <= ori(Sum(_balances[...]))",
            "currentEpoch <= ori(Sum(userRewardPerTokenPaid[...]))",
            "currentEpoch <= totalAccumulatedReward",
            "_owner == ori(_owner)",
            "_owner != yfv",
            "_owner != ori(rewardVote)",
            "_owner != rewardReferral",
            "_owner != ori(yfv)",
            "_owner != ori(rewardReferral)",
            "_owner != ori(vUSD)",
            "_owner != vETH",
            "_owner != ori(vETH)",
            "ori(_owner) != yfv",
            "ori(_owner) != rewardReferral",
            "ori(_owner) != vETH",
            "ori(vETH_REWARD_FRACTION_RATE) >= periodFinish",
            "ori(vETH_REWARD_FRACTION_RATE) > periodFinish",
            "ori(vETH_REWARD_FRACTION_RATE) != periodFinish",
            "ori(vETH_REWARD_FRACTION_RATE) != rewardRate",
            "ori(vETH_REWARD_FRACTION_RATE) != rewardPerTokenStored",
            "ori(vETH_REWARD_FRACTION_RATE) != Sum(_balances[...])",
            "ori(vETH_REWARD_FRACTION_RATE) >= starttime",
            "ori(vETH_REWARD_FRACTION_RATE) > starttime",
            "ori(vETH_REWARD_FRACTION_RATE) != starttime",
            "ori(vETH_REWARD_FRACTION_RATE) == vETH_REWARD_FRACTION_RATE",
            "ori(vETH_REWARD_FRACTION_RATE) >= vETH_REWARD_FRACTION_RATE",
            "ori(vETH_REWARD_FRACTION_RATE) <= vETH_REWARD_FRACTION_RATE",
            "ori(vETH_REWARD_FRACTION_RATE) <= currentEpochReward",
            "ori(vETH_REWARD_FRACTION_RATE) < currentEpochReward",
            "ori(vETH_REWARD_FRACTION_RATE) != currentEpochReward",
            "ori(vETH_REWARD_FRACTION_RATE) != Sum(userRewardPerTokenPaid[...])",
            "ori(vETH_REWARD_FRACTION_RATE) >= Sum(lastStakeTimes[...])",
            "ori(vETH_REWARD_FRACTION_RATE) > Sum(lastStakeTimes[...])",
            "ori(vETH_REWARD_FRACTION_RATE) != Sum(lastStakeTimes[...])",
            "ori(vETH_REWARD_FRACTION_RATE) != Sum(rewards[...])",
            "ori(vETH_REWARD_FRACTION_RATE) >= vUSD_REWARD_FRACTION_RATE",
            "ori(vETH_REWARD_FRACTION_RATE) > vUSD_REWARD_FRACTION_RATE",
            "ori(vETH_REWARD_FRACTION_RATE) != vUSD_REWARD_FRACTION_RATE",
            "ori(vETH_REWARD_FRACTION_RATE) != totalAccumulatedReward",
            "yfv != ori(rewardVote)",
            "yfv != rewardReferral",
            "yfv == ori(yfv)",
            "yfv != ori(rewardReferral)",
            "yfv != ori(vUSD)",
            "yfv != vETH",
            "yfv != ori(vETH)",
            "periodFinish <= rewardRate",
            "periodFinish >= ori(lastUpdateTime)",
            "periodFinish >= ori(currentEpoch)",
            "periodFinish <= ori(vUSD_REWARD_FRACTION_RATE)",
            "periodFinish < ori(vUSD_REWARD_FRACTION_RATE)",
            "periodFinish != ori(vUSD_REWARD_FRACTION_RATE)",
            "periodFinish <= vETH_REWARD_FRACTION_RATE",
            "periodFinish < vETH_REWARD_FRACTION_RATE",
            "periodFinish != vETH_REWARD_FRACTION_RATE",
            "periodFinish <= currentEpochReward",
            "periodFinish < currentEpochReward",
            "periodFinish != currentEpochReward",
            "periodFinish >= ori(periodFinish)",
            "periodFinish <= vUSD_REWARD_FRACTION_RATE",
            "periodFinish < vUSD_REWARD_FRACTION_RATE",
            "periodFinish != vUSD_REWARD_FRACTION_RATE",
            "periodFinish <= totalAccumulatedReward",
            "rewardRate >= ori(lastUpdateTime)",
            "rewardRate >= ori(currentEpoch)",
            "rewardRate >= ori(rewardRate)",
            "rewardRate != ori(vUSD_REWARD_FRACTION_RATE)",
            "rewardRate >= ori(rewardPerTokenStored)",
            "rewardRate != starttime",
            "rewardRate >= ori(Sum(lastStakeTimes[...]))",
            "rewardRate != ori(starttime)",
            "rewardRate != vETH_REWARD_FRACTION_RATE",
            "rewardRate <= currentEpochReward",
            "rewardRate < currentEpochReward",
            "rewardRate != currentEpochReward",
            "rewardRate >= Sum(lastStakeTimes[...])",
            "rewardRate >= ori(periodFinish)",
            "rewardRate != vUSD_REWARD_FRACTION_RATE",
            "rewardRate <= totalAccumulatedReward",
            "ori(rewardVote) != rewardReferral",
            "ori(rewardVote) != vETH",
            "ori(_totalSupply) >= rewardPerTokenStored",
            "ori(_totalSupply) <= Sum(_balances[...])",
            "ori(_totalSupply) != starttime",
            "ori(_totalSupply) != vETH_REWARD_FRACTION_RATE",
            "ori(_totalSupply) != currentEpochReward",
            "ori(_totalSupply) >= Sum(userRewardPerTokenPaid[...])",
            "ori(_totalSupply) >= Sum(rewards[...])",
            "ori(_totalSupply) != vUSD_REWARD_FRACTION_RATE",
            "ori(lastUpdateTime) <= Sum(_balances[...])",
            "ori(lastUpdateTime) != starttime",
            "ori(lastUpdateTime) <= vETH_REWARD_FRACTION_RATE",
            "ori(lastUpdateTime) < vETH_REWARD_FRACTION_RATE",
            "ori(lastUpdateTime) != vETH_REWARD_FRACTION_RATE",
            "ori(lastUpdateTime) <= currentEpochReward",
            "ori(lastUpdateTime) < currentEpochReward",
            "ori(lastUpdateTime) != currentEpochReward",
            "ori(lastUpdateTime) <= Sum(lastStakeTimes[...])",
            "ori(lastUpdateTime) <= vUSD_REWARD_FRACTION_RATE",
            "ori(lastUpdateTime) < vUSD_REWARD_FRACTION_RATE",
            "ori(lastUpdateTime) != vUSD_REWARD_FRACTION_RATE",
            "ori(lastUpdateTime) <= totalAccumulatedReward",
            "rewardPerTokenStored <= Sum(_balances[...])",
            "rewardPerTokenStored <= ori(totalAccumulatedReward)",
            "rewardPerTokenStored >= ori(currentEpoch)",
            "rewardPerTokenStored != ori(vUSD_REWARD_FRACTION_RATE)",
            "rewardPerTokenStored >= ori(rewardPerTokenStored)",
            "rewardPerTokenStored != starttime",
            "rewardPerTokenStored >= ori(Sum(lastStakeTimes[...]))",
            "rewardPerTokenStored != ori(starttime)",
            "rewardPerTokenStored != vETH_REWARD_FRACTION_RATE",
            "rewardPerTokenStored <= currentEpochReward",
            "rewardPerTokenStored < currentEpochReward",
            "rewardPerTokenStored != currentEpochReward",
            "rewardPerTokenStored <= Sum(userRewardPerTokenPaid[...])",
            "rewardPerTokenStored != vUSD_REWARD_FRACTION_RATE",
            "rewardPerTokenStored <= ori(Sum(_balances[...]))",
            "rewardPerTokenStored <= totalAccumulatedReward",
            "Sum(_balances[...]) >= ori(currentEpoch)",
            "Sum(_balances[...]) >= ori(rewardRate)",
            "Sum(_balances[...]) != ori(vUSD_REWARD_FRACTION_RATE)",
            "Sum(_balances[...]) >= ori(rewardPerTokenStored)",
            "Sum(_balances[...]) != starttime",
            "Sum(_balances[...]) >= ori(Sum(lastStakeTimes[...]))",
            "Sum(_balances[...]) >= ori(Sum(accumulatedStakingPower[...]))",
            "Sum(_balances[...]) != ori(starttime)",
            "Sum(_balances[...]) != vETH_REWARD_FRACTION_RATE",
            "Sum(_balances[...]) != currentEpochReward",
            "Sum(_balances[...]) >= Sum(userRewardPerTokenPaid[...])",
            "Sum(_balances[...]) >= ori(Sum(rewards[...]))",
            "Sum(_balances[...]) >= Sum(lastStakeTimes[...])",
            "Sum(_balances[...]) >= Sum(rewards[...])",
            "Sum(_balances[...]) >= ori(periodFinish)",
            "Sum(_balances[...]) != vUSD_REWARD_FRACTION_RATE",
            "Sum(_balances[...]) >= ori(Sum(_balances[...]))",
            "Sum(_balances[...]) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(totalAccumulatedReward) != starttime",
            "ori(totalAccumulatedReward) != vETH_REWARD_FRACTION_RATE",
            "ori(totalAccumulatedReward) >= Sum(userRewardPerTokenPaid[...])",
            "ori(totalAccumulatedReward) >= Sum(lastStakeTimes[...])",
            "ori(totalAccumulatedReward) >= Sum(rewards[...])",
            "ori(totalAccumulatedReward) != vUSD_REWARD_FRACTION_RATE",
            "ori(totalAccumulatedReward) <= totalAccumulatedReward",
            "ori(currentEpoch) <= starttime",
            "ori(currentEpoch) < starttime",
            "ori(currentEpoch) != starttime",
            "ori(currentEpoch) <= vETH_REWARD_FRACTION_RATE",
            "ori(currentEpoch) < vETH_REWARD_FRACTION_RATE",
            "ori(currentEpoch) != vETH_REWARD_FRACTION_RATE",
            "ori(currentEpoch) <= currentEpochReward",
            "ori(currentEpoch) < currentEpochReward",
            "ori(currentEpoch) != currentEpochReward",
            "ori(currentEpoch) <= Sum(userRewardPerTokenPaid[...])",
            "ori(currentEpoch) <= Sum(lastStakeTimes[...])",
            "ori(currentEpoch) <= vUSD_REWARD_FRACTION_RATE",
            "ori(currentEpoch) < vUSD_REWARD_FRACTION_RATE",
            "ori(currentEpoch) != vUSD_REWARD_FRACTION_RATE",
            "ori(currentEpoch) <= totalAccumulatedReward",
            "ori(rewardRate) != starttime",
            "ori(rewardRate) != vETH_REWARD_FRACTION_RATE",
            "ori(rewardRate) <= currentEpochReward",
            "ori(rewardRate) < currentEpochReward",
            "ori(rewardRate) != currentEpochReward",
            "ori(rewardRate) >= Sum(lastStakeTimes[...])",
            "ori(rewardRate) != vUSD_REWARD_FRACTION_RATE",
            "ori(rewardRate) <= totalAccumulatedReward",
            "rewardReferral != ori(yfv)",
            "rewardReferral != ori(vUSD)",
            "rewardReferral != vETH",
            "rewardReferral != ori(vETH)",
            "ori(vUSD_REWARD_FRACTION_RATE) >= starttime",
            "ori(vUSD_REWARD_FRACTION_RATE) > starttime",
            "ori(vUSD_REWARD_FRACTION_RATE) != starttime",
            "ori(vUSD_REWARD_FRACTION_RATE) <= vETH_REWARD_FRACTION_RATE",
            "ori(vUSD_REWARD_FRACTION_RATE) < vETH_REWARD_FRACTION_RATE",
            "ori(vUSD_REWARD_FRACTION_RATE) != vETH_REWARD_FRACTION_RATE",
            "ori(vUSD_REWARD_FRACTION_RATE) <= currentEpochReward",
            "ori(vUSD_REWARD_FRACTION_RATE) < currentEpochReward",
            "ori(vUSD_REWARD_FRACTION_RATE) != currentEpochReward",
            "ori(vUSD_REWARD_FRACTION_RATE) != Sum(userRewardPerTokenPaid[...])",
            "ori(vUSD_REWARD_FRACTION_RATE) != Sum(lastStakeTimes[...])",
            "ori(vUSD_REWARD_FRACTION_RATE) != Sum(rewards[...])",
            "ori(vUSD_REWARD_FRACTION_RATE) == vUSD_REWARD_FRACTION_RATE",
            "ori(vUSD_REWARD_FRACTION_RATE) >= vUSD_REWARD_FRACTION_RATE",
            "ori(vUSD_REWARD_FRACTION_RATE) <= vUSD_REWARD_FRACTION_RATE",
            "ori(vUSD_REWARD_FRACTION_RATE) != totalAccumulatedReward",
            "ori(rewardPerTokenStored) != starttime",
            "ori(rewardPerTokenStored) != vETH_REWARD_FRACTION_RATE",
            "ori(rewardPerTokenStored) <= currentEpochReward",
            "ori(rewardPerTokenStored) < currentEpochReward",
            "ori(rewardPerTokenStored) != currentEpochReward",
            "ori(rewardPerTokenStored) <= Sum(userRewardPerTokenPaid[...])",
            "ori(rewardPerTokenStored) != vUSD_REWARD_FRACTION_RATE",
            "ori(rewardPerTokenStored) <= totalAccumulatedReward",
            "starttime != ori(Sum(lastStakeTimes[...]))",
            "starttime != ori(Sum(accumulatedStakingPower[...]))",
            "starttime == ori(starttime)",
            "starttime >= ori(starttime)",
            "starttime <= ori(starttime)",
            "starttime <= vETH_REWARD_FRACTION_RATE",
            "starttime < vETH_REWARD_FRACTION_RATE",
            "starttime != vETH_REWARD_FRACTION_RATE",
            "starttime <= currentEpochReward",
            "starttime < currentEpochReward",
            "starttime != currentEpochReward",
            "starttime != Sum(userRewardPerTokenPaid[...])",
            "starttime != ori(Sum(rewards[...]))",
            "starttime != Sum(lastStakeTimes[...])",
            "starttime != Sum(rewards[...])",
            "starttime <= vUSD_REWARD_FRACTION_RATE",
            "starttime < vUSD_REWARD_FRACTION_RATE",
            "starttime != vUSD_REWARD_FRACTION_RATE",
            "starttime != ori(Sum(_balances[...]))",
            "starttime != ori(Sum(userRewardPerTokenPaid[...]))",
            "starttime != totalAccumulatedReward",
            "ori(Sum(lastStakeTimes[...])) <= vETH_REWARD_FRACTION_RATE",
            "ori(Sum(lastStakeTimes[...])) < vETH_REWARD_FRACTION_RATE",
            "ori(Sum(lastStakeTimes[...])) != vETH_REWARD_FRACTION_RATE",
            "ori(Sum(lastStakeTimes[...])) <= currentEpochReward",
            "ori(Sum(lastStakeTimes[...])) < currentEpochReward",
            "ori(Sum(lastStakeTimes[...])) != currentEpochReward",
            "ori(Sum(lastStakeTimes[...])) <= Sum(userRewardPerTokenPaid[...])",
            "ori(Sum(lastStakeTimes[...])) <= Sum(lastStakeTimes[...])",
            "ori(Sum(lastStakeTimes[...])) != vUSD_REWARD_FRACTION_RATE",
            "ori(Sum(lastStakeTimes[...])) <= totalAccumulatedReward",
            "ori(Sum(accumulatedStakingPower[...])) != vETH_REWARD_FRACTION_RATE",
            "ori(Sum(accumulatedStakingPower[...])) <= currentEpochReward",
            "ori(Sum(accumulatedStakingPower[...])) < currentEpochReward",
            "ori(Sum(accumulatedStakingPower[...])) != currentEpochReward",
            "ori(Sum(accumulatedStakingPower[...])) != vUSD_REWARD_FRACTION_RATE",
            "ori(Sum(accumulatedStakingPower[...])) <= totalAccumulatedReward",
            "ori(yfv) != vETH",
            "ori(starttime) <= vETH_REWARD_FRACTION_RATE",
            "ori(starttime) < vETH_REWARD_FRACTION_RATE",
            "ori(starttime) != vETH_REWARD_FRACTION_RATE",
            "ori(starttime) <= currentEpochReward",
            "ori(starttime) < currentEpochReward",
            "ori(starttime) != currentEpochReward",
            "ori(starttime) != Sum(userRewardPerTokenPaid[...])",
            "ori(starttime) != Sum(lastStakeTimes[...])",
            "ori(starttime) != Sum(rewards[...])",
            "ori(starttime) <= vUSD_REWARD_FRACTION_RATE",
            "ori(starttime) < vUSD_REWARD_FRACTION_RATE",
            "ori(starttime) != vUSD_REWARD_FRACTION_RATE",
            "ori(starttime) != totalAccumulatedReward",
            "vETH_REWARD_FRACTION_RATE <= currentEpochReward",
            "vETH_REWARD_FRACTION_RATE < currentEpochReward",
            "vETH_REWARD_FRACTION_RATE != currentEpochReward",
            "vETH_REWARD_FRACTION_RATE != Sum(userRewardPerTokenPaid[...])",
            "vETH_REWARD_FRACTION_RATE != ori(Sum(rewards[...]))",
            "vETH_REWARD_FRACTION_RATE >= Sum(lastStakeTimes[...])",
            "vETH_REWARD_FRACTION_RATE > Sum(lastStakeTimes[...])",
            "vETH_REWARD_FRACTION_RATE != Sum(lastStakeTimes[...])",
            "vETH_REWARD_FRACTION_RATE != Sum(rewards[...])",
            "vETH_REWARD_FRACTION_RATE >= ori(periodFinish)",
            "vETH_REWARD_FRACTION_RATE > ori(periodFinish)",
            "vETH_REWARD_FRACTION_RATE != ori(periodFinish)",
            "vETH_REWARD_FRACTION_RATE >= vUSD_REWARD_FRACTION_RATE",
            "vETH_REWARD_FRACTION_RATE > vUSD_REWARD_FRACTION_RATE",
            "vETH_REWARD_FRACTION_RATE != vUSD_REWARD_FRACTION_RATE",
            "vETH_REWARD_FRACTION_RATE != ori(Sum(_balances[...]))",
            "vETH_REWARD_FRACTION_RATE != ori(Sum(userRewardPerTokenPaid[...]))",
            "vETH_REWARD_FRACTION_RATE != totalAccumulatedReward",
            "currentEpochReward >= Sum(userRewardPerTokenPaid[...])",
            "currentEpochReward > Sum(userRewardPerTokenPaid[...])",
            "currentEpochReward != Sum(userRewardPerTokenPaid[...])",
            "currentEpochReward >= ori(Sum(rewards[...]))",
            "currentEpochReward > ori(Sum(rewards[...]))",
            "currentEpochReward != ori(Sum(rewards[...]))",
            "currentEpochReward >= Sum(lastStakeTimes[...])",
            "currentEpochReward > Sum(lastStakeTimes[...])",
            "currentEpochReward != Sum(lastStakeTimes[...])",
            "currentEpochReward >= Sum(rewards[...])",
            "currentEpochReward > Sum(rewards[...])",
            "currentEpochReward != Sum(rewards[...])",
            "currentEpochReward >= ori(periodFinish)",
            "currentEpochReward > ori(periodFinish)",
            "currentEpochReward != ori(periodFinish)",
            "currentEpochReward >= vUSD_REWARD_FRACTION_RATE",
            "currentEpochReward > vUSD_REWARD_FRACTION_RATE",
            "currentEpochReward != vUSD_REWARD_FRACTION_RATE",
            "currentEpochReward != ori(Sum(_balances[...]))",
            "currentEpochReward >= ori(Sum(userRewardPerTokenPaid[...]))",
            "currentEpochReward > ori(Sum(userRewardPerTokenPaid[...]))",
            "currentEpochReward != ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(userRewardPerTokenPaid[...]) != vUSD_REWARD_FRACTION_RATE",
            "Sum(userRewardPerTokenPaid[...]) <= ori(Sum(_balances[...]))",
            "Sum(userRewardPerTokenPaid[...]) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(userRewardPerTokenPaid[...]) <= totalAccumulatedReward",
            "ori(Sum(rewards[...])) != vUSD_REWARD_FRACTION_RATE",
            "ori(Sum(rewards[...])) <= totalAccumulatedReward",
            "ori(rewardReferral) != vETH",
            "ori(vUSD) != vETH",
            "Sum(lastStakeTimes[...]) != vUSD_REWARD_FRACTION_RATE",
            "Sum(lastStakeTimes[...]) <= totalAccumulatedReward",
            "vETH == ori(vETH)",
            "Sum(rewards[...]) != vUSD_REWARD_FRACTION_RATE",
            "Sum(rewards[...]) <= ori(Sum(_balances[...]))",
            "Sum(rewards[...]) <= totalAccumulatedReward",
            "ori(periodFinish) <= vUSD_REWARD_FRACTION_RATE",
            "ori(periodFinish) < vUSD_REWARD_FRACTION_RATE",
            "ori(periodFinish) != vUSD_REWARD_FRACTION_RATE",
            "ori(periodFinish) <= totalAccumulatedReward",
            "vUSD_REWARD_FRACTION_RATE != ori(Sum(_balances[...]))",
            "vUSD_REWARD_FRACTION_RATE != ori(Sum(userRewardPerTokenPaid[...]))",
            "vUSD_REWARD_FRACTION_RATE != totalAccumulatedReward",
            "ori(Sum(userRewardPerTokenPaid[...])) <= totalAccumulatedReward"
        ],
        "falsified_preconditions": [
            "ori(_totalSupply) == 0",
            "ori(lastUpdateTime) == 0",
            "ori(totalAccumulatedReward) == 0",
            "ori(currentEpoch) == 0",
            "ori(rewardRate) == 0",
            "ori(rewardPerTokenStored) == 0",
            "ori(Sum(lastStakeTimes[...])) == 0",
            "ori(Sum(accumulatedStakingPower[...])) == 0",
            "ori(Sum(rewards[...])) == 0",
            "ori(periodFinish) == 0",
            "ori(Sum(_balances[...])) == 0",
            "ori(Sum(userRewardPerTokenPaid[...])) == 0",
            "ori(currentEpochReward) >= ori(_totalSupply)",
            "ori(currentEpochReward) > ori(_totalSupply)",
            "ori(currentEpochReward) >= ori(totalAccumulatedReward)",
            "ori(currentEpochReward) > ori(totalAccumulatedReward)",
            "ori(currentEpochReward) != ori(totalAccumulatedReward)",
            "ori(currentEpochReward) >= ori(Sum(_balances[...]))",
            "ori(currentEpochReward) > ori(Sum(_balances[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(_totalSupply)",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(_totalSupply)",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(totalAccumulatedReward)",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(totalAccumulatedReward)",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(rewardRate)",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(rewardRate)",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(rewardPerTokenStored)",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(rewardPerTokenStored)",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(Sum(accumulatedStakingPower[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(Sum(rewards[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(Sum(rewards[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(Sum(_balances[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(Sum(_balances[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) > ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(_totalSupply) == ori(lastUpdateTime)",
            "ori(_totalSupply) >= ori(lastUpdateTime)",
            "ori(_totalSupply) <= ori(lastUpdateTime)",
            "ori(_totalSupply) == ori(totalAccumulatedReward)",
            "ori(_totalSupply) >= ori(totalAccumulatedReward)",
            "ori(_totalSupply) <= ori(totalAccumulatedReward)",
            "ori(_totalSupply) == ori(currentEpoch)",
            "ori(_totalSupply) <= ori(currentEpoch)",
            "ori(_totalSupply) == ori(rewardRate)",
            "ori(_totalSupply) >= ori(rewardRate)",
            "ori(_totalSupply) <= ori(rewardRate)",
            "ori(_totalSupply) <= ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(_totalSupply) < ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(_totalSupply) == ori(rewardPerTokenStored)",
            "ori(_totalSupply) <= ori(rewardPerTokenStored)",
            "ori(_totalSupply) == ori(Sum(lastStakeTimes[...]))",
            "ori(_totalSupply) <= ori(Sum(lastStakeTimes[...]))",
            "ori(_totalSupply) == ori(Sum(accumulatedStakingPower[...]))",
            "ori(_totalSupply) <= ori(Sum(accumulatedStakingPower[...]))",
            "ori(_totalSupply) <= ori(starttime)",
            "ori(_totalSupply) < ori(starttime)",
            "ori(_totalSupply) == ori(Sum(rewards[...]))",
            "ori(_totalSupply) <= ori(Sum(rewards[...]))",
            "ori(_totalSupply) == ori(periodFinish)",
            "ori(_totalSupply) >= ori(periodFinish)",
            "ori(_totalSupply) <= ori(periodFinish)",
            "ori(_totalSupply) == ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(_totalSupply) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(lastUpdateTime) == ori(totalAccumulatedReward)",
            "ori(lastUpdateTime) >= ori(totalAccumulatedReward)",
            "ori(lastUpdateTime) == ori(currentEpoch)",
            "ori(lastUpdateTime) <= ori(currentEpoch)",
            "ori(lastUpdateTime) == ori(rewardRate)",
            "ori(lastUpdateTime) >= ori(rewardRate)",
            "ori(lastUpdateTime) == ori(rewardPerTokenStored)",
            "ori(lastUpdateTime) >= ori(rewardPerTokenStored)",
            "ori(lastUpdateTime) <= ori(rewardPerTokenStored)",
            "ori(lastUpdateTime) == ori(Sum(lastStakeTimes[...]))",
            "ori(lastUpdateTime) >= ori(Sum(lastStakeTimes[...]))",
            "ori(lastUpdateTime) <= ori(Sum(lastStakeTimes[...]))",
            "ori(lastUpdateTime) == ori(Sum(accumulatedStakingPower[...]))",
            "ori(lastUpdateTime) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(lastUpdateTime) <= ori(Sum(accumulatedStakingPower[...]))",
            "ori(lastUpdateTime) <= ori(starttime)",
            "ori(lastUpdateTime) < ori(starttime)",
            "ori(lastUpdateTime) == ori(Sum(rewards[...]))",
            "ori(lastUpdateTime) >= ori(Sum(rewards[...]))",
            "ori(lastUpdateTime) <= ori(Sum(rewards[...]))",
            "ori(lastUpdateTime) == ori(periodFinish)",
            "ori(lastUpdateTime) >= ori(periodFinish)",
            "ori(lastUpdateTime) == ori(Sum(_balances[...]))",
            "ori(lastUpdateTime) >= ori(Sum(_balances[...]))",
            "ori(lastUpdateTime) <= ori(Sum(_balances[...]))",
            "ori(lastUpdateTime) == ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(lastUpdateTime) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(lastUpdateTime) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(totalAccumulatedReward) == ori(currentEpoch)",
            "ori(totalAccumulatedReward) <= ori(currentEpoch)",
            "ori(totalAccumulatedReward) == ori(rewardRate)",
            "ori(totalAccumulatedReward) <= ori(rewardRate)",
            "ori(totalAccumulatedReward) <= ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(totalAccumulatedReward) < ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(totalAccumulatedReward) == ori(rewardPerTokenStored)",
            "ori(totalAccumulatedReward) <= ori(rewardPerTokenStored)",
            "ori(totalAccumulatedReward) == ori(Sum(lastStakeTimes[...]))",
            "ori(totalAccumulatedReward) <= ori(Sum(lastStakeTimes[...]))",
            "ori(totalAccumulatedReward) == ori(Sum(accumulatedStakingPower[...]))",
            "ori(totalAccumulatedReward) <= ori(Sum(accumulatedStakingPower[...]))",
            "ori(totalAccumulatedReward) <= ori(starttime)",
            "ori(totalAccumulatedReward) < ori(starttime)",
            "ori(totalAccumulatedReward) == ori(Sum(rewards[...]))",
            "ori(totalAccumulatedReward) <= ori(Sum(rewards[...]))",
            "ori(totalAccumulatedReward) == ori(periodFinish)",
            "ori(totalAccumulatedReward) <= ori(periodFinish)",
            "ori(totalAccumulatedReward) == ori(Sum(_balances[...]))",
            "ori(totalAccumulatedReward) >= ori(Sum(_balances[...]))",
            "ori(totalAccumulatedReward) <= ori(Sum(_balances[...]))",
            "ori(totalAccumulatedReward) == ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(totalAccumulatedReward) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(currentEpoch) == ori(rewardRate)",
            "ori(currentEpoch) >= ori(rewardRate)",
            "ori(currentEpoch) == ori(rewardPerTokenStored)",
            "ori(currentEpoch) >= ori(rewardPerTokenStored)",
            "ori(currentEpoch) == ori(Sum(lastStakeTimes[...]))",
            "ori(currentEpoch) >= ori(Sum(lastStakeTimes[...]))",
            "ori(currentEpoch) == ori(Sum(accumulatedStakingPower[...]))",
            "ori(currentEpoch) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(currentEpoch) <= ori(Sum(accumulatedStakingPower[...]))",
            "ori(currentEpoch) == ori(Sum(rewards[...]))",
            "ori(currentEpoch) >= ori(Sum(rewards[...]))",
            "ori(currentEpoch) <= ori(Sum(rewards[...]))",
            "ori(currentEpoch) == ori(periodFinish)",
            "ori(currentEpoch) >= ori(periodFinish)",
            "ori(currentEpoch) == ori(Sum(_balances[...]))",
            "ori(currentEpoch) >= ori(Sum(_balances[...]))",
            "ori(currentEpoch) == ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(currentEpoch) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(rewardRate) <= ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(rewardRate) < ori(vUSD_REWARD_FRACTION_RATE)",
            "ori(rewardRate) == ori(rewardPerTokenStored)",
            "ori(rewardRate) >= ori(rewardPerTokenStored)",
            "ori(rewardRate) <= ori(rewardPerTokenStored)",
            "ori(rewardRate) == ori(Sum(lastStakeTimes[...]))",
            "ori(rewardRate) <= ori(Sum(lastStakeTimes[...]))",
            "ori(rewardRate) == ori(Sum(accumulatedStakingPower[...]))",
            "ori(rewardRate) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(rewardRate) <= ori(Sum(accumulatedStakingPower[...]))",
            "ori(rewardRate) <= ori(starttime)",
            "ori(rewardRate) < ori(starttime)",
            "ori(rewardRate) == ori(Sum(rewards[...]))",
            "ori(rewardRate) >= ori(Sum(rewards[...]))",
            "ori(rewardRate) <= ori(Sum(rewards[...]))",
            "ori(rewardRate) == ori(periodFinish)",
            "ori(rewardRate) <= ori(periodFinish)",
            "ori(rewardRate) == ori(Sum(_balances[...]))",
            "ori(rewardRate) >= ori(Sum(_balances[...]))",
            "ori(rewardRate) <= ori(Sum(_balances[...]))",
            "ori(rewardRate) == ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(rewardRate) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(rewardRate) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) >= ori(rewardPerTokenStored)",
            "ori(vUSD_REWARD_FRACTION_RATE) > ori(rewardPerTokenStored)",
            "ori(vUSD_REWARD_FRACTION_RATE) >= ori(Sum(lastStakeTimes[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) > ori(Sum(lastStakeTimes[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) > ori(Sum(accumulatedStakingPower[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) >= ori(Sum(rewards[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) > ori(Sum(rewards[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) >= ori(Sum(_balances[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) > ori(Sum(_balances[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(vUSD_REWARD_FRACTION_RATE) > ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(rewardPerTokenStored) == ori(Sum(lastStakeTimes[...]))",
            "ori(rewardPerTokenStored) >= ori(Sum(lastStakeTimes[...]))",
            "ori(rewardPerTokenStored) <= ori(Sum(lastStakeTimes[...]))",
            "ori(rewardPerTokenStored) == ori(Sum(accumulatedStakingPower[...]))",
            "ori(rewardPerTokenStored) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(rewardPerTokenStored) <= ori(Sum(accumulatedStakingPower[...]))",
            "ori(rewardPerTokenStored) <= ori(starttime)",
            "ori(rewardPerTokenStored) < ori(starttime)",
            "ori(rewardPerTokenStored) == ori(Sum(rewards[...]))",
            "ori(rewardPerTokenStored) >= ori(Sum(rewards[...]))",
            "ori(rewardPerTokenStored) <= ori(Sum(rewards[...]))",
            "ori(rewardPerTokenStored) == ori(periodFinish)",
            "ori(rewardPerTokenStored) >= ori(periodFinish)",
            "ori(rewardPerTokenStored) <= ori(periodFinish)",
            "ori(rewardPerTokenStored) == ori(Sum(_balances[...]))",
            "ori(rewardPerTokenStored) >= ori(Sum(_balances[...]))",
            "ori(rewardPerTokenStored) == ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(rewardPerTokenStored) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(lastStakeTimes[...])) == ori(Sum(accumulatedStakingPower[...]))",
            "ori(Sum(lastStakeTimes[...])) >= ori(Sum(accumulatedStakingPower[...]))",
            "ori(Sum(lastStakeTimes[...])) <= ori(Sum(accumulatedStakingPower[...]))",
            "ori(Sum(lastStakeTimes[...])) <= ori(starttime)",
            "ori(Sum(lastStakeTimes[...])) < ori(starttime)",
            "ori(Sum(lastStakeTimes[...])) == ori(Sum(rewards[...]))",
            "ori(Sum(lastStakeTimes[...])) >= ori(Sum(rewards[...]))",
            "ori(Sum(lastStakeTimes[...])) <= ori(Sum(rewards[...]))",
            "ori(Sum(lastStakeTimes[...])) == ori(periodFinish)",
            "ori(Sum(lastStakeTimes[...])) >= ori(periodFinish)",
            "ori(Sum(lastStakeTimes[...])) <= ori(periodFinish)",
            "ori(Sum(lastStakeTimes[...])) == ori(Sum(_balances[...]))",
            "ori(Sum(lastStakeTimes[...])) >= ori(Sum(_balances[...]))",
            "ori(Sum(lastStakeTimes[...])) == ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(lastStakeTimes[...])) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(lastStakeTimes[...])) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(accumulatedStakingPower[...])) <= ori(starttime)",
            "ori(Sum(accumulatedStakingPower[...])) < ori(starttime)",
            "ori(Sum(accumulatedStakingPower[...])) == ori(Sum(rewards[...]))",
            "ori(Sum(accumulatedStakingPower[...])) >= ori(Sum(rewards[...]))",
            "ori(Sum(accumulatedStakingPower[...])) <= ori(Sum(rewards[...]))",
            "ori(Sum(accumulatedStakingPower[...])) == ori(periodFinish)",
            "ori(Sum(accumulatedStakingPower[...])) >= ori(periodFinish)",
            "ori(Sum(accumulatedStakingPower[...])) <= ori(periodFinish)",
            "ori(Sum(accumulatedStakingPower[...])) == ori(Sum(_balances[...]))",
            "ori(Sum(accumulatedStakingPower[...])) >= ori(Sum(_balances[...]))",
            "ori(Sum(accumulatedStakingPower[...])) == ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(accumulatedStakingPower[...])) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(accumulatedStakingPower[...])) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(starttime) >= ori(Sum(rewards[...]))",
            "ori(starttime) > ori(Sum(rewards[...]))",
            "ori(starttime) >= ori(periodFinish)",
            "ori(starttime) > ori(periodFinish)",
            "ori(starttime) != ori(periodFinish)",
            "ori(starttime) >= ori(Sum(_balances[...]))",
            "ori(starttime) > ori(Sum(_balances[...]))",
            "ori(starttime) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(starttime) > ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(rewards[...])) == ori(periodFinish)",
            "ori(Sum(rewards[...])) >= ori(periodFinish)",
            "ori(Sum(rewards[...])) <= ori(periodFinish)",
            "ori(Sum(rewards[...])) == ori(Sum(_balances[...]))",
            "ori(Sum(rewards[...])) >= ori(Sum(_balances[...]))",
            "ori(Sum(rewards[...])) == ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(rewards[...])) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(rewards[...])) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(periodFinish) == ori(Sum(_balances[...]))",
            "ori(periodFinish) >= ori(Sum(_balances[...]))",
            "ori(periodFinish) <= ori(Sum(_balances[...]))",
            "ori(periodFinish) == ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(periodFinish) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(periodFinish) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(_balances[...])) == ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(_balances[...])) <= ori(Sum(userRewardPerTokenPaid[...]))"
        ],
        "falsified_postconditions": [
            "Sum(accumulatedStakingPower[...]) == 0",
            "_totalSupply == 0",
            "currentEpoch == 0",
            "rewardPerTokenStored == 0",
            "Sum(_balances[...]) == 0",
            "Sum(userRewardPerTokenPaid[...]) == 0",
            "Sum(lastStakeTimes[...]) == 0",
            "Sum(rewards[...]) == 0",
            "Sum(accumulatedStakingPower[...]) == _totalSupply",
            "Sum(accumulatedStakingPower[...]) >= _totalSupply",
            "Sum(accumulatedStakingPower[...]) <= lastUpdateTime",
            "Sum(accumulatedStakingPower[...]) == currentEpoch",
            "Sum(accumulatedStakingPower[...]) >= currentEpoch",
            "Sum(accumulatedStakingPower[...]) <= currentEpoch",
            "Sum(accumulatedStakingPower[...]) <= ori(vETH_REWARD_FRACTION_RATE)",
            "Sum(accumulatedStakingPower[...]) < ori(vETH_REWARD_FRACTION_RATE)",
            "Sum(accumulatedStakingPower[...]) <= periodFinish",
            "Sum(accumulatedStakingPower[...]) <= rewardRate",
            "Sum(accumulatedStakingPower[...]) == ori(_totalSupply)",
            "Sum(accumulatedStakingPower[...]) >= ori(_totalSupply)",
            "Sum(accumulatedStakingPower[...]) == ori(lastUpdateTime)",
            "Sum(accumulatedStakingPower[...]) >= ori(lastUpdateTime)",
            "Sum(accumulatedStakingPower[...]) <= ori(lastUpdateTime)",
            "Sum(accumulatedStakingPower[...]) == rewardPerTokenStored",
            "Sum(accumulatedStakingPower[...]) >= rewardPerTokenStored",
            "Sum(accumulatedStakingPower[...]) <= rewardPerTokenStored",
            "Sum(accumulatedStakingPower[...]) == Sum(_balances[...])",
            "Sum(accumulatedStakingPower[...]) >= Sum(_balances[...])",
            "Sum(accumulatedStakingPower[...]) == ori(totalAccumulatedReward)",
            "Sum(accumulatedStakingPower[...]) >= ori(totalAccumulatedReward)",
            "Sum(accumulatedStakingPower[...]) == ori(currentEpoch)",
            "Sum(accumulatedStakingPower[...]) >= ori(currentEpoch)",
            "Sum(accumulatedStakingPower[...]) <= ori(currentEpoch)",
            "Sum(accumulatedStakingPower[...]) == ori(rewardRate)",
            "Sum(accumulatedStakingPower[...]) >= ori(rewardRate)",
            "Sum(accumulatedStakingPower[...]) <= ori(rewardRate)",
            "Sum(accumulatedStakingPower[...]) <= ori(vUSD_REWARD_FRACTION_RATE)",
            "Sum(accumulatedStakingPower[...]) < ori(vUSD_REWARD_FRACTION_RATE)",
            "Sum(accumulatedStakingPower[...]) == ori(rewardPerTokenStored)",
            "Sum(accumulatedStakingPower[...]) >= ori(rewardPerTokenStored)",
            "Sum(accumulatedStakingPower[...]) <= ori(rewardPerTokenStored)",
            "Sum(accumulatedStakingPower[...]) <= starttime",
            "Sum(accumulatedStakingPower[...]) < starttime",
            "Sum(accumulatedStakingPower[...]) == ori(Sum(lastStakeTimes[...]))",
            "Sum(accumulatedStakingPower[...]) >= ori(Sum(lastStakeTimes[...]))",
            "Sum(accumulatedStakingPower[...]) <= ori(Sum(lastStakeTimes[...]))",
            "Sum(accumulatedStakingPower[...]) == ori(Sum(accumulatedStakingPower[...]))",
            "Sum(accumulatedStakingPower[...]) <= ori(Sum(accumulatedStakingPower[...]))",
            "Sum(accumulatedStakingPower[...]) <= ori(starttime)",
            "Sum(accumulatedStakingPower[...]) < ori(starttime)",
            "Sum(accumulatedStakingPower[...]) <= vETH_REWARD_FRACTION_RATE",
            "Sum(accumulatedStakingPower[...]) < vETH_REWARD_FRACTION_RATE",
            "Sum(accumulatedStakingPower[...]) == Sum(userRewardPerTokenPaid[...])",
            "Sum(accumulatedStakingPower[...]) >= Sum(userRewardPerTokenPaid[...])",
            "Sum(accumulatedStakingPower[...]) <= Sum(userRewardPerTokenPaid[...])",
            "Sum(accumulatedStakingPower[...]) == ori(Sum(rewards[...]))",
            "Sum(accumulatedStakingPower[...]) >= ori(Sum(rewards[...]))",
            "Sum(accumulatedStakingPower[...]) <= ori(Sum(rewards[...]))",
            "Sum(accumulatedStakingPower[...]) == Sum(lastStakeTimes[...])",
            "Sum(accumulatedStakingPower[...]) >= Sum(lastStakeTimes[...])",
            "Sum(accumulatedStakingPower[...]) <= Sum(lastStakeTimes[...])",
            "Sum(accumulatedStakingPower[...]) == Sum(rewards[...])",
            "Sum(accumulatedStakingPower[...]) >= Sum(rewards[...])",
            "Sum(accumulatedStakingPower[...]) <= Sum(rewards[...])",
            "Sum(accumulatedStakingPower[...]) == ori(periodFinish)",
            "Sum(accumulatedStakingPower[...]) >= ori(periodFinish)",
            "Sum(accumulatedStakingPower[...]) <= ori(periodFinish)",
            "Sum(accumulatedStakingPower[...]) <= vUSD_REWARD_FRACTION_RATE",
            "Sum(accumulatedStakingPower[...]) < vUSD_REWARD_FRACTION_RATE",
            "Sum(accumulatedStakingPower[...]) == ori(Sum(_balances[...]))",
            "Sum(accumulatedStakingPower[...]) >= ori(Sum(_balances[...]))",
            "Sum(accumulatedStakingPower[...]) == ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(accumulatedStakingPower[...]) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(accumulatedStakingPower[...]) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "_totalSupply <= lastUpdateTime",
            "_totalSupply <= ori(currentEpochReward)",
            "_totalSupply < ori(currentEpochReward)",
            "_totalSupply == currentEpoch",
            "_totalSupply <= currentEpoch",
            "_totalSupply <= ori(vETH_REWARD_FRACTION_RATE)",
            "_totalSupply < ori(vETH_REWARD_FRACTION_RATE)",
            "_totalSupply <= periodFinish",
            "_totalSupply <= rewardRate",
            "_totalSupply == ori(_totalSupply)",
            "_totalSupply <= ori(_totalSupply)",
            "_totalSupply == ori(lastUpdateTime)",
            "_totalSupply <= ori(lastUpdateTime)",
            "_totalSupply == rewardPerTokenStored",
            "_totalSupply <= rewardPerTokenStored",
            "_totalSupply == ori(totalAccumulatedReward)",
            "_totalSupply >= ori(totalAccumulatedReward)",
            "_totalSupply <= ori(totalAccumulatedReward)",
            "_totalSupply == ori(currentEpoch)",
            "_totalSupply <= ori(currentEpoch)",
            "_totalSupply == ori(rewardRate)",
            "_totalSupply <= ori(rewardRate)",
            "_totalSupply <= ori(vUSD_REWARD_FRACTION_RATE)",
            "_totalSupply < ori(vUSD_REWARD_FRACTION_RATE)",
            "_totalSupply == ori(rewardPerTokenStored)",
            "_totalSupply <= ori(rewardPerTokenStored)",
            "_totalSupply <= starttime",
            "_totalSupply < starttime",
            "_totalSupply == ori(Sum(lastStakeTimes[...]))",
            "_totalSupply <= ori(Sum(lastStakeTimes[...]))",
            "_totalSupply == ori(Sum(accumulatedStakingPower[...]))",
            "_totalSupply <= ori(Sum(accumulatedStakingPower[...]))",
            "_totalSupply <= ori(starttime)",
            "_totalSupply < ori(starttime)",
            "_totalSupply <= vETH_REWARD_FRACTION_RATE",
            "_totalSupply < vETH_REWARD_FRACTION_RATE",
            "_totalSupply <= currentEpochReward",
            "_totalSupply < currentEpochReward",
            "_totalSupply == Sum(userRewardPerTokenPaid[...])",
            "_totalSupply <= Sum(userRewardPerTokenPaid[...])",
            "_totalSupply == ori(Sum(rewards[...]))",
            "_totalSupply <= ori(Sum(rewards[...]))",
            "_totalSupply == Sum(lastStakeTimes[...])",
            "_totalSupply <= Sum(lastStakeTimes[...])",
            "_totalSupply == Sum(rewards[...])",
            "_totalSupply <= Sum(rewards[...])",
            "_totalSupply == ori(periodFinish)",
            "_totalSupply <= ori(periodFinish)",
            "_totalSupply <= vUSD_REWARD_FRACTION_RATE",
            "_totalSupply < vUSD_REWARD_FRACTION_RATE",
            "_totalSupply == ori(Sum(_balances[...]))",
            "_totalSupply <= ori(Sum(_balances[...]))",
            "_totalSupply == ori(Sum(userRewardPerTokenPaid[...]))",
            "_totalSupply <= ori(Sum(userRewardPerTokenPaid[...]))",
            "_totalSupply <= totalAccumulatedReward",
            "lastUpdateTime >= ori(_totalSupply)",
            "lastUpdateTime >= rewardPerTokenStored",
            "lastUpdateTime >= Sum(_balances[...])",
            "lastUpdateTime >= ori(totalAccumulatedReward)",
            "lastUpdateTime >= ori(rewardRate)",
            "lastUpdateTime >= ori(rewardPerTokenStored)",
            "lastUpdateTime <= starttime",
            "lastUpdateTime < starttime",
            "lastUpdateTime >= ori(Sum(lastStakeTimes[...]))",
            "lastUpdateTime >= ori(Sum(accumulatedStakingPower[...]))",
            "lastUpdateTime <= ori(starttime)",
            "lastUpdateTime < ori(starttime)",
            "lastUpdateTime >= Sum(userRewardPerTokenPaid[...])",
            "lastUpdateTime >= ori(Sum(rewards[...]))",
            "lastUpdateTime >= Sum(lastStakeTimes[...])",
            "lastUpdateTime >= Sum(rewards[...])",
            "lastUpdateTime >= ori(periodFinish)",
            "lastUpdateTime >= ori(Sum(_balances[...]))",
            "lastUpdateTime >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(currentEpochReward) >= Sum(_balances[...])",
            "ori(currentEpochReward) > Sum(_balances[...])",
            "ori(currentEpochReward) >= currentEpochReward",
            "ori(currentEpochReward) >= totalAccumulatedReward",
            "ori(currentEpochReward) > totalAccumulatedReward",
            "ori(currentEpochReward) != totalAccumulatedReward",
            "currentEpoch == ori(_totalSupply)",
            "currentEpoch >= ori(_totalSupply)",
            "currentEpoch == ori(lastUpdateTime)",
            "currentEpoch >= ori(lastUpdateTime)",
            "currentEpoch == rewardPerTokenStored",
            "currentEpoch >= rewardPerTokenStored",
            "currentEpoch == Sum(_balances[...])",
            "currentEpoch >= Sum(_balances[...])",
            "currentEpoch == ori(totalAccumulatedReward)",
            "currentEpoch >= ori(totalAccumulatedReward)",
            "currentEpoch == ori(currentEpoch)",
            "currentEpoch <= ori(currentEpoch)",
            "currentEpoch == ori(rewardRate)",
            "currentEpoch >= ori(rewardRate)",
            "currentEpoch == ori(rewardPerTokenStored)",
            "currentEpoch >= ori(rewardPerTokenStored)",
            "currentEpoch == ori(Sum(lastStakeTimes[...]))",
            "currentEpoch >= ori(Sum(lastStakeTimes[...]))",
            "currentEpoch == ori(Sum(accumulatedStakingPower[...]))",
            "currentEpoch >= ori(Sum(accumulatedStakingPower[...]))",
            "currentEpoch <= ori(Sum(accumulatedStakingPower[...]))",
            "currentEpoch == Sum(userRewardPerTokenPaid[...])",
            "currentEpoch >= Sum(userRewardPerTokenPaid[...])",
            "currentEpoch == ori(Sum(rewards[...]))",
            "currentEpoch >= ori(Sum(rewards[...]))",
            "currentEpoch <= ori(Sum(rewards[...]))",
            "currentEpoch == Sum(lastStakeTimes[...])",
            "currentEpoch >= Sum(lastStakeTimes[...])",
            "currentEpoch == Sum(rewards[...])",
            "currentEpoch >= Sum(rewards[...])",
            "currentEpoch <= Sum(rewards[...])",
            "currentEpoch == ori(periodFinish)",
            "currentEpoch >= ori(periodFinish)",
            "currentEpoch == ori(Sum(_balances[...]))",
            "currentEpoch >= ori(Sum(_balances[...]))",
            "currentEpoch == ori(Sum(userRewardPerTokenPaid[...]))",
            "currentEpoch >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(vETH_REWARD_FRACTION_RATE) >= rewardPerTokenStored",
            "ori(vETH_REWARD_FRACTION_RATE) > rewardPerTokenStored",
            "ori(vETH_REWARD_FRACTION_RATE) >= Sum(_balances[...])",
            "ori(vETH_REWARD_FRACTION_RATE) > Sum(_balances[...])",
            "ori(vETH_REWARD_FRACTION_RATE) >= Sum(userRewardPerTokenPaid[...])",
            "ori(vETH_REWARD_FRACTION_RATE) > Sum(userRewardPerTokenPaid[...])",
            "ori(vETH_REWARD_FRACTION_RATE) >= Sum(rewards[...])",
            "ori(vETH_REWARD_FRACTION_RATE) > Sum(rewards[...])",
            "periodFinish >= ori(_totalSupply)",
            "periodFinish >= rewardPerTokenStored",
            "periodFinish >= Sum(_balances[...])",
            "periodFinish >= ori(totalAccumulatedReward)",
            "periodFinish >= ori(rewardRate)",
            "periodFinish >= ori(rewardPerTokenStored)",
            "periodFinish <= starttime",
            "periodFinish >= ori(Sum(lastStakeTimes[...]))",
            "periodFinish >= ori(Sum(accumulatedStakingPower[...]))",
            "periodFinish <= ori(starttime)",
            "periodFinish >= Sum(userRewardPerTokenPaid[...])",
            "periodFinish >= ori(Sum(rewards[...]))",
            "periodFinish >= Sum(lastStakeTimes[...])",
            "periodFinish >= Sum(rewards[...])",
            "periodFinish >= ori(Sum(_balances[...]))",
            "periodFinish >= ori(Sum(userRewardPerTokenPaid[...]))",
            "rewardRate >= ori(_totalSupply)",
            "rewardRate >= rewardPerTokenStored",
            "rewardRate >= Sum(_balances[...])",
            "rewardRate >= ori(totalAccumulatedReward)",
            "rewardRate >= ori(Sum(accumulatedStakingPower[...]))",
            "rewardRate >= Sum(userRewardPerTokenPaid[...])",
            "rewardRate >= ori(Sum(rewards[...]))",
            "rewardRate >= Sum(rewards[...])",
            "rewardRate >= ori(Sum(_balances[...]))",
            "rewardRate >= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(_totalSupply) == rewardPerTokenStored",
            "ori(_totalSupply) <= rewardPerTokenStored",
            "ori(_totalSupply) == Sum(_balances[...])",
            "ori(_totalSupply) >= Sum(_balances[...])",
            "ori(_totalSupply) <= starttime",
            "ori(_totalSupply) < starttime",
            "ori(_totalSupply) <= vETH_REWARD_FRACTION_RATE",
            "ori(_totalSupply) < vETH_REWARD_FRACTION_RATE",
            "ori(_totalSupply) <= currentEpochReward",
            "ori(_totalSupply) < currentEpochReward",
            "ori(_totalSupply) == Sum(userRewardPerTokenPaid[...])",
            "ori(_totalSupply) <= Sum(userRewardPerTokenPaid[...])",
            "ori(_totalSupply) == Sum(lastStakeTimes[...])",
            "ori(_totalSupply) >= Sum(lastStakeTimes[...])",
            "ori(_totalSupply) <= Sum(lastStakeTimes[...])",
            "ori(_totalSupply) == Sum(rewards[...])",
            "ori(_totalSupply) <= Sum(rewards[...])",
            "ori(_totalSupply) <= vUSD_REWARD_FRACTION_RATE",
            "ori(_totalSupply) < vUSD_REWARD_FRACTION_RATE",
            "ori(_totalSupply) <= totalAccumulatedReward",
            "ori(lastUpdateTime) == rewardPerTokenStored",
            "ori(lastUpdateTime) >= rewardPerTokenStored",
            "ori(lastUpdateTime) <= rewardPerTokenStored",
            "ori(lastUpdateTime) == Sum(_balances[...])",
            "ori(lastUpdateTime) >= Sum(_balances[...])",
            "ori(lastUpdateTime) <= starttime",
            "ori(lastUpdateTime) < starttime",
            "ori(lastUpdateTime) == Sum(userRewardPerTokenPaid[...])",
            "ori(lastUpdateTime) >= Sum(userRewardPerTokenPaid[...])",
            "ori(lastUpdateTime) <= Sum(userRewardPerTokenPaid[...])",
            "ori(lastUpdateTime) == Sum(lastStakeTimes[...])",
            "ori(lastUpdateTime) >= Sum(lastStakeTimes[...])",
            "ori(lastUpdateTime) == Sum(rewards[...])",
            "ori(lastUpdateTime) >= Sum(rewards[...])",
            "ori(lastUpdateTime) <= Sum(rewards[...])",
            "rewardPerTokenStored == Sum(_balances[...])",
            "rewardPerTokenStored >= Sum(_balances[...])",
            "rewardPerTokenStored == ori(totalAccumulatedReward)",
            "rewardPerTokenStored >= ori(totalAccumulatedReward)",
            "rewardPerTokenStored == ori(currentEpoch)",
            "rewardPerTokenStored <= ori(currentEpoch)",
            "rewardPerTokenStored == ori(rewardRate)",
            "rewardPerTokenStored >= ori(rewardRate)",
            "rewardPerTokenStored <= ori(rewardRate)",
            "rewardPerTokenStored <= ori(vUSD_REWARD_FRACTION_RATE)",
            "rewardPerTokenStored < ori(vUSD_REWARD_FRACTION_RATE)",
            "rewardPerTokenStored == ori(rewardPerTokenStored)",
            "rewardPerTokenStored <= ori(rewardPerTokenStored)",
            "rewardPerTokenStored <= starttime",
            "rewardPerTokenStored < starttime",
            "rewardPerTokenStored == ori(Sum(lastStakeTimes[...]))",
            "rewardPerTokenStored <= ori(Sum(lastStakeTimes[...]))",
            "rewardPerTokenStored == ori(Sum(accumulatedStakingPower[...]))",
            "rewardPerTokenStored >= ori(Sum(accumulatedStakingPower[...]))",
            "rewardPerTokenStored <= ori(Sum(accumulatedStakingPower[...]))",
            "rewardPerTokenStored <= ori(starttime)",
            "rewardPerTokenStored < ori(starttime)",
            "rewardPerTokenStored <= vETH_REWARD_FRACTION_RATE",
            "rewardPerTokenStored < vETH_REWARD_FRACTION_RATE",
            "rewardPerTokenStored == Sum(userRewardPerTokenPaid[...])",
            "rewardPerTokenStored >= Sum(userRewardPerTokenPaid[...])",
            "rewardPerTokenStored == ori(Sum(rewards[...]))",
            "rewardPerTokenStored >= ori(Sum(rewards[...]))",
            "rewardPerTokenStored <= ori(Sum(rewards[...]))",
            "rewardPerTokenStored == Sum(lastStakeTimes[...])",
            "rewardPerTokenStored >= Sum(lastStakeTimes[...])",
            "rewardPerTokenStored <= Sum(lastStakeTimes[...])",
            "rewardPerTokenStored == Sum(rewards[...])",
            "rewardPerTokenStored >= Sum(rewards[...])",
            "rewardPerTokenStored <= Sum(rewards[...])",
            "rewardPerTokenStored == ori(periodFinish)",
            "rewardPerTokenStored >= ori(periodFinish)",
            "rewardPerTokenStored <= ori(periodFinish)",
            "rewardPerTokenStored <= vUSD_REWARD_FRACTION_RATE",
            "rewardPerTokenStored < vUSD_REWARD_FRACTION_RATE",
            "rewardPerTokenStored == ori(Sum(_balances[...]))",
            "rewardPerTokenStored >= ori(Sum(_balances[...]))",
            "rewardPerTokenStored == ori(Sum(userRewardPerTokenPaid[...]))",
            "rewardPerTokenStored >= ori(Sum(userRewardPerTokenPaid[...]))",
            "rewardPerTokenStored <= ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(_balances[...]) == ori(totalAccumulatedReward)",
            "Sum(_balances[...]) >= ori(totalAccumulatedReward)",
            "Sum(_balances[...]) <= ori(totalAccumulatedReward)",
            "Sum(_balances[...]) == ori(currentEpoch)",
            "Sum(_balances[...]) <= ori(currentEpoch)",
            "Sum(_balances[...]) == ori(rewardRate)",
            "Sum(_balances[...]) <= ori(rewardRate)",
            "Sum(_balances[...]) <= ori(vUSD_REWARD_FRACTION_RATE)",
            "Sum(_balances[...]) < ori(vUSD_REWARD_FRACTION_RATE)",
            "Sum(_balances[...]) == ori(rewardPerTokenStored)",
            "Sum(_balances[...]) <= ori(rewardPerTokenStored)",
            "Sum(_balances[...]) <= starttime",
            "Sum(_balances[...]) < starttime",
            "Sum(_balances[...]) == ori(Sum(lastStakeTimes[...]))",
            "Sum(_balances[...]) <= ori(Sum(lastStakeTimes[...]))",
            "Sum(_balances[...]) == ori(Sum(accumulatedStakingPower[...]))",
            "Sum(_balances[...]) <= ori(Sum(accumulatedStakingPower[...]))",
            "Sum(_balances[...]) <= ori(starttime)",
            "Sum(_balances[...]) < ori(starttime)",
            "Sum(_balances[...]) <= vETH_REWARD_FRACTION_RATE",
            "Sum(_balances[...]) < vETH_REWARD_FRACTION_RATE",
            "Sum(_balances[...]) <= currentEpochReward",
            "Sum(_balances[...]) < currentEpochReward",
            "Sum(_balances[...]) == Sum(userRewardPerTokenPaid[...])",
            "Sum(_balances[...]) <= Sum(userRewardPerTokenPaid[...])",
            "Sum(_balances[...]) == ori(Sum(rewards[...]))",
            "Sum(_balances[...]) <= ori(Sum(rewards[...]))",
            "Sum(_balances[...]) == Sum(lastStakeTimes[...])",
            "Sum(_balances[...]) <= Sum(lastStakeTimes[...])",
            "Sum(_balances[...]) == Sum(rewards[...])",
            "Sum(_balances[...]) <= Sum(rewards[...])",
            "Sum(_balances[...]) == ori(periodFinish)",
            "Sum(_balances[...]) <= ori(periodFinish)",
            "Sum(_balances[...]) <= vUSD_REWARD_FRACTION_RATE",
            "Sum(_balances[...]) < vUSD_REWARD_FRACTION_RATE",
            "Sum(_balances[...]) == ori(Sum(_balances[...]))",
            "Sum(_balances[...]) <= ori(Sum(_balances[...]))",
            "Sum(_balances[...]) == ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(_balances[...]) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(_balances[...]) <= totalAccumulatedReward",
            "ori(totalAccumulatedReward) <= starttime",
            "ori(totalAccumulatedReward) < starttime",
            "ori(totalAccumulatedReward) <= vETH_REWARD_FRACTION_RATE",
            "ori(totalAccumulatedReward) < vETH_REWARD_FRACTION_RATE",
            "ori(totalAccumulatedReward) <= currentEpochReward",
            "ori(totalAccumulatedReward) < currentEpochReward",
            "ori(totalAccumulatedReward) != currentEpochReward",
            "ori(totalAccumulatedReward) == Sum(userRewardPerTokenPaid[...])",
            "ori(totalAccumulatedReward) <= Sum(userRewardPerTokenPaid[...])",
            "ori(totalAccumulatedReward) == Sum(lastStakeTimes[...])",
            "ori(totalAccumulatedReward) <= Sum(lastStakeTimes[...])",
            "ori(totalAccumulatedReward) == Sum(rewards[...])",
            "ori(totalAccumulatedReward) <= Sum(rewards[...])",
            "ori(totalAccumulatedReward) <= vUSD_REWARD_FRACTION_RATE",
            "ori(totalAccumulatedReward) < vUSD_REWARD_FRACTION_RATE",
            "ori(currentEpoch) == Sum(userRewardPerTokenPaid[...])",
            "ori(currentEpoch) >= Sum(userRewardPerTokenPaid[...])",
            "ori(currentEpoch) == Sum(lastStakeTimes[...])",
            "ori(currentEpoch) >= Sum(lastStakeTimes[...])",
            "ori(currentEpoch) == Sum(rewards[...])",
            "ori(currentEpoch) >= Sum(rewards[...])",
            "ori(currentEpoch) <= Sum(rewards[...])",
            "ori(rewardRate) <= starttime",
            "ori(rewardRate) < starttime",
            "ori(rewardRate) <= vETH_REWARD_FRACTION_RATE",
            "ori(rewardRate) < vETH_REWARD_FRACTION_RATE",
            "ori(rewardRate) == Sum(userRewardPerTokenPaid[...])",
            "ori(rewardRate) >= Sum(userRewardPerTokenPaid[...])",
            "ori(rewardRate) <= Sum(userRewardPerTokenPaid[...])",
            "ori(rewardRate) == Sum(lastStakeTimes[...])",
            "ori(rewardRate) <= Sum(lastStakeTimes[...])",
            "ori(rewardRate) == Sum(rewards[...])",
            "ori(rewardRate) >= Sum(rewards[...])",
            "ori(rewardRate) <= Sum(rewards[...])",
            "ori(rewardRate) <= vUSD_REWARD_FRACTION_RATE",
            "ori(rewardRate) < vUSD_REWARD_FRACTION_RATE",
            "ori(vUSD_REWARD_FRACTION_RATE) >= Sum(userRewardPerTokenPaid[...])",
            "ori(vUSD_REWARD_FRACTION_RATE) > Sum(userRewardPerTokenPaid[...])",
            "ori(vUSD_REWARD_FRACTION_RATE) >= Sum(lastStakeTimes[...])",
            "ori(vUSD_REWARD_FRACTION_RATE) > Sum(lastStakeTimes[...])",
            "ori(vUSD_REWARD_FRACTION_RATE) >= Sum(rewards[...])",
            "ori(vUSD_REWARD_FRACTION_RATE) > Sum(rewards[...])",
            "ori(rewardPerTokenStored) <= starttime",
            "ori(rewardPerTokenStored) < starttime",
            "ori(rewardPerTokenStored) <= vETH_REWARD_FRACTION_RATE",
            "ori(rewardPerTokenStored) < vETH_REWARD_FRACTION_RATE",
            "ori(rewardPerTokenStored) == Sum(userRewardPerTokenPaid[...])",
            "ori(rewardPerTokenStored) >= Sum(userRewardPerTokenPaid[...])",
            "ori(rewardPerTokenStored) == Sum(lastStakeTimes[...])",
            "ori(rewardPerTokenStored) >= Sum(lastStakeTimes[...])",
            "ori(rewardPerTokenStored) <= Sum(lastStakeTimes[...])",
            "ori(rewardPerTokenStored) == Sum(rewards[...])",
            "ori(rewardPerTokenStored) >= Sum(rewards[...])",
            "ori(rewardPerTokenStored) <= Sum(rewards[...])",
            "ori(rewardPerTokenStored) <= vUSD_REWARD_FRACTION_RATE",
            "ori(rewardPerTokenStored) < vUSD_REWARD_FRACTION_RATE",
            "starttime >= ori(Sum(lastStakeTimes[...]))",
            "starttime > ori(Sum(lastStakeTimes[...]))",
            "starttime >= ori(Sum(accumulatedStakingPower[...]))",
            "starttime > ori(Sum(accumulatedStakingPower[...]))",
            "starttime >= Sum(userRewardPerTokenPaid[...])",
            "starttime > Sum(userRewardPerTokenPaid[...])",
            "starttime >= ori(Sum(rewards[...]))",
            "starttime > ori(Sum(rewards[...]))",
            "starttime >= Sum(lastStakeTimes[...])",
            "starttime > Sum(lastStakeTimes[...])",
            "starttime >= Sum(rewards[...])",
            "starttime > Sum(rewards[...])",
            "starttime >= ori(periodFinish)",
            "starttime > ori(periodFinish)",
            "starttime != ori(periodFinish)",
            "starttime >= ori(Sum(_balances[...]))",
            "starttime > ori(Sum(_balances[...]))",
            "starttime >= ori(Sum(userRewardPerTokenPaid[...]))",
            "starttime > ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(lastStakeTimes[...])) == Sum(userRewardPerTokenPaid[...])",
            "ori(Sum(lastStakeTimes[...])) >= Sum(userRewardPerTokenPaid[...])",
            "ori(Sum(lastStakeTimes[...])) == Sum(lastStakeTimes[...])",
            "ori(Sum(lastStakeTimes[...])) >= Sum(lastStakeTimes[...])",
            "ori(Sum(lastStakeTimes[...])) == Sum(rewards[...])",
            "ori(Sum(lastStakeTimes[...])) >= Sum(rewards[...])",
            "ori(Sum(lastStakeTimes[...])) <= Sum(rewards[...])",
            "ori(Sum(lastStakeTimes[...])) <= vUSD_REWARD_FRACTION_RATE",
            "ori(Sum(lastStakeTimes[...])) < vUSD_REWARD_FRACTION_RATE",
            "ori(Sum(accumulatedStakingPower[...])) <= vETH_REWARD_FRACTION_RATE",
            "ori(Sum(accumulatedStakingPower[...])) < vETH_REWARD_FRACTION_RATE",
            "ori(Sum(accumulatedStakingPower[...])) == Sum(userRewardPerTokenPaid[...])",
            "ori(Sum(accumulatedStakingPower[...])) >= Sum(userRewardPerTokenPaid[...])",
            "ori(Sum(accumulatedStakingPower[...])) <= Sum(userRewardPerTokenPaid[...])",
            "ori(Sum(accumulatedStakingPower[...])) == Sum(lastStakeTimes[...])",
            "ori(Sum(accumulatedStakingPower[...])) >= Sum(lastStakeTimes[...])",
            "ori(Sum(accumulatedStakingPower[...])) <= Sum(lastStakeTimes[...])",
            "ori(Sum(accumulatedStakingPower[...])) == Sum(rewards[...])",
            "ori(Sum(accumulatedStakingPower[...])) >= Sum(rewards[...])",
            "ori(Sum(accumulatedStakingPower[...])) <= Sum(rewards[...])",
            "ori(Sum(accumulatedStakingPower[...])) <= vUSD_REWARD_FRACTION_RATE",
            "ori(Sum(accumulatedStakingPower[...])) < vUSD_REWARD_FRACTION_RATE",
            "ori(starttime) >= Sum(userRewardPerTokenPaid[...])",
            "ori(starttime) > Sum(userRewardPerTokenPaid[...])",
            "ori(starttime) >= Sum(lastStakeTimes[...])",
            "ori(starttime) > Sum(lastStakeTimes[...])",
            "ori(starttime) >= Sum(rewards[...])",
            "ori(starttime) > Sum(rewards[...])",
            "vETH_REWARD_FRACTION_RATE >= Sum(userRewardPerTokenPaid[...])",
            "vETH_REWARD_FRACTION_RATE > Sum(userRewardPerTokenPaid[...])",
            "vETH_REWARD_FRACTION_RATE >= ori(Sum(rewards[...]))",
            "vETH_REWARD_FRACTION_RATE > ori(Sum(rewards[...]))",
            "vETH_REWARD_FRACTION_RATE >= Sum(rewards[...])",
            "vETH_REWARD_FRACTION_RATE > Sum(rewards[...])",
            "vETH_REWARD_FRACTION_RATE >= ori(Sum(_balances[...]))",
            "vETH_REWARD_FRACTION_RATE > ori(Sum(_balances[...]))",
            "vETH_REWARD_FRACTION_RATE >= ori(Sum(userRewardPerTokenPaid[...]))",
            "vETH_REWARD_FRACTION_RATE > ori(Sum(userRewardPerTokenPaid[...]))",
            "currentEpochReward >= ori(Sum(_balances[...]))",
            "currentEpochReward > ori(Sum(_balances[...]))",
            "currentEpochReward >= totalAccumulatedReward",
            "Sum(userRewardPerTokenPaid[...]) == ori(Sum(rewards[...]))",
            "Sum(userRewardPerTokenPaid[...]) >= ori(Sum(rewards[...]))",
            "Sum(userRewardPerTokenPaid[...]) <= ori(Sum(rewards[...]))",
            "Sum(userRewardPerTokenPaid[...]) == Sum(lastStakeTimes[...])",
            "Sum(userRewardPerTokenPaid[...]) >= Sum(lastStakeTimes[...])",
            "Sum(userRewardPerTokenPaid[...]) <= Sum(lastStakeTimes[...])",
            "Sum(userRewardPerTokenPaid[...]) == Sum(rewards[...])",
            "Sum(userRewardPerTokenPaid[...]) >= Sum(rewards[...])",
            "Sum(userRewardPerTokenPaid[...]) <= Sum(rewards[...])",
            "Sum(userRewardPerTokenPaid[...]) == ori(periodFinish)",
            "Sum(userRewardPerTokenPaid[...]) >= ori(periodFinish)",
            "Sum(userRewardPerTokenPaid[...]) <= ori(periodFinish)",
            "Sum(userRewardPerTokenPaid[...]) <= vUSD_REWARD_FRACTION_RATE",
            "Sum(userRewardPerTokenPaid[...]) < vUSD_REWARD_FRACTION_RATE",
            "Sum(userRewardPerTokenPaid[...]) == ori(Sum(_balances[...]))",
            "Sum(userRewardPerTokenPaid[...]) >= ori(Sum(_balances[...]))",
            "Sum(userRewardPerTokenPaid[...]) == ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(userRewardPerTokenPaid[...]) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(rewards[...])) == Sum(lastStakeTimes[...])",
            "ori(Sum(rewards[...])) >= Sum(lastStakeTimes[...])",
            "ori(Sum(rewards[...])) <= Sum(lastStakeTimes[...])",
            "ori(Sum(rewards[...])) == Sum(rewards[...])",
            "ori(Sum(rewards[...])) >= Sum(rewards[...])",
            "ori(Sum(rewards[...])) <= Sum(rewards[...])",
            "ori(Sum(rewards[...])) <= vUSD_REWARD_FRACTION_RATE",
            "ori(Sum(rewards[...])) < vUSD_REWARD_FRACTION_RATE",
            "Sum(lastStakeTimes[...]) == Sum(rewards[...])",
            "Sum(lastStakeTimes[...]) >= Sum(rewards[...])",
            "Sum(lastStakeTimes[...]) <= Sum(rewards[...])",
            "Sum(lastStakeTimes[...]) == ori(periodFinish)",
            "Sum(lastStakeTimes[...]) >= ori(periodFinish)",
            "Sum(lastStakeTimes[...]) <= ori(periodFinish)",
            "Sum(lastStakeTimes[...]) <= vUSD_REWARD_FRACTION_RATE",
            "Sum(lastStakeTimes[...]) < vUSD_REWARD_FRACTION_RATE",
            "Sum(lastStakeTimes[...]) == ori(Sum(_balances[...]))",
            "Sum(lastStakeTimes[...]) >= ori(Sum(_balances[...]))",
            "Sum(lastStakeTimes[...]) <= ori(Sum(_balances[...]))",
            "Sum(lastStakeTimes[...]) == ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(lastStakeTimes[...]) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(lastStakeTimes[...]) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(rewards[...]) == ori(periodFinish)",
            "Sum(rewards[...]) >= ori(periodFinish)",
            "Sum(rewards[...]) <= ori(periodFinish)",
            "Sum(rewards[...]) <= vUSD_REWARD_FRACTION_RATE",
            "Sum(rewards[...]) < vUSD_REWARD_FRACTION_RATE",
            "Sum(rewards[...]) == ori(Sum(_balances[...]))",
            "Sum(rewards[...]) >= ori(Sum(_balances[...]))",
            "Sum(rewards[...]) == ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(rewards[...]) >= ori(Sum(userRewardPerTokenPaid[...]))",
            "Sum(rewards[...]) <= ori(Sum(userRewardPerTokenPaid[...]))",
            "vUSD_REWARD_FRACTION_RATE >= ori(Sum(_balances[...]))",
            "vUSD_REWARD_FRACTION_RATE > ori(Sum(_balances[...]))",
            "vUSD_REWARD_FRACTION_RATE >= ori(Sum(userRewardPerTokenPaid[...]))",
            "vUSD_REWARD_FRACTION_RATE > ori(Sum(userRewardPerTokenPaid[...]))",
            "ori(Sum(_balances[...])) <= totalAccumulatedReward"
        ]
    }
]