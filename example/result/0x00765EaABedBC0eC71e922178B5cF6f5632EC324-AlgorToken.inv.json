[
    {
        "func": "approve(_spender,_value)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "approve(_spender,_value)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "transferFrom(_from,_to,_value)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "transferFrom(_from,_to,_value)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "transfer(_to,_value)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [
            "ori(Sum(balances[...])) > 0",
            "ori(Sum(balances[...])) == 10000000000000000000000000000",
            "ori(Sum(balances[...])) one of [10000000000000000000000000000]",
            "_to != 0",
            "msg.sender != 0",
            "_value > 0",
            "ori(decimals) > 0",
            "ori(decimals) == 18",
            "ori(decimals) one of [18]",
            "ori(totalSupply) > 0",
            "ori(totalSupply) == 10000000000000000000000000000",
            "ori(totalSupply) one of [10000000000000000000000000000]",
            "ori(balances[_to]) one of [0,1000000000000000000,165000000000000000000,100000000000000000000,103000000000000000000]",
            "ori(balances[msg.sender]) > 0",
            "msg.value == 0",
            "msg.value one of [0]",
            "ori(Sum(balances[...])) >= _value",
            "ori(Sum(balances[...])) > _value",
            "ori(Sum(balances[...])) != _value",
            "ori(Sum(balances[...])) >= ori(decimals)",
            "ori(Sum(balances[...])) > ori(decimals)",
            "ori(Sum(balances[...])) != ori(decimals)",
            "ori(Sum(balances[...])) == ori(totalSupply)",
            "ori(Sum(balances[...])) >= ori(totalSupply)",
            "ori(Sum(balances[...])) <= ori(totalSupply)",
            "ori(Sum(balances[...])) >= ori(balances[_to])",
            "ori(Sum(balances[...])) > ori(balances[_to])",
            "ori(Sum(balances[...])) != ori(balances[_to])",
            "ori(Sum(balances[...])) >= ori(balances[msg.sender])",
            "ori(Sum(balances[...])) >= msg.value",
            "ori(Sum(balances[...])) > msg.value",
            "ori(Sum(balances[...])) != msg.value",
            "_to != msg.sender",
            "_value >= ori(decimals)",
            "_value > ori(decimals)",
            "_value != ori(decimals)",
            "_value <= ori(totalSupply)",
            "_value < ori(totalSupply)",
            "_value != ori(totalSupply)",
            "_value != ori(balances[_to])",
            "_value <= ori(balances[msg.sender])",
            "_value >= msg.value",
            "_value > msg.value",
            "_value != msg.value",
            "ori(decimals) <= ori(totalSupply)",
            "ori(decimals) < ori(totalSupply)",
            "ori(decimals) != ori(totalSupply)",
            "ori(decimals) != ori(balances[_to])",
            "ori(decimals) <= ori(balances[msg.sender])",
            "ori(decimals) < ori(balances[msg.sender])",
            "ori(decimals) != ori(balances[msg.sender])",
            "ori(decimals) >= msg.value",
            "ori(decimals) > msg.value",
            "ori(decimals) != msg.value",
            "ori(totalSupply) >= ori(balances[_to])",
            "ori(totalSupply) > ori(balances[_to])",
            "ori(totalSupply) != ori(balances[_to])",
            "ori(totalSupply) >= ori(balances[msg.sender])",
            "ori(totalSupply) >= msg.value",
            "ori(totalSupply) > msg.value",
            "ori(totalSupply) != msg.value",
            "ori(balances[_to]) <= ori(balances[msg.sender])",
            "ori(balances[_to]) < ori(balances[msg.sender])",
            "ori(balances[_to]) != ori(balances[msg.sender])",
            "ori(balances[_to]) >= msg.value",
            "ori(balances[msg.sender]) >= msg.value",
            "ori(balances[msg.sender]) > msg.value",
            "ori(balances[msg.sender]) != msg.value"
        ],
        "postconditions": [
            "Sum(balances[...]) > 0",
            "Sum(balances[...]) == 10000000000000000000000000000",
            "Sum(balances[...]) one of [10000000000000000000000000000]",
            "balances[_to] > 0",
            "totalSupply > 0",
            "totalSupply == 10000000000000000000000000000",
            "totalSupply one of [10000000000000000000000000000]",
            "elem of balances[...] is one of [10000000000000000000000000000]",
            "decimals > 0",
            "decimals == 18",
            "decimals one of [18]",
            "ori(Sum(balances[...])) == Sum(balances[...])",
            "ori(Sum(balances[...])) >= Sum(balances[...])",
            "ori(Sum(balances[...])) <= Sum(balances[...])",
            "ori(Sum(balances[...])) >= balances[_to]",
            "ori(Sum(balances[...])) == totalSupply",
            "ori(Sum(balances[...])) >= totalSupply",
            "ori(Sum(balances[...])) <= totalSupply",
            "ori(Sum(balances[...])) >= decimals",
            "ori(Sum(balances[...])) > decimals",
            "ori(Sum(balances[...])) != decimals",
            "ori(Sum(balances[...])) >= balances[msg.sender]",
            "ori(Sum(balances[...])) > balances[msg.sender]",
            "ori(Sum(balances[...])) != balances[msg.sender]",
            "_value <= Sum(balances[...])",
            "_value < Sum(balances[...])",
            "_value != Sum(balances[...])",
            "_value <= balances[_to]",
            "_value <= totalSupply",
            "_value < totalSupply",
            "_value != totalSupply",
            "_value >= decimals",
            "_value > decimals",
            "_value != decimals",
            "_value != balances[msg.sender]",
            "Sum(balances[...]) >= balances[_to]",
            "Sum(balances[...]) == totalSupply",
            "Sum(balances[...]) >= totalSupply",
            "Sum(balances[...]) <= totalSupply",
            "Sum(balances[...]) >= ori(decimals)",
            "Sum(balances[...]) > ori(decimals)",
            "Sum(balances[...]) != ori(decimals)",
            "Sum(balances[...]) >= decimals",
            "Sum(balances[...]) > decimals",
            "Sum(balances[...]) != decimals",
            "Sum(balances[...]) == ori(totalSupply)",
            "Sum(balances[...]) >= ori(totalSupply)",
            "Sum(balances[...]) <= ori(totalSupply)",
            "Sum(balances[...]) >= ori(balances[_to])",
            "Sum(balances[...]) > ori(balances[_to])",
            "Sum(balances[...]) != ori(balances[_to])",
            "Sum(balances[...]) >= ori(balances[msg.sender])",
            "Sum(balances[...]) >= balances[msg.sender]",
            "Sum(balances[...]) > balances[msg.sender]",
            "Sum(balances[...]) != balances[msg.sender]",
            "Sum(balances[...]) >= msg.value",
            "Sum(balances[...]) > msg.value",
            "Sum(balances[...]) != msg.value",
            "balances[_to] <= totalSupply",
            "balances[_to] >= ori(decimals)",
            "balances[_to] > ori(decimals)",
            "balances[_to] != ori(decimals)",
            "balances[_to] >= decimals",
            "balances[_to] > decimals",
            "balances[_to] != decimals",
            "balances[_to] <= ori(totalSupply)",
            "balances[_to] >= ori(balances[_to])",
            "balances[_to] > ori(balances[_to])",
            "balances[_to] != ori(balances[_to])",
            "balances[_to] != ori(balances[msg.sender])",
            "balances[_to] != balances[msg.sender]",
            "balances[_to] >= msg.value",
            "balances[_to] > msg.value",
            "balances[_to] != msg.value",
            "totalSupply >= ori(decimals)",
            "totalSupply > ori(decimals)",
            "totalSupply != ori(decimals)",
            "totalSupply >= decimals",
            "totalSupply > decimals",
            "totalSupply != decimals",
            "totalSupply == ori(totalSupply)",
            "totalSupply >= ori(totalSupply)",
            "totalSupply <= ori(totalSupply)",
            "totalSupply >= ori(balances[_to])",
            "totalSupply > ori(balances[_to])",
            "totalSupply != ori(balances[_to])",
            "totalSupply >= ori(balances[msg.sender])",
            "totalSupply >= balances[msg.sender]",
            "totalSupply > balances[msg.sender]",
            "totalSupply != balances[msg.sender]",
            "totalSupply >= msg.value",
            "totalSupply > msg.value",
            "totalSupply != msg.value",
            "ori(decimals) == decimals",
            "ori(decimals) >= decimals",
            "ori(decimals) <= decimals",
            "ori(decimals) != balances[msg.sender]",
            "decimals <= ori(totalSupply)",
            "decimals < ori(totalSupply)",
            "decimals != ori(totalSupply)",
            "decimals != ori(balances[_to])",
            "decimals <= ori(balances[msg.sender])",
            "decimals < ori(balances[msg.sender])",
            "decimals != ori(balances[msg.sender])",
            "decimals != balances[msg.sender]",
            "decimals >= msg.value",
            "decimals > msg.value",
            "decimals != msg.value",
            "ori(totalSupply) >= balances[msg.sender]",
            "ori(totalSupply) > balances[msg.sender]",
            "ori(totalSupply) != balances[msg.sender]",
            "ori(balances[_to]) != balances[msg.sender]",
            "ori(balances[msg.sender]) >= balances[msg.sender]",
            "ori(balances[msg.sender]) > balances[msg.sender]",
            "ori(balances[msg.sender]) != balances[msg.sender]",
            "balances[msg.sender] >= msg.value",
            "balances[msg.sender] + _value == ori(balances[msg.sender])"
        ],
        "falsified_preconditions": [
            "_value >= ori(balances[_to])",
            "_value > ori(balances[_to])"
        ],
        "falsified_postconditions": [
            "balances[msg.sender] + _value == ori(Sum(balances[...]))",
            "balances[msg.sender] + _value == ori(totalSupply)"
        ]
    },
    {
        "func": "transfer(_to,_value)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": null,
        "type": "PptType.CONTRACT",
        "executionType": "TxType.NORMAL",
        "preconditions": [
            "ori(Sum(balances[...])) > 0",
            "ori(Sum(balances[...])) == 10000000000000000000000000000",
            "ori(Sum(balances[...])) one of [10000000000000000000000000000]",
            "ori(totalSupply) > 0",
            "ori(totalSupply) == 10000000000000000000000000000",
            "ori(totalSupply) one of [10000000000000000000000000000]",
            "ori(decimals) > 0",
            "ori(decimals) == 18",
            "ori(decimals) one of [18]",
            "ori(Sum(balances[...])) == ori(totalSupply)",
            "ori(Sum(balances[...])) >= ori(totalSupply)",
            "ori(Sum(balances[...])) <= ori(totalSupply)",
            "ori(Sum(balances[...])) >= ori(decimals)",
            "ori(Sum(balances[...])) > ori(decimals)",
            "ori(Sum(balances[...])) != ori(decimals)",
            "ori(totalSupply) >= ori(decimals)",
            "ori(totalSupply) > ori(decimals)",
            "ori(totalSupply) != ori(decimals)"
        ],
        "postconditions": [
            "decimals > 0",
            "decimals == 18",
            "decimals one of [18]",
            "elem of balances[...] is one of [10000000000000000000000000000]",
            "Sum(balances[...]) > 0",
            "Sum(balances[...]) == 10000000000000000000000000000",
            "Sum(balances[...]) one of [10000000000000000000000000000]",
            "totalSupply > 0",
            "totalSupply == 10000000000000000000000000000",
            "totalSupply one of [10000000000000000000000000000]",
            "decimals <= ori(Sum(balances[...]))",
            "decimals < ori(Sum(balances[...]))",
            "decimals != ori(Sum(balances[...]))",
            "decimals <= ori(totalSupply)",
            "decimals < ori(totalSupply)",
            "decimals != ori(totalSupply)",
            "decimals == ori(decimals)",
            "decimals >= ori(decimals)",
            "decimals <= ori(decimals)",
            "decimals <= Sum(balances[...])",
            "decimals < Sum(balances[...])",
            "decimals != Sum(balances[...])",
            "decimals <= totalSupply",
            "decimals < totalSupply",
            "decimals != totalSupply",
            "ori(Sum(balances[...])) == Sum(balances[...])",
            "ori(Sum(balances[...])) >= Sum(balances[...])",
            "ori(Sum(balances[...])) <= Sum(balances[...])",
            "ori(Sum(balances[...])) == totalSupply",
            "ori(Sum(balances[...])) >= totalSupply",
            "ori(Sum(balances[...])) <= totalSupply",
            "ori(totalSupply) == Sum(balances[...])",
            "ori(totalSupply) >= Sum(balances[...])",
            "ori(totalSupply) <= Sum(balances[...])",
            "ori(totalSupply) == totalSupply",
            "ori(totalSupply) >= totalSupply",
            "ori(totalSupply) <= totalSupply",
            "ori(decimals) <= Sum(balances[...])",
            "ori(decimals) < Sum(balances[...])",
            "ori(decimals) != Sum(balances[...])",
            "ori(decimals) <= totalSupply",
            "ori(decimals) < totalSupply",
            "ori(decimals) != totalSupply",
            "Sum(balances[...]) == totalSupply",
            "Sum(balances[...]) >= totalSupply",
            "Sum(balances[...]) <= totalSupply"
        ],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    }
]