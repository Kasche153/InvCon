[
    {
        "func": "approve(_spender,_value)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "approve(_spender,_value)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "transferFrom(_from,_to,_value)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "transferFrom(_from,_to,_value)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "transfer(_to,_value)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [
            "ori(balances[msg.sender]) > 0",
            "ori(totalSupply) == 0",
            "ori(totalSupply) one of [0]",
            "ori(decimals) > 0",
            "ori(decimals) == 18",
            "ori(decimals) one of [18]",
            "ori(Sum(balances[...])) > 0",
            "ori(Sum(balances[...])) == 15000000000000000000000000000",
            "ori(Sum(balances[...])) one of [15000000000000000000000000000]",
            "msg.sender != 0",
            "_to != 0",
            "_value > 0",
            "msg.value == 0",
            "msg.value one of [0]",
            "ori(balances[msg.sender]) >= ori(totalSupply)",
            "ori(balances[msg.sender]) > ori(totalSupply)",
            "ori(balances[msg.sender]) != ori(totalSupply)",
            "ori(balances[msg.sender]) >= ori(decimals)",
            "ori(balances[msg.sender]) > ori(decimals)",
            "ori(balances[msg.sender]) != ori(decimals)",
            "ori(balances[msg.sender]) <= ori(Sum(balances[...]))",
            "ori(balances[msg.sender]) != ori(balances[_to])",
            "ori(balances[msg.sender]) >= _value",
            "ori(balances[msg.sender]) >= msg.value",
            "ori(balances[msg.sender]) > msg.value",
            "ori(balances[msg.sender]) != msg.value",
            "ori(totalSupply) <= ori(decimals)",
            "ori(totalSupply) < ori(decimals)",
            "ori(totalSupply) != ori(decimals)",
            "ori(totalSupply) <= ori(Sum(balances[...]))",
            "ori(totalSupply) < ori(Sum(balances[...]))",
            "ori(totalSupply) != ori(Sum(balances[...]))",
            "ori(totalSupply) <= ori(balances[_to])",
            "ori(totalSupply) <= _value",
            "ori(totalSupply) < _value",
            "ori(totalSupply) != _value",
            "ori(totalSupply) == msg.value",
            "ori(totalSupply) >= msg.value",
            "ori(totalSupply) <= msg.value",
            "ori(decimals) <= ori(Sum(balances[...]))",
            "ori(decimals) < ori(Sum(balances[...]))",
            "ori(decimals) != ori(Sum(balances[...]))",
            "ori(decimals) != ori(balances[_to])",
            "ori(decimals) <= _value",
            "ori(decimals) < _value",
            "ori(decimals) != _value",
            "ori(decimals) >= msg.value",
            "ori(decimals) > msg.value",
            "ori(decimals) != msg.value",
            "ori(Sum(balances[...])) >= ori(balances[_to])",
            "ori(Sum(balances[...])) > ori(balances[_to])",
            "ori(Sum(balances[...])) != ori(balances[_to])",
            "ori(Sum(balances[...])) >= _value",
            "ori(Sum(balances[...])) > _value",
            "ori(Sum(balances[...])) != _value",
            "ori(Sum(balances[...])) >= msg.value",
            "ori(Sum(balances[...])) > msg.value",
            "ori(Sum(balances[...])) != msg.value",
            "msg.sender != _to",
            "ori(balances[_to]) >= msg.value",
            "_value >= msg.value",
            "_value > msg.value",
            "_value != msg.value"
        ],
        "postconditions": [
            "totalSupply == 0",
            "totalSupply one of [0]",
            "Sum(balances[...]) > 0",
            "Sum(balances[...]) == 15000000000000000000000000000",
            "Sum(balances[...]) one of [15000000000000000000000000000]",
            "balances[_to] > 0",
            "decimals > 0",
            "decimals == 18",
            "decimals one of [18]",
            "elem of balances[...] is one of [15000000000000000000000000000]",
            "totalSupply <= ori(balances[msg.sender])",
            "totalSupply < ori(balances[msg.sender])",
            "totalSupply != ori(balances[msg.sender])",
            "totalSupply <= Sum(balances[...])",
            "totalSupply < Sum(balances[...])",
            "totalSupply != Sum(balances[...])",
            "totalSupply == ori(totalSupply)",
            "totalSupply >= ori(totalSupply)",
            "totalSupply <= ori(totalSupply)",
            "totalSupply <= balances[_to]",
            "totalSupply < balances[_to]",
            "totalSupply != balances[_to]",
            "totalSupply <= ori(decimals)",
            "totalSupply < ori(decimals)",
            "totalSupply != ori(decimals)",
            "totalSupply <= ori(Sum(balances[...]))",
            "totalSupply < ori(Sum(balances[...]))",
            "totalSupply != ori(Sum(balances[...]))",
            "totalSupply <= ori(balances[_to])",
            "totalSupply <= decimals",
            "totalSupply < decimals",
            "totalSupply != decimals",
            "totalSupply <= _value",
            "totalSupply < _value",
            "totalSupply != _value",
            "totalSupply == msg.value",
            "totalSupply >= msg.value",
            "totalSupply <= msg.value",
            "totalSupply <= balances[msg.sender]",
            "ori(balances[msg.sender]) <= Sum(balances[...])",
            "ori(balances[msg.sender]) >= decimals",
            "ori(balances[msg.sender]) > decimals",
            "ori(balances[msg.sender]) != decimals",
            "ori(balances[msg.sender]) >= balances[msg.sender]",
            "ori(balances[msg.sender]) > balances[msg.sender]",
            "ori(balances[msg.sender]) != balances[msg.sender]",
            "Sum(balances[...]) >= ori(totalSupply)",
            "Sum(balances[...]) > ori(totalSupply)",
            "Sum(balances[...]) != ori(totalSupply)",
            "Sum(balances[...]) >= balances[_to]",
            "Sum(balances[...]) > balances[_to]",
            "Sum(balances[...]) != balances[_to]",
            "Sum(balances[...]) >= ori(decimals)",
            "Sum(balances[...]) > ori(decimals)",
            "Sum(balances[...]) != ori(decimals)",
            "Sum(balances[...]) == ori(Sum(balances[...]))",
            "Sum(balances[...]) >= ori(Sum(balances[...]))",
            "Sum(balances[...]) <= ori(Sum(balances[...]))",
            "Sum(balances[...]) >= ori(balances[_to])",
            "Sum(balances[...]) > ori(balances[_to])",
            "Sum(balances[...]) != ori(balances[_to])",
            "Sum(balances[...]) >= decimals",
            "Sum(balances[...]) > decimals",
            "Sum(balances[...]) != decimals",
            "Sum(balances[...]) >= _value",
            "Sum(balances[...]) > _value",
            "Sum(balances[...]) != _value",
            "Sum(balances[...]) >= msg.value",
            "Sum(balances[...]) > msg.value",
            "Sum(balances[...]) != msg.value",
            "Sum(balances[...]) >= balances[msg.sender]",
            "Sum(balances[...]) > balances[msg.sender]",
            "Sum(balances[...]) != balances[msg.sender]",
            "ori(totalSupply) <= balances[_to]",
            "ori(totalSupply) < balances[_to]",
            "ori(totalSupply) != balances[_to]",
            "ori(totalSupply) <= decimals",
            "ori(totalSupply) < decimals",
            "ori(totalSupply) != decimals",
            "ori(totalSupply) <= balances[msg.sender]",
            "balances[_to] >= ori(decimals)",
            "balances[_to] > ori(decimals)",
            "balances[_to] != ori(decimals)",
            "balances[_to] <= ori(Sum(balances[...]))",
            "balances[_to] < ori(Sum(balances[...]))",
            "balances[_to] != ori(Sum(balances[...]))",
            "balances[_to] >= ori(balances[_to])",
            "balances[_to] > ori(balances[_to])",
            "balances[_to] != ori(balances[_to])",
            "balances[_to] >= decimals",
            "balances[_to] > decimals",
            "balances[_to] != decimals",
            "balances[_to] >= _value",
            "balances[_to] >= msg.value",
            "balances[_to] > msg.value",
            "balances[_to] != msg.value",
            "ori(decimals) == decimals",
            "ori(decimals) >= decimals",
            "ori(decimals) <= decimals",
            "ori(decimals) != balances[msg.sender]",
            "ori(Sum(balances[...])) >= decimals",
            "ori(Sum(balances[...])) > decimals",
            "ori(Sum(balances[...])) != decimals",
            "ori(Sum(balances[...])) >= balances[msg.sender]",
            "ori(Sum(balances[...])) > balances[msg.sender]",
            "ori(Sum(balances[...])) != balances[msg.sender]",
            "ori(balances[_to]) != decimals",
            "decimals <= _value",
            "decimals < _value",
            "decimals != _value",
            "decimals >= msg.value",
            "decimals > msg.value",
            "decimals != msg.value",
            "decimals != balances[msg.sender]",
            "msg.value <= balances[msg.sender]",
            "balances[msg.sender] + _value == ori(balances[msg.sender])"
        ],
        "falsified_preconditions": [
            "ori(balances[msg.sender]) >= ori(balances[_to])",
            "ori(balances[msg.sender]) > ori(balances[_to])",
            "ori(balances[msg.sender]) > _value",
            "ori(balances[msg.sender]) != _value",
            "ori(balances[_to]) <= _value",
            "ori(balances[_to]) < _value",
            "ori(balances[_to]) != _value"
        ],
        "falsified_postconditions": [
            "balances[msg.sender] > 0",
            "totalSupply < balances[msg.sender]",
            "totalSupply != balances[msg.sender]",
            "ori(balances[msg.sender]) >= balances[_to]",
            "ori(balances[msg.sender]) > balances[_to]",
            "ori(balances[msg.sender]) != balances[_to]",
            "ori(totalSupply) < balances[msg.sender]",
            "ori(totalSupply) != balances[msg.sender]",
            "balances[_to] <= balances[msg.sender]",
            "balances[_to] < balances[msg.sender]",
            "balances[_to] != balances[msg.sender]",
            "ori(decimals) <= balances[msg.sender]",
            "ori(decimals) < balances[msg.sender]",
            "ori(balances[_to]) <= balances[msg.sender]",
            "ori(balances[_to]) < balances[msg.sender]",
            "ori(balances[_to]) != balances[msg.sender]",
            "decimals <= balances[msg.sender]",
            "decimals < balances[msg.sender]",
            "_value <= balances[msg.sender]",
            "_value < balances[msg.sender]",
            "_value != balances[msg.sender]",
            "msg.value < balances[msg.sender]",
            "msg.value != balances[msg.sender]"
        ]
    },
    {
        "func": "transfer(_to,_value)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "approveAndCall(_spender,_value,_extraData)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "approveAndCall(_spender,_value,_extraData)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": null,
        "type": "PptType.CONTRACT",
        "executionType": "TxType.NORMAL",
        "preconditions": [
            "ori(totalSupply) == 0",
            "ori(totalSupply) one of [0]",
            "ori(decimals) > 0",
            "ori(decimals) == 18",
            "ori(decimals) one of [18]",
            "ori(Sum(balances[...])) > 0",
            "ori(Sum(balances[...])) == 15000000000000000000000000000",
            "ori(Sum(balances[...])) one of [15000000000000000000000000000]",
            "ori(totalSupply) <= ori(decimals)",
            "ori(totalSupply) < ori(decimals)",
            "ori(totalSupply) != ori(decimals)",
            "ori(totalSupply) <= ori(Sum(balances[...]))",
            "ori(totalSupply) < ori(Sum(balances[...]))",
            "ori(totalSupply) != ori(Sum(balances[...]))",
            "ori(decimals) <= ori(Sum(balances[...]))",
            "ori(decimals) < ori(Sum(balances[...]))",
            "ori(decimals) != ori(Sum(balances[...]))"
        ],
        "postconditions": [
            "totalSupply == 0",
            "totalSupply one of [0]",
            "Sum(balances[...]) > 0",
            "Sum(balances[...]) == 15000000000000000000000000000",
            "Sum(balances[...]) one of [15000000000000000000000000000]",
            "decimals > 0",
            "decimals == 18",
            "decimals one of [18]",
            "elem of balances[...] is one of [15000000000000000000000000000]",
            "totalSupply == ori(totalSupply)",
            "totalSupply >= ori(totalSupply)",
            "totalSupply <= ori(totalSupply)",
            "totalSupply <= Sum(balances[...])",
            "totalSupply < Sum(balances[...])",
            "totalSupply != Sum(balances[...])",
            "totalSupply <= ori(decimals)",
            "totalSupply < ori(decimals)",
            "totalSupply != ori(decimals)",
            "totalSupply <= ori(Sum(balances[...]))",
            "totalSupply < ori(Sum(balances[...]))",
            "totalSupply != ori(Sum(balances[...]))",
            "totalSupply <= decimals",
            "totalSupply < decimals",
            "totalSupply != decimals",
            "ori(totalSupply) <= Sum(balances[...])",
            "ori(totalSupply) < Sum(balances[...])",
            "ori(totalSupply) != Sum(balances[...])",
            "ori(totalSupply) <= decimals",
            "ori(totalSupply) < decimals",
            "ori(totalSupply) != decimals",
            "Sum(balances[...]) >= ori(decimals)",
            "Sum(balances[...]) > ori(decimals)",
            "Sum(balances[...]) != ori(decimals)",
            "Sum(balances[...]) == ori(Sum(balances[...]))",
            "Sum(balances[...]) >= ori(Sum(balances[...]))",
            "Sum(balances[...]) <= ori(Sum(balances[...]))",
            "Sum(balances[...]) >= decimals",
            "Sum(balances[...]) > decimals",
            "Sum(balances[...]) != decimals",
            "ori(decimals) == decimals",
            "ori(decimals) >= decimals",
            "ori(decimals) <= decimals",
            "ori(Sum(balances[...])) >= decimals",
            "ori(Sum(balances[...])) > decimals",
            "ori(Sum(balances[...])) != decimals"
        ],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    }
]